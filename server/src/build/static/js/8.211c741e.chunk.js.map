{"version":3,"sources":["utils/pdf.js","../node_modules/@mui/icons-material/FileDownload.js","action/votingAction.js","component/DoughnutChart.js","component/AddCandidateForm.js","component/AddVoterForm.js","component/SaveResult.js","../node_modules/@mui/icons-material/LabelImportantRounded.js","../node_modules/@mui/icons-material/HowToVote.js","../node_modules/@mui/icons-material/Done.js","component/DeleteVotingForm.js","page/VotingManage.js"],"names":["exportDD","body","title","pageOrientation","content","columns","text","alignment","Date","getDate","getMonth","getFullYear","style","bold","margin","color","table","headerRows","widths","styles","header","fontSize","tableExample","tableHeader","partyMemberPDF","data","rowSpan","colSpan","map","el","index","push","HoTen","MaSoDangVien","TenGioiTinh","getLocaleDate","NgaySinh","NoiSinh","NgayVaoDang","NgayChinhThuc","NoiVaoDangLanDau","NoiVaoDangChinhThuc","SoThe","TenChucVu","TenDanToc","TenTonGiao","gradePDF","TenChiBo","TenLoai","Nam","moveOutPDF","TenHinhThuc","ChuyenTuDangBo","TenChiBoTu","ChuyenDenDangBo","TenChiBoDen","NgayChuyenDi","NgayChuyenDen","GhiChu","moveInPDF","moveInternalPDF","movePDF","LoaiHinhThuc","rewardPDF","TenKhenThuong","NgayKhenThuong","HinhThuc","disciplinePDF","TenKyLuat","NgayKyLuat","partycellPDF","MaChiBo","BiThu","PhoBiThu","SoDangVien","votingResultConfidencePDF","result","noVoting","console","log","TenBieuQuyet","ThoiGianBatDau","ThoiGianKetThuc","UngCuVien","NguoiThamGia","SoPhieuTinNhiem","SoPhieuKhongTinNhiem","TiLeTinNhiem","TiLeKhongTinNhiem","italics","getLocaleDateTime","length","toFixed","header1","defaultStyle","lineHeight","votingResultPDF","SoPhieu","TiLe","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","createPoll","payload","a","axios","post","res","status","response","updatePoll","put","MaBieuQuyet","error","getAllPoll","get","checkIsVoted","vote","getResult","id","deletePoll","delete","getPollByTime","getVotes","getNoVoting","mailing","DoughnutChart","label","twoColor","shuffled","sort","Math","random","component","textAlign","variant","labels","datasets","backgroundColor","quantity","option","display","useStyles","makeStyles","theme","inputItem","marginBottom","spacing","inputWrapper","position","closeIcon","top","right","palette","common","white","cursor","AddCandidateForm","props","setCandidate","useState","open","setOpen","useContext","CategoryContext","category","info","categoryDispatch","InfoContext","openSnackbarDispatch","SnackbarContext","loadingDispatch","LoadingContext","DePer","Quyen","checked","setChecked","left","setLeft","setRight","fieldArr","setFieldArr","fieldValue","setFieldValue","yearGradeArr","setYearGradeArr","yearGrade","setYearGrade","pollArr","setPollArr","useForm","handleSubmit","register","control","setValue","getValues","watch","setError","clearErrors","reset","errors","formState","handleClose","handleAdd","type","msg","MaUngCuVien","onSubmit","grade","partycell","filterPartyMember","onSubmitByPoll","poll","Data","handleChangeSelect","e","target","name","not","b","filter","indexOf","intersection","leftChecked","rightChecked","handleToggle","currentIndex","newChecked","splice","handleAllRight","concat","reduce","unique","o","some","obj","handleCheckedRight","handleCheckedLeft","handleAllLeft","handleResetAll","handleChangeFieldValue","handleChangeYear","forEach","handleSubmitDate","TuNgay","DenNgay","message","handleReset","useRef","current","useEffect","categories","customList","items","sx","width","height","overflow","dense","role","labelId","button","onClick","tabIndex","disableRipple","inputProps","hasOwnProperty","primary","success","PaperProps","minWidth","onClose","container","item","xs","select","onChange","nameTitle","defaultValue","marginTop","flex","marginRight","alignItems","noTitle","rules","validate","mt","textOverflow","whiteSpace","PhamVi","justifyContent","direction","my","size","disabled","AddVoterForm","setVoter","isDeP","includeReserve","setIncludeReserve","setGradeArr","notreserve","MaChucVu","MaNguoiThamGia","icon","iconWrapper","divider","SaveResult","resultState","setResultState","voteFor","MucDich","openSnackbar","DanhSach","createRewardDisciplines","LuuKetQua","fullWidth","multiline","minRows","center","btn","main","dark","DeleteVotingForm","classes","fetchAllPoll","MyButton","marginLeft","small","Dialog","DialogTitle","DialogContent","className","dialogContent","Typography","DialogActions","Button","headerContent","textTransform","fontWeight","paper","padding","paperForm","Voting","useHistory","candidate","voter","editOpen","setEditOpen","editState","setEditState","setLabel","setQuantity","quantityCurrent","setQuantityCurrent","quantityPer","setQuantityPer","resultVoting","setResultVoting","votesList","setVotesList","noVotingList","setNoVotingList","indexForm","setIndexForm","setType","SoPhut","handleChangeType","handleEditToggle","newEdit","getResultAPI","SoLuongBieuQuyet","SoLuong","getVotesAPI","getNoVotingAPI","handleSendEmail","ThoiGianNhacNho","LoaiBieuQuyet","SoPhieuToiDa","getDateTime","getAllCategory","VotingResultForm","openResult","setOpenResult","setData","getRate","all","quan","field","rows","columnsVote","setColumnsVote","rowsVote","setRowsVote","columnsNoVote","rowsNoVote","setRowsNoVote","dataResult","useMemo","getExportData","column","align","render","params","keys","i","Email","SoDienThoai","Paper","options","legend","Grid","TableContainer","mb","headers","filename","dd","pdfmakedownload","ml","mr","components","Container","Chip","varian","actions","tooltip","event","rowData","sorting","search","paging","selection","checkEditOpen","every","checkOpen","Layout","sidebar","Fragment","getDateStatus","getStatus","newOpen","InputGrid","required","MenuItem","InputProps","min","date","setMinutes","getMinutes"],"mappings":"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","file":"static/js/8.211c741e.chunk.js","sourcesContent":["import { getLocaleDate, getLocaleDateTime } from \"./utils\"\r\n\r\nconst exportDD = (body, title, pageOrientation = \"portrait\") => {\r\n    return {\r\n        pageOrientation: pageOrientation,\r\n        content: [\r\n            {\r\n                columns: [\r\n                    {\r\n                        text: [\r\n                            'ĐẢNG BỘ ĐẠI HỌC CẦN THƠ \\n',\r\n                            'CHI BỘ KHOA CNTT&TT'\r\n                        ],\r\n                        alignment: 'center'\r\n                    },\r\n                    {\r\n                        text: [\r\n                        ],\r\n                    },\r\n                    [\r\n                        {\r\n                            text: 'ĐẢNG CỘNG SẢN VIỆT NAM \\n',\r\n                            alignment: 'center'\r\n                        },\r\n                        {\r\n                            text: `Ninh Kiều, ngày ${(new Date()).getDate()} tháng ${(new Date()).getMonth() + 1} năm ${(new Date()).getFullYear()} \\n`,\r\n                            alignment: 'center'\r\n                        }\r\n                    ]\r\n                ],\r\n            },\r\n            {\r\n                text: `${title} \\n`,\r\n                alignment: 'center',\r\n                style: 'header',\r\n                bold: true,\r\n                margin: [0, 24, 0, 24]\r\n            },\r\n            {\r\n                style: 'tableExample',\r\n                color: '#222',\r\n                table: {\r\n                    // widths: ['auto', 'auto', 'auto'],\r\n                    headerRows: 2,\r\n                    // keepWithHeaderRows: 1,\r\n                    widths: body.widths,\r\n                    body: body.body\r\n                }\r\n            },\r\n        ],\r\n        styles: {\r\n            header: {\r\n                fontSize: 14,\r\n                alignment: 'justify'\r\n            },\r\n            tableExample: {\r\n                margin: [0, 5, 0, 15]\r\n            },\r\n            content: {\r\n                margin: [0, 30, 0, 0],\r\n            },\r\n            tableHeader: {\r\n                bold: true,\r\n                fontSize: 13,\r\n                color: 'black'\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const partyMemberPDF = (data, title = \"DANH SÁCH ĐẢNG VIÊN\") => {\r\n    let body = {\r\n        widths: ['auto', '*', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto'],\r\n        body: [\r\n            [\r\n                { text: 'STT', style: 'tableHeader', alignment: 'center', rowSpan: 2 },\r\n                { text: 'Họ tên', style: 'tableHeader', alignment: 'center', rowSpan: 2 },\r\n                { text: 'Mã số Đảng viên', style: 'tableHeader', alignment: 'center', rowSpan: 2 },\r\n                { text: 'Giới tính', style: 'tableHeader', alignment: 'center', rowSpan: 2 },\r\n                { text: 'Ngày sinh', style: 'tableHeader', alignment: 'center', rowSpan: 2 },\r\n                { text: 'Nơi sinh', style: 'tableHeader', alignment: 'center', rowSpan: 2 },\r\n                { text: 'Ngày vào Đảng', style: 'tableHeader', alignment: 'center', colSpan: 2 },\r\n                { text: \"\" },\r\n                { text: 'Nơi vào Đảng', style: 'tableHeader', alignment: 'center', colSpan: 2 },\r\n                { text: \"\" },\r\n                { text: 'Số thẻ', style: 'tableHeader', alignment: 'center', rowSpan: 2 },\r\n                { text: 'Chức vụ', style: 'tableHeader', alignment: 'center', rowSpan: 2 },\r\n                { text: 'Dân tộc', style: 'tableHeader', alignment: 'center', rowSpan: 2 },\r\n                { text: 'Tôn giáo', style: 'tableHeader', alignment: 'center', rowSpan: 2 },\r\n            ],\r\n            ['', '', '', \"\", \"\", \"\", { text: \"Lần đầu\", style: 'tableHeader' }, { text: \"Chính thức\", style: 'tableHeader' }, { text: \"Lần đầu\", style: 'tableHeader' }, { text: \"Chính thức\", style: 'tableHeader' }, \"\", \"\", \"\", \"\"],\r\n        ]\r\n    }\r\n\r\n    data.map((el, index) => {\r\n        body.body.push([\r\n            index + 1, el.HoTen, el.MaSoDangVien, el.TenGioiTinh,\r\n            getLocaleDate(el.NgaySinh), el.NoiSinh, getLocaleDate(el.NgayVaoDang), getLocaleDate(el.NgayChinhThuc), el.NoiVaoDangLanDau, el.NoiVaoDangChinhThuc, el.SoThe, el.TenChucVu, el.TenDanToc, el.TenTonGiao])\r\n    })\r\n\r\n    return exportDD(body, title, \"landscape\")\r\n}\r\n\r\nexport const gradePDF = (data, title) => {\r\n    let body = {\r\n        widths: ['auto', '*', 'auto', 'auto', 'auto', 'auto'],\r\n        body: [\r\n            [\r\n                { text: 'STT', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Họ tên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Mã số Đảng viên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Chi bộ', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Loại', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Năm', style: 'tableHeader', alignment: 'center', },\r\n            ],\r\n        ]\r\n    }\r\n\r\n    data.map((el, index) => {\r\n        body.body.push([\r\n            index + 1, el.HoTen, el.MaSoDangVien, el.TenChiBo, el.TenLoai, el.Nam\r\n        ])\r\n    })\r\n\r\n    return exportDD(body, title)\r\n}\r\n\r\nexport const moveOutPDF = (data, title) => {\r\n    let body = {\r\n        widths: ['auto', '*', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto'],\r\n        body: [\r\n            [\r\n                { text: 'STT', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Họ tên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Mã số Đảng viên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Hình thức', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Chuyển từ', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Chuyển đến', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Ngày chuyển đi', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Ngày chuyển về', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Ghi chú', style: 'tableHeader', alignment: 'center', },\r\n            ],\r\n        ]\r\n    }\r\n\r\n    data.map((el, index) => {\r\n        body.body.push([\r\n            index + 1, el.HoTen, el.MaSoDangVien, el.TenHinhThuc,\r\n            \"Đảng bộ \" + el.ChuyenTuDangBo + \", chi bộ \" + el.TenChiBoTu,\r\n            \"Đảng bộ \" + el.ChuyenDenDangBo + \", chi bộ \" + el.TenChiBoDen,\r\n            getLocaleDate(el.NgayChuyenDi), el.NgayChuyenDen ? getLocaleDate(el.NgayChuyenDen) : \"\", el.GhiChu\r\n        ])\r\n    })\r\n\r\n    return exportDD(body, title)\r\n}\r\n\r\nexport const moveInPDF = (data, title) => {\r\n    let body = {\r\n        widths: ['auto', '*', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',],\r\n        body: [\r\n            [\r\n                { text: 'STT', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Họ tên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Mã số Đảng viên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Hình thức', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Chuyển từ', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Chuyển đến', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Ngày chuyển đến', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Ghi chú', style: 'tableHeader', alignment: 'center', },\r\n            ],\r\n        ]\r\n    }\r\n\r\n    data.map((el, index) => {\r\n        body.body.push([\r\n            index + 1, el.HoTen, el.MaSoDangVien, el.TenHinhThuc,\r\n            \"Đảng bộ \" + el.ChuyenTuDangBo + \", chi bộ \" + el.TenChiBoTu,\r\n            \"Đảng bộ \" + el.ChuyenDenDangBo + \", chi bộ \" + el.TenChiBoDen,\r\n            getLocaleDate(el.NgayChuyenDen), el.GhiChu\r\n        ])\r\n    })\r\n\r\n    return exportDD(body, title)\r\n}\r\n\r\nexport const moveInternalPDF = (data, title) => {\r\n    let body = {\r\n        widths: ['auto', '*', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',],\r\n        body: [\r\n            [\r\n                { text: 'STT', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Họ tên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Mã số Đảng viên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Hình thức', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Chuyển từ', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Chuyển đến', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Ngày chuyển', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Ghi chú', style: 'tableHeader', alignment: 'center', },\r\n            ],\r\n        ]\r\n    }\r\n\r\n    data.map((el, index) => {\r\n        body.body.push([\r\n            index + 1, el.HoTen, el.MaSoDangVien, el.TenHinhThuc,\r\n            \"Đảng bộ \" + el.ChuyenTuDangBo + \", chi bộ \" + el.TenChiBoTu,\r\n            \"Đảng bộ \" + el.ChuyenDenDangBo + \", chi bộ \" + el.TenChiBoDen,\r\n            getLocaleDate(el.NgayChuyenDi), el.GhiChu\r\n        ])\r\n    })\r\n\r\n    return exportDD(body, title)\r\n}\r\n\r\nexport const movePDF = (data, title) => {\r\n    let body = {\r\n        widths: ['auto', '*', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto'],\r\n        body: [\r\n            [\r\n                { text: 'STT', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Họ tên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Mã số Đảng viên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Loại', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Hình thức', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Chuyển từ', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Chuyển đến', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Ngày chuyển đi', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Ngày chuyển đến/về', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Ghi chú', style: 'tableHeader', alignment: 'center', },\r\n            ],\r\n        ]\r\n    }\r\n\r\n    data.map((el, index) => {\r\n        body.body.push([\r\n            index + 1, el.HoTen, el.MaSoDangVien, el.LoaiHinhThuc, el.TenHinhThuc,\r\n            \"Đảng bộ \" + el.ChuyenTuDangBo + \", chi bộ \" + el.TenChiBoTu,\r\n            \"Đảng bộ \" + el.ChuyenDenDangBo + \", chi bộ \" + el.TenChiBoDen,\r\n            el.NgayChuyenDi ? getLocaleDate(el.NgayChuyenDi) : \"\", el.NgayChuyenDen ? getLocaleDate(el.NgayChuyenDen) : \"\", el.GhiChu\r\n        ])\r\n    })\r\n\r\n    return exportDD(body, title)\r\n}\r\n\r\nexport const rewardPDF = (data, title) => {\r\n    let body = {\r\n        widths: ['auto', '*', 'auto', 'auto', 'auto', 'auto',],\r\n        body: [\r\n            [\r\n                { text: 'STT', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Họ tên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Mã số Đảng viên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Tên khen thưởng', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Ngày khen thưởng', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Hình thức', style: 'tableHeader', alignment: 'center', },\r\n            ],\r\n        ]\r\n    }\r\n\r\n    data.map((el, index) => {\r\n        body.body.push([\r\n            index + 1, el.HoTen, el.MaSoDangVien, el.TenKhenThuong, getLocaleDate(el.NgayKhenThuong), el.HinhThuc\r\n        ])\r\n    })\r\n\r\n    return exportDD(body, title)\r\n}\r\n\r\nexport const disciplinePDF = (data, title) => {\r\n    let body = {\r\n        widths: ['auto', '*', 'auto', 'auto', 'auto', 'auto',],\r\n        body: [\r\n            [\r\n                { text: 'STT', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Họ tên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Mã số Đảng viên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Tên kỷ luật', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Ngày kỷ luật', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Hình thức', style: 'tableHeader', alignment: 'center', },\r\n            ],\r\n        ]\r\n    }\r\n\r\n    data.map((el, index) => {\r\n        body.body.push([\r\n            index + 1, el.HoTen, el.MaSoDangVien, el.TenKyLuat, getLocaleDate(el.NgayKyLuat), el.HinhThuc\r\n        ])\r\n    })\r\n\r\n    return exportDD(body, title)\r\n}\r\n\r\nexport const partycellPDF = (data, title) => {\r\n    let body = {\r\n        widths: ['auto', 'auto', '*', '*', 'auto', 'auto',],\r\n        body: [\r\n            [\r\n                { text: 'STT', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Mã chi bộ', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Tên chi bộ', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Bí thư', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Phó bí thư', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Số Đảng viên', style: 'tableHeader', alignment: 'center', },\r\n            ],\r\n        ]\r\n    }\r\n\r\n    data.map((el, index) => {\r\n        body.body.push([\r\n            index + 1, el.MaChiBo, el.TenChiBo, el.BiThu, el.PhoBiThu, el.SoDangVien\r\n        ])\r\n    })\r\n\r\n    return exportDD(body, title)\r\n}\r\n\r\nexport const votingResultConfidencePDF = (data, result, noVoting) => {\r\n    console.log(data)\r\n    console.log(result)\r\n\r\n    const { TenBieuQuyet, ThoiGianBatDau, ThoiGianKetThuc, UngCuVien, NguoiThamGia } = result\r\n    let body = {\r\n        widths: ['auto', '*', 'auto', 'auto', 'auto', 'auto', 'auto'],\r\n        // keepWithHeaderRows: 1,\r\n        body: [\r\n            [\r\n                { text: 'STT', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Họ tên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Mã số Đảng viên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Số phiếu tín nhiệm', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Số phiếu không tín nhiệm', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Tỉ lệ phiếu tín nhiệm', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Tỉ lệ phiếu không tín nhiệm', style: 'tableHeader', alignment: 'center', },\r\n\r\n            ],\r\n        ],\r\n    }\r\n\r\n    data.map((el, index) => {\r\n        body.body.push([\r\n            index + 1, el.HoTen, el.MaSoDangVien, el.SoPhieuTinNhiem, el.SoPhieuKhongTinNhiem, el.TiLeTinNhiem, el.TiLeKhongTinNhiem\r\n        ])\r\n    })\r\n\r\n    return {\r\n        content: [\r\n            {\r\n                columns: [\r\n                    {\r\n                        text: [\r\n                            'ĐẢNG BỘ ĐẠI HỌC CẦN THƠ \\n',\r\n                            'CHI BỘ KHOA CNTT&TT'\r\n                        ],\r\n                        alignment: 'center',\r\n                        margin: [0, 0, 30, 20]\r\n                    },\r\n                    [\r\n                        {\r\n                            text: 'ĐẢNG CỘNG SẢN VIỆT NAM \\n',\r\n                            alignment: 'center',\r\n                            margin: [30, 0, 0, 0]\r\n                        },\r\n                        {\r\n                            text: `Ninh Kiều, ngày ${(new Date()).getDate()} tháng ${(new Date()).getMonth() + 1} năm ${(new Date()).getFullYear()} \\n`,\r\n                            alignment: 'center',\r\n                            italics: true,\r\n                            margin: [30, 0, 0, 0],\r\n                        },\r\n                    ]\r\n                ],\r\n            },\r\n            {\r\n                text: 'KẾT QUẢ BIỂU QUYẾT \\n',\r\n                alignment: 'center',\r\n                style: 'header',\r\n                bold: true,\r\n            },\r\n            {\r\n                text: `${TenBieuQuyet} \\n`,\r\n                alignment: 'center',\r\n                bold: true,\r\n                fontSize: 15,\r\n                margin: [0, 10, 0, 20]\r\n            },\r\n            {\r\n                text: `Cuộc biểu quyết bắt đầu vào ${getLocaleDateTime(ThoiGianBatDau)} và kết thúc vào ${getLocaleDateTime(ThoiGianKetThuc)}`\r\n            },\r\n            {\r\n                text: \"1. Thống kê\",\r\n                style: 'header1'\r\n            },\r\n            {\r\n                text: [\r\n                    `Số ứng cử viên: ${UngCuVien.length} \\n`,\r\n                    `Số người tham gia biểu quyết: ${NguoiThamGia.length} \\n`,\r\n                    `Số người không biểu quyết: ${noVoting} \\n `,\r\n                    `Tỉ lệ người tham gia biểu quyết: ${+((NguoiThamGia.length - noVoting) / NguoiThamGia.length * 100).toFixed(2)}%`\r\n                ]\r\n            },\r\n            {\r\n                text: \"2. Kết quả\",\r\n                style: 'header1'\r\n            },\r\n            {\r\n                text: \"(Kết quả được săp xếp theo số lượng phiếu bầu).\"\r\n            },\r\n            {\r\n                style: 'tableExample',\r\n                color: '#222',\r\n                table: {\r\n                    headerRows: 2,\r\n                    widths: body.widths,\r\n                    // keepWithHeaderRows: 1,\r\n                    body: body.body\r\n                }\r\n            },\r\n        ],\r\n        styles: {\r\n            header: {\r\n                fontSize: 16,\r\n                alignment: 'justify'\r\n            },\r\n            tableExample: {\r\n                margin: [0, 5, 0, 15],\r\n            },\r\n            content: {\r\n                margin: [0, 30, 0, 0],\r\n            },\r\n            tableHeader: {\r\n                bold: true,\r\n                fontSize: 13,\r\n                color: 'black'\r\n            },\r\n            header1: {\r\n                margin: [0, 10, 0, 0],\r\n                bold: true\r\n            }\r\n        },\r\n        defaultStyle: {\r\n            fontSize: 13,\r\n            lineHeight: 1.3\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const votingResultPDF = (data, result, noVoting) => {\r\n    console.log(data)\r\n    console.log(result)\r\n\r\n    const { TenBieuQuyet, ThoiGianBatDau, ThoiGianKetThuc, UngCuVien, NguoiThamGia } = result\r\n    let body = {\r\n        widths: ['auto', '*', 'auto', 'auto', 'auto'],\r\n        // keepWithHeaderRows: 1,\r\n        body: [\r\n            [\r\n                { text: 'STT', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Họ tên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Mã số Đảng viên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Số phiếu', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Tỉ lệ phiếu', style: 'tableHeader', alignment: 'center', },\r\n\r\n            ],\r\n        ],\r\n    }\r\n\r\n    data.map((el, index) => {\r\n        body.body.push([\r\n            index + 1, el.HoTen, el.MaSoDangVien, el.SoPhieu, el.TiLe\r\n        ])\r\n    })\r\n\r\n    return {\r\n        content: [\r\n            {\r\n                columns: [\r\n                    {\r\n                        text: [\r\n                            'ĐẢNG BỘ ĐẠI HỌC CẦN THƠ \\n',\r\n                            'CHI BỘ KHOA CNTT&TT'\r\n                        ],\r\n                        alignment: 'center',\r\n                        margin: [0, 0, 30, 20]\r\n                    },\r\n                    [\r\n                        {\r\n                            text: 'ĐẢNG CỘNG SẢN VIỆT NAM \\n',\r\n                            alignment: 'center',\r\n                            margin: [30, 0, 0, 0]\r\n                        },\r\n                        {\r\n                            text: `Ninh Kiều, ngày ${(new Date()).getDate()} tháng ${(new Date()).getMonth() + 1} năm ${(new Date()).getFullYear()} \\n`,\r\n                            alignment: 'center',\r\n                            italics: true,\r\n                            margin: [30, 0, 0, 0],\r\n                        },\r\n                    ]\r\n                ],\r\n            },\r\n            {\r\n                text: 'KẾT QUẢ BIỂU QUYẾT \\n',\r\n                alignment: 'center',\r\n                style: 'header',\r\n                bold: true,\r\n            },\r\n            {\r\n                text: `${TenBieuQuyet} \\n`,\r\n                alignment: 'center',\r\n                bold: true,\r\n                fontSize: 15,\r\n                margin: [0, 10, 0, 20]\r\n            },\r\n            {\r\n                text: `Cuộc biểu quyết bắt đầu vào ${getLocaleDateTime(ThoiGianBatDau)} và kết thúc vào ${getLocaleDateTime(ThoiGianKetThuc)}`\r\n            },\r\n            {\r\n                text: \"1. Thống kê\",\r\n                style: 'header1'\r\n            },\r\n            {\r\n                text: [\r\n                    `Số ứng cử viên: ${UngCuVien.length} \\n`,\r\n                    `Số người tham gia biểu quyết: ${NguoiThamGia.length} \\n`,\r\n                    `Số người không biểu quyết: ${noVoting} \\n `,\r\n                    `Tỉ lệ người tham gia biểu quyết: ${(NguoiThamGia.length - noVoting) / NguoiThamGia.length * 100}%`\r\n                ]\r\n            },\r\n            {\r\n                text: \"2. Kết quả\",\r\n                style: 'header1'\r\n            },\r\n            {\r\n                text: \"(Kết quả được săp xếp theo số lượng phiếu bầu).\"\r\n            },\r\n            {\r\n                style: 'tableExample',\r\n                color: '#222',\r\n                table: {\r\n                    headerRows: 2,\r\n                    widths: body.widths,\r\n                    // keepWithHeaderRows: 1,\r\n                    body: body.body\r\n                }\r\n            },\r\n        ],\r\n        styles: {\r\n            header: {\r\n                fontSize: 16,\r\n                alignment: 'justify'\r\n            },\r\n            tableExample: {\r\n                margin: [0, 5, 0, 15],\r\n            },\r\n            content: {\r\n                margin: [0, 30, 0, 0],\r\n            },\r\n            tableHeader: {\r\n                bold: true,\r\n                fontSize: 13,\r\n                color: 'black'\r\n            },\r\n            header1: {\r\n                margin: [0, 10, 0, 0],\r\n                bold: true\r\n            }\r\n        },\r\n        defaultStyle: {\r\n            fontSize: 13,\r\n            lineHeight: 1.3\r\n        }\r\n\r\n    }\r\n\r\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\n}), 'FileDownload');\n\nexports.default = _default;","import axios from \"../helper/axios\";\r\n\r\nexport const createPoll = async (payload) => {\r\n    console.log(payload);\r\n    try {\r\n        const res = await axios.post('/api/voting/create', payload);\r\n        if (res.status == 201) {\r\n            return res.data\r\n        }\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\nexport const updatePoll = async (payload) => {\r\n    console.log(payload);\r\n    try {\r\n        const res = await axios.put(`/api/voting/${payload.MaBieuQuyet}`, payload);\r\n        if (res.status == 200) {\r\n            return res.data\r\n        }\r\n    } catch (error) {\r\n        return { error: error.response.data }\r\n    }\r\n}\r\n\r\nexport const getAllPoll = async (payload) => {\r\n    try {\r\n        const res = payload\r\n            ? await axios.get('/api/voting?MaSoDangVien=' + payload.MaSoDangVien)\r\n            : await axios.get('/api/voting/')\r\n        console.log(res);\r\n        if (res.status == 200) {\r\n            return res.data\r\n        }\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\nexport const checkIsVoted = async (payload) => {\r\n    try {\r\n        const res = await axios.post('/api/voting/check', payload);\r\n        if (res.status == 200) {\r\n            return res.data\r\n        }\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\nexport const vote = async (payload) => {\r\n    try {\r\n        const res = await axios.post('/api/voting/createvoting', payload);\r\n        if (res.status == 201) {\r\n            return res.data\r\n        }\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\nexport const getResult = async (payload) => {\r\n    try {\r\n        const res = await axios.get('/api/voting/getresult/' + payload.id);\r\n        if (res.status == 200) {\r\n            return res.data\r\n        }\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\nexport const deletePoll = async (payload) => {\r\n    try {\r\n        const res = await axios.delete('/api/voting/' + payload.id);\r\n        if (res.status == 200) {\r\n            return res.data\r\n        }\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\nexport const getPollByTime = async (payload) => {\r\n    try {\r\n        const res = await axios.post('/api/voting/getbytime', payload);\r\n        if (res.status == 200) {\r\n            return res.data\r\n        }\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\nexport const getVotes = async (payload) => {\r\n    try {\r\n        const res = await axios.get('/api/voting/getvotes/' + payload.id);\r\n        if (res.status == 200) {\r\n            return res.data\r\n        }\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\nexport const getNoVoting = async (payload) => {\r\n    try {\r\n        const res = await axios.get('/api/voting/getnovoting/' + payload.id);\r\n        if (res.status == 200) {\r\n            return res.data\r\n        }\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\nexport const mailing = async (payload) => {\r\n    try {\r\n        const res = await axios.post('/api/voting/mailing/?MaBieuQuyet=' + payload.id);\r\n        if (res.status == 200) {\r\n            return res.data\r\n        }\r\n    } catch (error) {\r\n        return { error: error.response.data }\r\n    }\r\n}","import React from 'react';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport Chart from 'chart.js/auto'\r\nimport { ArcElement } from 'chart.js'\r\nimport { Typography } from '@mui/material';\r\n\r\nconst DoughnutChart = ({ label, data, twoColor }) => {\r\n    const shuffled = [\r\n        \"#EF5350\",\r\n        \"#EC407A\",\r\n        \"#AB47BC\",\r\n        \"#7E57C2\",\r\n        \"#5C6BC0\",\r\n        \"#42A5F5\",\r\n        \"#26A69A\",\r\n        \"#66BB6A\",\r\n        \"#9CCC65\",\r\n        \"#FFEE58\",\r\n        \"#FFA726\",\r\n        \"#8D6E63\",\r\n        \"#78909C\",\r\n    ].sort(() => Math.random() - 0.5)\r\n    return (\r\n        <>\r\n            <Typography component={\"body\"} textAlign={\"center\"} variant='button'>{label}</Typography>\r\n            <Doughnut\r\n                data={{\r\n                    labels: data.map(el => el.label),\r\n                    datasets: [\r\n                        {\r\n                            backgroundColor: twoColor ? [\"#66BB6A\", \"#FFEE58\"] : shuffled,\r\n                            data: data.map(el => el.quantity)\r\n                        }\r\n                    ]\r\n                }}\r\n                option={{\r\n                    title: {\r\n                        display: true,\r\n                        text: \"Predicted world population (millions) in 2050\"\r\n                    }\r\n                }}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DoughnutChart;","import AddIcon from '@mui/icons-material/Add';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Grid, List,\r\n    ListItem, ListItemIcon, ListItemText, MenuItem, Paper, Typography\r\n} from '@mui/material';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\nimport React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { filterPartyMember } from '../action/partyMemberAction';\r\nimport { getPollByTime, getResult } from '../action/votingAction';\r\nimport { CategoryContext } from '../contextAPI/CategoryContext';\r\nimport { InfoContext } from '../contextAPI/InfoContext';\r\nimport { LoadingContext } from '../contextAPI/LoadingContext';\r\nimport { SnackbarContext } from '../contextAPI/SnackbarContext';\r\nimport { getDate } from '../utils/utils';\r\nimport InputGrid from './InputGrid';\r\nimport MyButton from './UI/MyButton';\r\nimport MySelect from './UI/MySelect';\r\nimport MySelectReactHookForm from './UI/MySelectReactHookForm';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    inputItem: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    inputWrapper: {\r\n        position: 'relative',\r\n    },\r\n    closeIcon: {\r\n        position: 'absolute',\r\n        top: '8px',\r\n        right: '8px',\r\n        backgroundColor: theme.palette.common.white,\r\n        cursor: 'pointer'\r\n    },\r\n}))\r\n\r\nconst AddCandidateForm = (props) => {\r\n    const classes = useStyles();\r\n    const { setCandidate } = props;\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const { category, categoryDispatch } = useContext(CategoryContext);\r\n    const { info } = useContext(InfoContext);\r\n    const { openSnackbarDispatch } = useContext(SnackbarContext);\r\n    const { loadingDispatch } = useContext(LoadingContext);\r\n\r\n    const DePer = info.info.Quyen[\"12\"]\r\n    const [gradeArr, setGradeArr] = useState([])\r\n    const [checked, setChecked] = useState([]);\r\n    const [left, setLeft] = useState([]);\r\n    const [right, setRight] = useState([]);\r\n    const [fieldArr, setFieldArr] = useState([]);\r\n    const [fieldValue, setFieldValue] = useState(\"0\");\r\n    const [yearGradeArr, setYearGradeArr] = useState([]);\r\n    const [yearGrade, setYearGrade] = useState(\"0\");\r\n    const [pollArr, setPollArr] = useState([]);\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        control,\r\n        setValue,\r\n        getValues,\r\n        watch,\r\n        setError,\r\n        reset,\r\n        clearErrors,\r\n        formState: { errors }\r\n    } = useForm();\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const handleAdd = () => {\r\n        if (right.length == 0) {\r\n            openSnackbarDispatch({\r\n                type: 'SET_OPEN',\r\n                payload: {\r\n                    msg: \"Bạn chưa chọn ứng cử viên\",\r\n                    type: \"error\"\r\n                }\r\n            })\r\n        } else {\r\n            setOpen(false);\r\n            setCandidate(right.map(el => ({ HoTen: el.HoTen, MaUngCuVien: el.MaSoDangVien })))\r\n        }\r\n    }\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true)\r\n    }\r\n    const onSubmit = async (data) => {\r\n        data.grade = fieldValue;\r\n        if (DePer != 1)\r\n            data.partycell = info.info.MaChiBo\r\n        // setRight([]);\r\n        loadingDispatch({ type: 'OPEN_LOADING' })\r\n        const res = await filterPartyMember({ grade: data.grade, partycell: data.partycell || \"\" });\r\n        setLeft(res)\r\n        loadingDispatch({ type: 'CLOSE_LOADING' })\r\n    }\r\n\r\n    const onSubmitByPoll = async (data) => {\r\n        console.log(data);\r\n        loadingDispatch({ type: 'OPEN_LOADING' })\r\n        const res = await getResult({ id: data.poll })\r\n        if (res) {\r\n            console.log(res.Data);\r\n            setLeft(res.Data)\r\n        }\r\n        loadingDispatch({ type: 'CLOSE_LOADING' })\r\n    }\r\n\r\n    const handleChangeSelect = (e) => {\r\n        setValue(e.target.name, e.target.value)\r\n    }\r\n\r\n    function not(a, b) {\r\n        return a.filter((value) => b.indexOf(value) === -1);\r\n    }\r\n\r\n    function intersection(a, b) {\r\n        return a.filter((value) => b.indexOf(value) !== -1);\r\n    }\r\n\r\n    const leftChecked = intersection(checked, left);\r\n    const rightChecked = intersection(checked, right);\r\n\r\n    const handleToggle = (value) => () => {\r\n        const currentIndex = checked.indexOf(value);\r\n        const newChecked = [...checked];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value);\r\n        } else {\r\n            newChecked.splice(currentIndex, 1);\r\n        }\r\n\r\n        setChecked(newChecked);\r\n    };\r\n\r\n    const handleAllRight = () => {\r\n        const sum = right.concat(left)\r\n        var result = sum.reduce((unique, o) => {\r\n            if (!unique.some(obj => obj.MaSoDangVien === o.MaSoDangVien)) {\r\n                unique.push(o);\r\n            }\r\n            return unique;\r\n        }, []);\r\n        setRight(result);\r\n        setLeft([]);\r\n    };\r\n\r\n    const handleCheckedRight = () => {\r\n\r\n        const sum = right.concat(leftChecked)\r\n        var result = sum.reduce((unique, o) => {\r\n            if (!unique.some(obj => obj.MaSoDangVien == o.MaSoDangVien)) {\r\n                unique.push(o);\r\n            }\r\n            return unique;\r\n        }, []);\r\n\r\n        setRight(result);\r\n        setLeft(not(left, leftChecked));\r\n        setChecked(not(checked, leftChecked));\r\n    };\r\n\r\n    const handleCheckedLeft = () => {\r\n        setLeft(left.concat(rightChecked));\r\n        setRight(not(right, rightChecked));\r\n        setChecked(not(checked, rightChecked));\r\n    };\r\n\r\n    const handleAllLeft = () => {\r\n        setLeft(left.concat(right));\r\n        setRight([]);\r\n    };\r\n\r\n    const handleResetAll = () => {\r\n        setLeft([]);\r\n        setRight([]);\r\n    }\r\n\r\n    const handleChangeFieldValue = (e) => {\r\n        setFieldValue(e.target.value)\r\n    }\r\n\r\n    const handleChangeYear = (e) => {\r\n        setYearGrade(e.target.value)\r\n        if (e.target.value == 0) {\r\n            setFieldArr([]);\r\n            setFieldValue(0)\r\n        } else {\r\n            yearGradeArr.forEach(el => {\r\n                if (el.Nam == e.target.value) {\r\n                    setFieldArr(el.Data);\r\n                    setFieldValue(0)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleSubmitDate = async () => {\r\n        let TuNgay = getValues(\"TuNgay\");\r\n        let DenNgay = getValues(\"DenNgay\");\r\n        console.log(TuNgay, DenNgay);\r\n        if (!TuNgay && DenNgay) {\r\n            setError(\"TuNgay\", {\r\n                type: \"manual\",\r\n                message: \"Vui lòng nhập trường này!\"\r\n            })\r\n            return;\r\n        }\r\n        if (TuNgay && !DenNgay) {\r\n            setValue(\"DenNgay\", getDate(new Date()))\r\n            DenNgay = getDate(new Date());\r\n        }\r\n        console.log(TuNgay, DenNgay)\r\n        const res = await getPollByTime({ TuNgay, DenNgay });\r\n        console.log(res);\r\n        if (res.length) {\r\n            setPollArr(res);\r\n            setValue(\"poll\", res[0].MaBieuQuyet)\r\n        }\r\n    }\r\n\r\n    const handleReset = () => {\r\n        setValue(\"partycell\", \"0\")\r\n        setFieldValue(\"0\");\r\n        setFieldArr([]);\r\n        setYearGrade(\"0\");\r\n    }\r\n\r\n    const handleResetPoll = () => {\r\n        setValue(\"TuNgay\", \"\")\r\n        setValue(\"DenNgay\", \"\")\r\n        setPollArr([]);\r\n        setValue(\"poll\", \"0\");\r\n        clearErrors()\r\n    }\r\n\r\n    const TuNgay = useRef({});\r\n    TuNgay.current = watch(\"TuNgay\", \"\");\r\n\r\n    useEffect(() => {\r\n        setYearGradeArr(category.categories.grade)\r\n    }, [category])\r\n\r\n    const customList = (items) => (\r\n        <>\r\n            {DePer ?\r\n                <Typography variant=\"subtitle2\">* Họ tên - Mã Số ( - Số phiếu / Số phiếu tín nhiệm )</Typography>\r\n                :\r\n                <Typography variant=\"subtitle2\">* Họ tên - Mã Số</Typography>\r\n            }\r\n            <Paper variant=\"outlined\" sx={{ width: DePer ? 330 : 250, height: 260, overflow: 'auto' }}>\r\n                <List dense component=\"div\" role=\"list\">\r\n                    {items.map((value, index) => {\r\n                        const labelId = `transfer-list-item-${index}-label`;\r\n\r\n                        return (\r\n                            <ListItem\r\n                                key={index}\r\n                                role=\"listitem\"\r\n                                button\r\n                                onClick={handleToggle(value)}\r\n                            >\r\n                                <ListItemIcon>\r\n                                    <Checkbox\r\n                                        checked={checked.indexOf(value) !== -1}\r\n                                        tabIndex={-1}\r\n                                        disableRipple\r\n                                        inputProps={{\r\n                                            'aria-labelledby': labelId,\r\n                                        }}\r\n                                    />\r\n                                </ListItemIcon>\r\n                                {value.hasOwnProperty(\"SoPhieu\") ?\r\n                                    <ListItemText id={labelId} primary={value.HoTen + \" - \" + value.MaSoDangVien + \" - \" + value.SoPhieu} />\r\n                                    :\r\n                                    <ListItemText id={labelId} primary={value.HoTen + \" - \" + value.MaSoDangVien} />\r\n                                }\r\n                            </ListItem>\r\n                        );\r\n                    })}\r\n                    <ListItem />\r\n                </List>\r\n            </Paper>\r\n        </>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <MyButton onClick={handleOpen} success><AddIcon />Thêm</MyButton>\r\n            {\r\n                DePer ?\r\n                    <Dialog PaperProps={{ style: { minWidth: '1200px' } }} open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                        <DialogTitle id=\"form-dialog-title\">Thêm ứng cử viên</DialogTitle>\r\n                        <DialogContent>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={6}>\r\n                                    <Typography>* Tra cứu theo thông tin</Typography>\r\n                                    <InputGrid\r\n                                        select\r\n                                        onChange={handleChangeSelect}\r\n                                        nameTitle={\"Chi bộ\"}\r\n                                        name=\"partycell\"\r\n                                        defaultValue=\"0\"\r\n                                        control={control}\r\n                                        errors={errors}\r\n                                    >\r\n                                        <MenuItem value=\"0\">Tất cả</MenuItem>\r\n                                        {\r\n                                            category.categories[\"partycell\"].map(el =>\r\n                                                <MenuItem key={el.MaChiBo} value={el.MaChiBo} >{el.TenChiBo}</MenuItem>\r\n                                            )\r\n                                        }\r\n                                    </InputGrid>\r\n                                    <Grid container sx={{ marginTop: 2 }}>\r\n                                        <Grid item style={{ width: '150px' }}>\r\n                                            <Typography>Loại</Typography>\r\n                                        </Grid>\r\n                                        <Grid item container flex={1} spacing={2}>\r\n                                            <Grid container item>\r\n                                                <Grid item>\r\n                                                    <Typography sx={{ width: '50px' }}>Năm</Typography>\r\n                                                </Grid>\r\n                                                <Grid item flex={1}>\r\n                                                    <MySelect\r\n                                                        value={yearGrade}\r\n                                                        onChange={handleChangeYear}\r\n                                                    >\r\n                                                        <MenuItem value=\"0\">Không</MenuItem>\r\n                                                        {yearGradeArr.map(el =>\r\n                                                            <MenuItem key={el.Nam} value={el.Nam}>{el.Nam}</MenuItem>\r\n                                                        )}\r\n                                                    </MySelect>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Grid container item>\r\n                                                <Grid item >\r\n                                                    <Typography sx={{ width: '50px' }}>Loại</Typography>\r\n                                                </Grid>\r\n                                                <Grid item flex={1}>\r\n                                                    <MySelect\r\n                                                        value={fieldValue}\r\n                                                        onChange={handleChangeFieldValue}\r\n                                                    >\r\n                                                        <MenuItem value=\"0\">Tất cả</MenuItem>\r\n                                                        {\r\n                                                            fieldArr.map(el =>\r\n                                                                <MenuItem key={el[\"MaLoai\"]} value={el[\"MaLoai\"]}>{el[\"TenLoai\"]}</MenuItem>\r\n                                                            )\r\n                                                        }\r\n                                                    </MySelect>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid style={{ width: '100%', textAlign: 'center', marginTop: 16 }}>\r\n                                        <MyButton onClick={handleSubmit(onSubmit)} style={{ margin: '0 auto', marginRight: '8px' }} info >Liệt kê</MyButton>\r\n                                        <Button variant=\"outlined\" onClick={handleReset} style={{ margin: '0 auto', }} variant=\"outlined\" >Reset</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Typography>* Tra cứu theo kết quả biểu quyết</Typography>\r\n\r\n                                    <Grid container spacing={2}>\r\n                                        <Grid item style={{ width: '150px', marginTop: '16px' }}>\r\n                                            <Typography>Thời gian</Typography>\r\n                                        </Grid>\r\n                                        <Grid item container flex={1} alignItems=\"center\" spacing={2}>\r\n                                            <Grid item>\r\n                                                <InputGrid\r\n                                                    noTitle\r\n                                                    type=\"date\"\r\n                                                    name=\"TuNgay\"\r\n                                                    // defaultValue=\"\"\r\n                                                    control={control}\r\n                                                    errors={errors}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item>\r\n\r\n                                                <InputGrid\r\n                                                    noTitle\r\n                                                    type=\"date\"\r\n                                                    name=\"DenNgay\"\r\n                                                    // defaultValue=\"\"\r\n                                                    control={control}\r\n                                                    errors={errors}\r\n                                                    rules={{\r\n                                                        validate: value => {\r\n                                                            if (!value && !getValues(\"TuNgay\")) return true\r\n                                                            if (new Date(value) >= new Date(TuNgay.current))\r\n                                                                return true\r\n                                                            else\r\n                                                                return \"Ngày kết thúc phải lớn hơn ngày bắt đầu\"\r\n                                                        }\r\n                                                    }}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container sx={{ marginTop: 2 }} alignItems=\"center\">\r\n                                        <Grid item style={{ width: '150px' }}>\r\n                                        </Grid>\r\n                                        <MyButton onClick={handleSubmit(handleSubmitDate)} sx={{ margin: '2px 8px 2px 0px' }} info>Tra cứu</MyButton>\r\n                                        {`Tìm thấy ${pollArr.length} cuộc biểu quyết`}\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Grid container sx={{ mt: 2 }}>\r\n                                            <Grid item style={{ width: '150px' }}>\r\n                                                <Typography>Cuộc biểu quyết</Typography>\r\n                                            </Grid>\r\n                                            <Grid item flex={1}\r\n                                                sx={{\r\n                                                    textOverflow: 'ellipsis',\r\n                                                    whiteSpace: 'nowrap',\r\n                                                    overflow: 'hidden',\r\n                                                }}>\r\n                                                <MySelectReactHookForm\r\n                                                    select\r\n                                                    onChange={handleChangeSelect}\r\n                                                    name=\"poll\"\r\n                                                    defaultValue=\"0\"\r\n                                                    control={control}\r\n                                                    errors={errors}\r\n                                                >\r\n                                                    <MenuItem value=\"0\">Không</MenuItem>\r\n                                                    {pollArr.length &&\r\n                                                        pollArr.map((el, index) =>\r\n                                                            <MenuItem key={index} value={el.MaBieuQuyet}>{el.TenBieuQuyet + \" - \" + el.PhamVi}</MenuItem>\r\n                                                        )\r\n                                                    }\r\n                                                </MySelectReactHookForm>\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n                                    </Grid>\r\n                                    <Grid style={{ width: '100%', textAlign: 'center', marginTop: 16 }}>\r\n                                        <MyButton onClick={handleSubmit(onSubmitByPoll)} style={{ margin: '0 auto', marginRight: '8px' }} info >Liệt kê</MyButton>\r\n                                        <Button variant=\"outlined\" onClick={handleResetPoll} style={{ margin: '0 auto' }} >Reset</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid sx={{ marginTop: '2px' }} container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n                                <Grid item>\r\n                                    {customList(left)}\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Grid container direction=\"column\" alignItems=\"center\">\r\n                                        <Button\r\n                                            sx={{ my: 0.5 }}\r\n                                            variant=\"outlined\"\r\n                                            size=\"small\"\r\n                                            onClick={handleAllRight}\r\n                                            disabled={left.length === 0}\r\n                                            aria-label=\"move all right\"\r\n                                        >\r\n                                            ≫\r\n                                        </Button>\r\n                                        <Button\r\n                                            sx={{ my: 0.5 }}\r\n                                            variant=\"outlined\"\r\n                                            size=\"small\"\r\n                                            onClick={handleCheckedRight}\r\n                                            disabled={leftChecked.length === 0}\r\n                                            aria-label=\"move selected right\"\r\n                                        >\r\n                                            &gt;\r\n                                        </Button>\r\n                                        <Button\r\n                                            sx={{ my: 0.5 }}\r\n                                            variant=\"outlined\"\r\n                                            size=\"small\"\r\n                                            onClick={handleCheckedLeft}\r\n                                            disabled={rightChecked.length === 0}\r\n                                            aria-label=\"move selected left\"\r\n                                        >\r\n                                            &lt;\r\n                                        </Button>\r\n                                        <Button\r\n                                            sx={{ my: 0.5 }}\r\n                                            variant=\"outlined\"\r\n                                            size=\"small\"\r\n                                            onClick={handleAllLeft}\r\n                                            disabled={right.length === 0}\r\n                                            aria-label=\"move all left\"\r\n                                        >\r\n                                            ≪\r\n                                        </Button>\r\n                                        <Button\r\n                                            sx={{ my: 0.5 }}\r\n                                            variant=\"outlined\"\r\n                                            size=\"small\"\r\n                                            onClick={handleResetAll}\r\n                                            disabled={false}\r\n                                            aria-label=\"move all left\"\r\n                                        >\r\n                                            Reset\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item>{customList(right)}</Grid>\r\n                            </Grid>\r\n\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={handleClose} >\r\n                                Hủy\r\n                            </Button>\r\n                            <MyButton onClick={handleAdd} success>\r\n                                Thêm\r\n                            </MyButton>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                    :\r\n                    <Dialog PaperProps={{ style: { minWidth: '700px' } }} open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                        <DialogTitle id=\"form-dialog-title\">Thêm ứng cử viên</DialogTitle>\r\n                        <DialogContent>\r\n                            <Grid container sx={{ marginTop: 2 }}>\r\n                                <Grid item style={{ width: '150px' }}>\r\n                                    <Typography>Loại</Typography>\r\n                                </Grid>\r\n                                <Grid item container flex={1} spacing={2}>\r\n                                    <Grid container item>\r\n                                        <Grid item>\r\n                                            <Typography sx={{ width: '50px' }}>Năm</Typography>\r\n                                        </Grid>\r\n                                        <Grid item flex={1}>\r\n                                            <MySelect\r\n                                                value={yearGrade}\r\n                                                onChange={handleChangeYear}\r\n                                            >\r\n                                                <MenuItem value=\"0\">Không</MenuItem>\r\n                                                {yearGradeArr.map(el =>\r\n                                                    <MenuItem key={el.Nam} value={el.Nam}>{el.Nam}</MenuItem>\r\n                                                )}\r\n                                            </MySelect>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container item>\r\n                                        <Grid item >\r\n                                            <Typography sx={{ width: '50px' }}>Loại</Typography>\r\n                                        </Grid>\r\n                                        <Grid item flex={1}>\r\n                                            <MySelect\r\n                                                value={fieldValue}\r\n                                                onChange={handleChangeFieldValue}\r\n                                            >\r\n                                                <MenuItem value=\"0\">Tất cả</MenuItem>\r\n                                                {\r\n                                                    fieldArr.map(el =>\r\n                                                        <MenuItem key={el[\"MaLoai\"]} value={el[\"MaLoai\"]}>{el[\"TenLoai\"]}</MenuItem>\r\n                                                    )\r\n                                                }\r\n                                            </MySelect>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid style={{ width: '100%', textAlign: 'center', marginTop: 16 }}>\r\n                                <MyButton onClick={handleSubmit(onSubmit)} style={{ margin: '0 auto', marginRight: '8px' }} info >Liệt kê</MyButton>\r\n                                <Button variant=\"outlined\" onClick={handleReset} style={{ margin: '0 auto', }} info >Reset</Button>\r\n                            </Grid>\r\n                            <Grid sx={{ marginTop: '2px' }} container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n                                <Grid item>\r\n                                    {customList(left)}\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Grid container direction=\"column\" alignItems=\"center\">\r\n                                        <Button\r\n                                            sx={{ my: 0.5 }}\r\n                                            variant=\"outlined\"\r\n                                            size=\"small\"\r\n                                            onClick={handleAllRight}\r\n                                            disabled={left.length === 0}\r\n                                            aria-label=\"move all right\"\r\n                                        >\r\n                                            ≫\r\n                                        </Button>\r\n                                        <Button\r\n                                            sx={{ my: 0.5 }}\r\n                                            variant=\"outlined\"\r\n                                            size=\"small\"\r\n                                            onClick={handleCheckedRight}\r\n                                            disabled={leftChecked.length === 0}\r\n                                            aria-label=\"move selected right\"\r\n                                        >\r\n                                            &gt;\r\n                                        </Button>\r\n                                        <Button\r\n                                            sx={{ my: 0.5 }}\r\n                                            variant=\"outlined\"\r\n                                            size=\"small\"\r\n                                            onClick={handleCheckedLeft}\r\n                                            disabled={rightChecked.length === 0}\r\n                                            aria-label=\"move selected left\"\r\n                                        >\r\n                                            &lt;\r\n                                        </Button>\r\n                                        <Button\r\n                                            sx={{ my: 0.5 }}\r\n                                            variant=\"outlined\"\r\n                                            size=\"small\"\r\n                                            onClick={handleAllLeft}\r\n                                            disabled={right.length === 0}\r\n                                            aria-label=\"move all left\"\r\n                                        >\r\n                                            ≪\r\n                                        </Button>\r\n                                        <Button\r\n                                            sx={{ my: 0.5 }}\r\n                                            variant=\"outlined\"\r\n                                            size=\"small\"\r\n                                            onClick={handleResetAll}\r\n                                            disabled={false}\r\n                                            aria-label=\"move all left\"\r\n                                        >\r\n                                            Reset\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item>{customList(right)}</Grid>\r\n                            </Grid>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={handleClose} >\r\n                                Hủy\r\n                            </Button>\r\n                            <MyButton onClick={handleAdd} success>\r\n                                Thêm\r\n                            </MyButton>\r\n                        </DialogActions>\r\n                    </Dialog >\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddCandidateForm;","import AddIcon from '@mui/icons-material/Add';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    FormControlLabel,\r\n    Grid, List,\r\n    ListItem, ListItemIcon, ListItemText, MenuItem, Paper\r\n} from '@mui/material';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { filterPartyMember } from '../action/partyMemberAction';\r\nimport { CategoryContext } from '../contextAPI/CategoryContext';\r\nimport { InfoContext } from '../contextAPI/InfoContext';\r\nimport { LoadingContext } from '../contextAPI/LoadingContext';\r\nimport { SnackbarContext } from '../contextAPI/SnackbarContext';\r\nimport InputGrid from './InputGrid';\r\nimport MyButton from './UI/MyButton';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    inputItem: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    inputWrapper: {\r\n        position: 'relative',\r\n    },\r\n    closeIcon: {\r\n        position: 'absolute',\r\n        top: '8px',\r\n        right: '8px',\r\n        backgroundColor: theme.palette.common.white,\r\n        cursor: 'pointer'\r\n    }\r\n}))\r\n\r\nconst AddVoterForm = (props) => {\r\n    const classes = useStyles();\r\n    const { setVoter } = props;\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const { category, categoryDispatch } = useContext(CategoryContext);\r\n    const { info } = useContext(InfoContext);\r\n    const isDeP = info.info.Quyen[\"12\"] == 1;\r\n    const { openSnackbarDispatch } = useContext(SnackbarContext);\r\n    const { loadingDispatch } = useContext(LoadingContext);\r\n\r\n    const [includeReserve, setIncludeReserve] = useState(true)\r\n    const [gradeArr, setGradeArr] = useState([])\r\n    const [checked, setChecked] = useState([]);\r\n    const [left, setLeft] = useState([]);\r\n    const [right, setRight] = useState([]);\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        control,\r\n        setValue,\r\n        watch,\r\n        formState: { errors }\r\n    } = useForm();\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const handleAdd = () => {\r\n        if (right.length < 2) {\r\n            openSnackbarDispatch({\r\n                type: 'SET_OPEN',\r\n                payload: {\r\n                    msg: \"Phải có ít nhất 2 người tham gia\",\r\n                    type: \"error\"\r\n                }\r\n            })\r\n        } else {\r\n            setOpen(false);\r\n            setVoter(right.map(el => ({ HoTen: el.HoTen, MaNguoiThamGia: el.MaSoDangVien })))\r\n        }\r\n    }\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true)\r\n    }\r\n    const onSubmit = async (data) => {\r\n        // setRight([]);\r\n        loadingDispatch({ type: 'OPEN_LOADING' })\r\n        data.notreserve = includeReserve\r\n        const res = await filterPartyMember(data);\r\n        setLeft(res)\r\n        loadingDispatch({ type: 'CLOSE_LOADING' })\r\n    }\r\n\r\n    const handleChangeSelect = (e) => {\r\n        setValue(e.target.name, e.target.value)\r\n    }\r\n\r\n    function not(a, b) {\r\n        return a.filter((value) => b.indexOf(value) === -1);\r\n    }\r\n\r\n    function intersection(a, b) {\r\n        return a.filter((value) => b.indexOf(value) !== -1);\r\n    }\r\n\r\n    const leftChecked = intersection(checked, left);\r\n    const rightChecked = intersection(checked, right);\r\n\r\n    const handleToggle = (value) => () => {\r\n        const currentIndex = checked.indexOf(value);\r\n        const newChecked = [...checked];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value);\r\n        } else {\r\n            newChecked.splice(currentIndex, 1);\r\n        }\r\n\r\n        setChecked(newChecked);\r\n    };\r\n\r\n    const handleAllRight = () => {\r\n        const sum = right.concat(left)\r\n        var result = sum.reduce((unique, o) => {\r\n            if (!unique.some(obj => obj.MaSoDangVien == o.MaSoDangVien)) {\r\n                unique.push(o);\r\n            }\r\n            return unique;\r\n        }, []);\r\n\r\n        setRight(result);\r\n        setLeft([]);\r\n    };\r\n\r\n    const handleCheckedRight = () => {\r\n        const sum = right.concat(leftChecked)\r\n        var result = sum.reduce((unique, o) => {\r\n            if (!unique.some(obj => obj.MaSoDangVien === o.MaSoDangVien)) {\r\n                unique.push(o);\r\n            }\r\n            return unique;\r\n        }, []);\r\n\r\n        setRight(result);\r\n        setLeft(not(left, leftChecked));\r\n        setChecked(not(checked, leftChecked));\r\n    };\r\n\r\n    const handleCheckedLeft = () => {\r\n        setLeft(left.concat(rightChecked));\r\n        setRight(not(right, rightChecked));\r\n        setChecked(not(checked, rightChecked));\r\n    };\r\n\r\n    const handleAllLeft = () => {\r\n        setLeft(left.concat(right));\r\n        setRight([]);\r\n    };\r\n\r\n    const handleReset = () => {\r\n        setLeft([]);\r\n        setRight([]);\r\n    }\r\n\r\n    const customList = (items) => (\r\n        <Paper variant=\"outlined\" sx={{ width: 250, height: 300, overflow: 'auto' }}>\r\n            <List dense component=\"div\" role=\"list\">\r\n                {items.map((value, index) => {\r\n                    const labelId = `transfer-list-item-${index}-label`;\r\n\r\n                    return (\r\n                        <ListItem\r\n                            key={index}\r\n                            role=\"listitem\"\r\n                            button\r\n                            onClick={handleToggle(value)}\r\n                        >\r\n                            <ListItemIcon>\r\n                                <Checkbox\r\n                                    checked={checked.indexOf(value) !== -1}\r\n                                    tabIndex={-1}\r\n                                    disableRipple\r\n                                    inputProps={{\r\n                                        'aria-labelledby': labelId,\r\n                                    }}\r\n                                />\r\n                            </ListItemIcon>\r\n                            <ListItemText id={labelId} primary={value.HoTen + \" - \" + value.MaSoDangVien} />\r\n                        </ListItem>\r\n                    );\r\n                })}\r\n                <ListItem />\r\n            </List>\r\n        </Paper>\r\n    )\r\n\r\n    useEffect(() => {\r\n        category.categories.grade.length > 0 &&\r\n            category.categories.grade.map(el => {\r\n                if (el.Nam == (new Date()).getFullYear()) {\r\n                    setGradeArr(el.Data)\r\n                }\r\n            })\r\n    }, [category.categories.grade])\r\n\r\n    return (\r\n        <>\r\n            <MyButton onClick={handleOpen} success><AddIcon />Thêm</MyButton>\r\n            <Dialog PaperProps={{ style: { minWidth: '700px' } }} open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Thêm đơn vị biểu quyết</DialogTitle>\r\n                <DialogContent>\r\n                    <InputGrid\r\n                        select\r\n                        onChange={handleChangeSelect}\r\n                        nameTitle={\"Chi bộ\"}\r\n                        name=\"partycell\"\r\n                        defaultValue={isDeP ? \"0\" : info.info.MaChiBo}\r\n                        disabled={!isDeP}\r\n                        control={control}\r\n                        errors={errors}\r\n                    >\r\n                        <MenuItem value=\"0\">Tất cả</MenuItem>\r\n                        {\r\n                            category.categories[\"partycell\"].map(el =>\r\n                                <MenuItem key={el.MaChiBo} value={el.MaChiBo} >{el.TenChiBo}</MenuItem>\r\n                            )\r\n                        }\r\n                    </InputGrid>\r\n                    <InputGrid\r\n                        select\r\n                        onChange={handleChangeSelect}\r\n                        nameTitle={\"Chức vụ\"}\r\n                        name=\"position\"\r\n                        defaultValue=\"0\"\r\n                        control={control}\r\n                        errors={errors}\r\n                    >\r\n                        <MenuItem value=\"0\">Tất cả</MenuItem>\r\n                        {\r\n                            category.categories[\"position\"].map(el =>\r\n                                <MenuItem key={el.MaChucVu} value={el.MaChucVu} >{el.TenChucVu}</MenuItem>\r\n                            )\r\n                        }\r\n                    </InputGrid>\r\n                    <Grid container>\r\n                        <Grid item style={{ width: '150px' }}>\r\n\r\n                        </Grid>\r\n                        <Grid item flex={1}>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        checked={includeReserve}\r\n                                        onChange={() => setIncludeReserve(!includeReserve)}\r\n\r\n                                    />}\r\n                                label=\"Không hiển thị Đảng viên dự bị\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid style={{ width: '100%', textAlign: 'center', marginTop: 16 }}>\r\n                        <MyButton onClick={handleSubmit(onSubmit)} style={{ margin: '0 auto' }} info >Liệt kê</MyButton>\r\n                    </Grid>\r\n\r\n                    <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n                        <Grid item>{customList(left)}</Grid>\r\n                        <Grid item>\r\n                            <Grid container direction=\"column\" alignItems=\"center\">\r\n                                <Button\r\n                                    sx={{ my: 0.5 }}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    onClick={handleAllRight}\r\n                                    disabled={left.length === 0}\r\n                                    aria-label=\"move all right\"\r\n                                >\r\n                                    ≫\r\n                                </Button>\r\n                                <Button\r\n                                    sx={{ my: 0.5 }}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    onClick={handleCheckedRight}\r\n                                    disabled={leftChecked.length === 0}\r\n                                    aria-label=\"move selected right\"\r\n                                >\r\n                                    &gt;\r\n                                </Button>\r\n                                <Button\r\n                                    sx={{ my: 0.5 }}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    onClick={handleCheckedLeft}\r\n                                    disabled={rightChecked.length === 0}\r\n                                    aria-label=\"move selected left\"\r\n                                >\r\n                                    &lt;\r\n                                </Button>\r\n                                <Button\r\n                                    sx={{ my: 0.5 }}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    onClick={handleAllLeft}\r\n                                    disabled={right.length === 0}\r\n                                    aria-label=\"move all left\"\r\n                                >\r\n                                    ≪\r\n                                </Button>\r\n                                <Button\r\n                                    sx={{ my: 0.5 }}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    onClick={handleReset}\r\n                                    disabled={false}\r\n                                    aria-label=\"move all left\"\r\n                                >\r\n                                    Reset\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>{customList(right)}</Grid>\r\n                    </Grid>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} >\r\n                        Hủy\r\n                    </Button>\r\n                    <MyButton onClick={handleAdd} success>\r\n                        Thêm\r\n                    </MyButton>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddVoterForm;","import LabelImportantRoundedIcon from '@mui/icons-material/LabelImportantRounded';\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle, FormControl,\r\n    Grid, MenuItem, Typography\r\n} from '@mui/material';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\nimport React, { useContext } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { createRewardDisciplines } from '../action/rewardDisciplineAction';\r\nimport { SnackbarContext } from '../contextAPI/SnackbarContext';\r\nimport { getDate } from '../utils/utils';\r\nimport InputGrid from './InputGrid';\r\nimport MyButton from './UI/MyButton';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    icon: {\r\n        margin: theme.spacing(0.5, 1, 0.5, 0),\r\n        fontSize: '1.2rem'\r\n    },\r\n    iconWrapper: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    divider: {\r\n        marginTop: '20px'\r\n    },\r\n}))\r\n\r\nconst SaveResult = (props) => {\r\n    const classes = useStyles();\r\n    const { open, setOpen, data, resultState, setResultState } = props\r\n    const id = resultState.MaBieuQuyet;\r\n    const name = resultState.TenBieuQuyet;\r\n    const voteFor = resultState.MucDich;\r\n    const { openSnackbar, openSnackbarDispatch } = useContext(SnackbarContext)\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        control,\r\n        setValue,\r\n        watch,\r\n        clearErrors,\r\n        formState: { errors }\r\n    } = useForm();\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n    const handleOpen = () => {\r\n        setOpen(true)\r\n    }\r\n    const handleChangeSelect = (e) => {\r\n        if (e.target.value != 0)\r\n            clearErrors(e.target.name)\r\n        setValue(e.target.name, e.target.value)\r\n    }\r\n    const onSubmit = async (d) => {\r\n        d.DanhSach = data\r\n        d.type = voteFor == \"Khen thưởng\" ? \"reward\" : \"discipline\"\r\n        console.log(d);\r\n        const res = await createRewardDisciplines(d, id)\r\n        if (res) {\r\n            openSnackbarDispatch({\r\n                type: 'SET_OPEN',\r\n                payload: {\r\n                    msg: \"Đã lưu!\",\r\n                    type: \"success\"\r\n                }\r\n            })\r\n            setResultState({ ...resultState, LuuKetQua: 1 })\r\n        }\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog PaperProps={{ style: { minWidth: '1000px' } }} open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">{voteFor}</DialogTitle>\r\n                <DialogContent>\r\n                    <FormControl margin=\"dense\" fullWidth>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12}><Typography>Danh sách Đảng viên</Typography></Grid>\r\n                            <Grid container item xs={12} alignItems=\"center\">\r\n                                <Grid item flex={1} />\r\n                                <Grid item>\r\n                                    {data.map(el =>\r\n                                        <Grid key={el.MaSoDangVien} item container alignItems=\"center\">\r\n                                            <LabelImportantRoundedIcon sx={{ marginRight: 2 }} />\r\n                                            <Typography variant=\"h6\">{el.HoTen} - {el.MaSoDangVien}</Typography>\r\n                                        </Grid>\r\n                                    )}\r\n                                </Grid>\r\n                                <Grid item flex={1} />\r\n                            </Grid>\r\n                            {\r\n                                voteFor == \"Khen thưởng\" ?\r\n                                    <>\r\n                                        <Grid item xs={12}>\r\n                                            <InputGrid\r\n                                                nameTitle={\"Tên khen thưởng\"}\r\n                                                name={\"TenKhenThuong\"}\r\n                                                defaultValue={name}\r\n                                                multiline\r\n                                                minRows={3}\r\n                                                control={control}\r\n                                                errors={errors}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <InputGrid\r\n                                                center\r\n                                                select\r\n                                                onChange={handleChangeSelect}\r\n                                                nameTitle={\"Hình thức\"}\r\n                                                name={\"HinhThuc\"}\r\n                                                defaultValue={\"0\"}\r\n                                                rules={{\r\n                                                    validate: value =>\r\n                                                        value != \"0\" || \"Vui lòng nhập trường này!\"\r\n                                                }}\r\n                                                control={control}\r\n                                                errors={errors}\r\n                                            >\r\n                                                <MenuItem value=\"0\">Chọn hình thức</MenuItem>\r\n                                                <MenuItem value=\"Biểu dương\">Biểu dương</MenuItem>\r\n                                                <MenuItem value=\"Tặng giấy khen\">Tặng giấy khen</MenuItem>\r\n                                            </InputGrid>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <InputGrid\r\n                                                center\r\n                                                type=\"date\"\r\n                                                nameTitle={\"Ngày khen thưởng\"}\r\n                                                defaultValue={getDate(new Date)}\r\n                                                name={\"NgayKhenThuong\"}\r\n                                                control={control}\r\n                                                errors={errors}\r\n                                            />\r\n                                        </Grid>\r\n                                    </>\r\n                                    :\r\n                                    <>\r\n                                        <Grid item xs={12}>\r\n                                            <InputGrid\r\n                                                nameTitle={\"Tên kỷ luật\"}\r\n                                                name={\"TenKyLuat\"}\r\n                                                defaultValue={name}\r\n                                                multiline\r\n                                                minRows={3}\r\n                                                control={control}\r\n                                                errors={errors}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <InputGrid\r\n                                                center\r\n                                                select\r\n                                                onChange={handleChangeSelect}\r\n                                                nameTitle={\"Hình thức\"}\r\n                                                name={\"HinhThuc\"}\r\n                                                defaultValue={\"0\"}\r\n                                                rules={{\r\n                                                    validate: value =>\r\n                                                        value != \"0\" || \"Vui lòng nhập trường này!\"\r\n                                                }}\r\n                                                control={control}\r\n                                                errors={errors}\r\n                                            >\r\n                                                <MenuItem value=\"0\">Chọn hình thức</MenuItem>\r\n                                                <MenuItem value=\"Khiển trách\">Khiển trách</MenuItem>\r\n                                                <MenuItem value=\"Cảnh cáo\">Cảnh cáo</MenuItem>\r\n                                                <MenuItem value=\"Cách chức\">Cách chức</MenuItem>\r\n                                                <MenuItem value=\"Khai trừ\">Khai trừ</MenuItem>\r\n                                            </InputGrid>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <InputGrid\r\n                                                center\r\n                                                type=\"date\"\r\n                                                nameTitle={\"Ngày kỷ luật\"}\r\n                                                defaultValue={getDate(new Date)}\r\n                                                name={\"NgayKyLuat\"}\r\n                                                control={control}\r\n                                                errors={errors}\r\n                                            />\r\n                                        </Grid>\r\n                                    </>\r\n                            }\r\n\r\n                        </Grid>\r\n                    </FormControl>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} >\r\n                        Hủy\r\n                    </Button>\r\n                    <MyButton onClick={handleSubmit(onSubmit)} info>\r\n                        Lưu\r\n                    </MyButton>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SaveResult;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M5.94 18.99H15c.65 0 1.26-.31 1.63-.84l3.95-5.57c.25-.35.25-.81 0-1.16l-3.96-5.58C16.26 5.31 15.65 5 15 5H5.94c-.81 0-1.28.93-.81 1.59L9 12l-3.87 5.41c-.47.66 0 1.58.81 1.58z\"\n}), 'LabelImportantRounded');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18 13h-.68l-2 2h1.91L19 17H5l1.78-2h2.05l-2-2H6l-3 3v4c0 1.1.89 2 1.99 2H19c1.1 0 2-.89 2-2v-4l-3-3zm-1-5.05-4.95 4.95-3.54-3.54 4.95-4.95L17 7.95zm-4.24-5.66L6.39 8.66c-.39.39-.39 1.02 0 1.41l4.95 4.95c.39.39 1.02.39 1.41 0l6.36-6.36c.39-.39.39-1.02 0-1.41L14.16 2.3c-.38-.4-1.01-.4-1.4-.01z\"\n}), 'HowToVote');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.2 4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n}), 'Done');\n\nexports.default = _default;","import {\r\n    Button,\r\n    Dialog, DialogActions,\r\n    DialogContent, DialogTitle, Typography\r\n} from '@mui/material';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\nimport React, { useContext, useState } from 'react';\r\nimport { deletePoll } from '../action/votingAction';\r\nimport { LoadingContext } from '../contextAPI/LoadingContext';\r\nimport { SnackbarContext } from '../contextAPI/SnackbarContext';\r\nimport MyButton from './UI/MyButton';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    btn: {\r\n        color: theme.palette.common.white,\r\n        backgroundColor: theme.palette.error.main,\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.error.dark\r\n        },\r\n        margin: '0 4px'\r\n    },\r\n    inputItem: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n}))\r\n\r\nconst DeleteVotingForm = (props) => {\r\n    const classes = useStyles();\r\n    const { data, fetchAllPoll } = props;\r\n    const { openSnackbarDispatch } = useContext(SnackbarContext)\r\n    const { loadingDispatch } = useContext(LoadingContext)\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n    const handleOpen = () => {\r\n        setOpen(true)\r\n    }\r\n    const handleSubmit = async () => {\r\n        loadingDispatch({ type: \"OPEN_LOADING\" })\r\n        const res = await deletePoll({ id: data.MaBieuQuyet })\r\n        if (res.error) {\r\n            openSnackbarDispatch({\r\n                type: 'SET_OPEN',\r\n                payload: {\r\n                    msg: res.error.msg,\r\n                    type: \"error\"\r\n                }\r\n            })\r\n        } else {\r\n            openSnackbarDispatch({\r\n                type: 'SET_OPEN',\r\n                payload: {\r\n                    msg: \"Đã xóa!\",\r\n                    type: \"success\"\r\n                }\r\n            })\r\n        }\r\n        loadingDispatch({ type: 'CLOSE_LOADING' })\r\n        fetchAllPoll();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <MyButton onClick={handleOpen} style={{ marginBottom: '20px', marginLeft: \"8px\" }} error={true} small>Xóa</MyButton>\r\n            <Dialog fullWidth open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Hủy cuộc  biểu quyết</DialogTitle>\r\n                <DialogContent className={classes.dialogContent}>\r\n                    <Typography>Bạn có muốn xóa cuộc biểu quyết này?</Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} >\r\n                        Hủy\r\n                    </Button>\r\n                    <MyButton onClick={handleSubmit} error={true}>\r\n                        Đồng ý\r\n                    </MyButton>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DeleteVotingForm;","import {\r\n    Button,\r\n    Checkbox,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    FormControlLabel,\r\n    FormGroup,\r\n    Grid,\r\n    Paper,\r\n    Radio,\r\n    RadioGroup,\r\n    TextField,\r\n    Typography,\r\n    MenuItem,\r\n    Chip,\r\n    TableContainer,\r\n    Table,\r\n    TableHead,\r\n    TableRow,\r\n    TableCell,\r\n    TableBody\r\n} from '@mui/material';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\nimport React, { useContext, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport Layout from '../component/Layout';\r\nimport MyButton from '../component/UI/MyButton';\r\nimport { SnackbarContext } from '../contextAPI/SnackbarContext';\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport Chart from 'chart.js/auto'\r\nimport InputGrid from '../component/InputGrid';\r\nimport { useHistory } from 'react-router';\r\nimport { CategoryContext } from '../contextAPI/CategoryContext';\r\nimport AddCandidateForm from '../component/AddCandidateForm';\r\nimport AddVoterForm from '../component/AddVoterForm';\r\nimport DeleteVotingForm from '../component/DeleteVotingForm';\r\nimport { getAllPoll, getNoVoting, getResult, getVotes, mailing, updatePoll } from '../action/votingAction';\r\nimport { LoadingContext } from '../contextAPI/LoadingContext';\r\nimport { getDateStatus, getDateTime, getLocaleDateTime, getStatus, getExportData, pdfmakedownload } from '../utils/utils';\r\nimport { getAllCategory } from '../action/categoryAction';\r\nimport MaterialTable from '@material-table/core';\r\nimport SaveResult from '../component/SaveResult';\r\nimport HowToVoteIcon from '@mui/icons-material/HowToVote';\r\nimport DoneIcon from '@mui/icons-material/Done';\r\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\r\nimport { CSVLink } from 'react-csv';\r\nimport { votingResultConfidencePDF, votingResultPDF } from '../utils/pdf';\r\nimport DoughnutChart from '../component/DoughnutChart';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    header: {\r\n        marginBottom: '40px'\r\n    },\r\n    headerContent: {\r\n        textTransform: 'uppercase',\r\n        fontWeight: '600',\r\n    },\r\n    paper: {\r\n        padding: '16px',\r\n        marginBottom: '16px',\r\n        marginTop: '20px',\r\n        // width: 'fit-content'\r\n    },\r\n    paperForm: {\r\n        padding: '16px',\r\n        marginBottom: '16px',\r\n        marginTop: '20px',\r\n        width: '900px',\r\n        margin: '0 auto'\r\n    },\r\n    title: {\r\n        marginBottom: '14px'\r\n    },\r\n    flex: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        marginBottom: '40px'\r\n    },\r\n    table: {\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n        marginTop: '18px',\r\n    },\r\n}))\r\n\r\nconst Voting = () => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [candidate, setCandidate] = useState([]);\r\n    const [voter, setVoter] = useState([]);\r\n    const [pollArr, setPollArr] = useState([]);\r\n    const { loadingDispatch } = useContext(LoadingContext)\r\n    const { category, categoryDispatch } = useContext(CategoryContext);\r\n    const { openSnackbarDispatch } = useContext(SnackbarContext);\r\n    const [open, setOpen] = useState([]);\r\n    const [editOpen, setEditOpen] = useState([]);\r\n    const [editState, setEditState] = useState(null);\r\n    const [resultState, setResultState] = useState(null);\r\n    const [label, setLabel] = useState([])\r\n    const [quantity, setQuantity] = useState([]);\r\n    const [quantityCurrent, setQuantityCurrent] = useState([]);\r\n    const [quantityPer, setQuantityPer] = useState(\"\")\r\n    const [resultVoting, setResultVoting] = useState([])\r\n    const [votesList, setVotesList] = useState([]);\r\n    const [noVotingList, setNoVotingList] = useState([]);\r\n    const [indexForm, setIndexForm] = useState(\"\")\r\n    const [type, setType] = useState(\"Biểu quyết có số dư\");\r\n\r\n    const {\r\n        handleSubmit,\r\n        control,\r\n        setValue,\r\n        setError,\r\n        clearErrors,\r\n        getValues,\r\n        watch,\r\n        formState: { errors }\r\n    } = useForm();\r\n\r\n    const ThoiGianBatDau = useRef({});\r\n    ThoiGianBatDau.current = watch(\"ThoiGianBatDau\", \"\");\r\n    const SoPhut = useRef({});\r\n    SoPhut.current = watch(\"ThoiGianNhacNho\", 0)\r\n\r\n    const handleChangeSelect = (e) => {\r\n        if (e.target.value != 0) {\r\n            clearErrors(e.target.name)\r\n        }\r\n        setValue(e.target.name, e.target.value)\r\n    }\r\n\r\n    const handleChangeType = (e) => {\r\n        setValue(e.target.name, e.target.value)\r\n        setType(e.target.value);\r\n    }\r\n\r\n    const handleToggle = (data, index) => {\r\n        setEditOpen([]);\r\n        setResultState(data);\r\n        setIndexForm(index)\r\n        let newOpen = [];\r\n        newOpen[index] = !open[index]\r\n        setOpen(newOpen);\r\n    }\r\n\r\n    const handleEditToggle = (data, index) => {\r\n        setOpen([])\r\n        setEditState(data);\r\n        setIndexForm(index)\r\n        let newEdit = [];\r\n        newEdit[index] = !editOpen[index]\r\n        setEditOpen(newEdit);\r\n    }\r\n\r\n    const fetchAllPoll = async () => {\r\n        const res = await getAllPoll();\r\n        if (res) {\r\n            setPollArr(res);\r\n            loadingDispatch({ type: 'CLOSE_LOADING' })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getResultAPI = async () => {\r\n            const res = await getResult({ id: resultState.MaBieuQuyet })\r\n            console.log(res);\r\n            setResultVoting(res.Data)\r\n            setLabel(res.Data.map(el => `${el.MaSoDangVien} - ${el.HoTen}`));\r\n            setQuantity(res.Data.map(el => el.SoPhieu));\r\n            setQuantityPer(res.SoLuongBieuQuyet + \"/\" + res.SoLuong)\r\n            setQuantityCurrent(res.SoLuongBieuQuyet)\r\n        }\r\n        const getVotesAPI = async () => {\r\n            const res = await getVotes({ id: resultState.MaBieuQuyet })\r\n            console.log(res);\r\n            setVotesList(res);\r\n        }\r\n        const getNoVotingAPI = async () => {\r\n            const res = await getNoVoting({ id: resultState.MaBieuQuyet })\r\n            console.log(res);\r\n            setNoVotingList(res)\r\n            loadingDispatch({ type: 'CLOSE_LOADING' })\r\n        }\r\n        if (resultState) {\r\n            loadingDispatch({ type: 'OPEN_LOADING' })\r\n            getResultAPI()\r\n            getVotesAPI()\r\n            getNoVotingAPI()\r\n        }\r\n    }, [resultState])\r\n\r\n    const onSubmit = async (data) => {\r\n        loadingDispatch({ type: 'OPEN_LOADING' })\r\n        data.UngCuVien = candidate.map(el => el.MaUngCuVien);\r\n        data.NguoiThamGia = voter.map(el => el.MaNguoiThamGia);\r\n        const res = await updatePoll(data);\r\n        if (res.error) {\r\n            openSnackbarDispatch({\r\n                type: 'SET_OPEN',\r\n                payload: {\r\n                    msg: res.error.msg,\r\n                    type: \"error\"\r\n                }\r\n            })\r\n        } else {\r\n            openSnackbarDispatch({\r\n                type: 'SET_OPEN',\r\n                payload: {\r\n                    msg: \"Đã cập nhật!\",\r\n                    type: \"success\"\r\n                }\r\n            })\r\n            fetchAllPoll();\r\n        }\r\n\r\n        loadingDispatch({ type: 'CLOSE_LOADING' })\r\n        setEditOpen([]);\r\n    }\r\n\r\n    const handleSendEmail = async (id) => {\r\n        loadingDispatch({ type: 'OPEN_LOADING' })\r\n        const res = await mailing({ id });\r\n        if (res) {\r\n            openSnackbarDispatch({\r\n                type: 'SET_OPEN',\r\n                payload: {\r\n                    msg: res.msg,\r\n                    type: \"success\"\r\n                }\r\n            })\r\n        }\r\n        loadingDispatch({ type: 'CLOSE_LOADING' })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadingDispatch({ type: 'OPEN_LOADING' })\r\n        fetchAllPoll();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (editState != null) {\r\n            setValue(\"MaBieuQuyet\", editState.MaBieuQuyet);\r\n            setValue(\"MucDich\", editState.MucDich);\r\n            setValue(\"TenBieuQuyet\", editState.TenBieuQuyet);\r\n            setValue(\"ThoiGianNhacNho\", editState.ThoiGianNhacNho);\r\n            setValue(\"PhamVi\", editState.PhamVi);\r\n            setValue(\"LoaiBieuQuyet\", editState.LoaiBieuQuyet);\r\n            setType(editState.LoaiBieuQuyet);\r\n            setValue(\"SoPhieuToiDa\", editState.SoPhieuToiDa);\r\n            setValue(\"ThoiGianBatDau\", getDateTime(editState.ThoiGianBatDau))\r\n            setValue(\"ThoiGianKetThuc\", getDateTime(editState.ThoiGianKetThuc))\r\n            setCandidate(editState.UngCuVien);\r\n            setVoter(editState.NguoiThamGia)\r\n        }\r\n    }, [editState])\r\n\r\n    useEffect(() => {\r\n        getAllCategory(categoryDispatch, \"partycell\");\r\n        getAllCategory(categoryDispatch, \"position\");\r\n        getAllCategory(categoryDispatch, \"grade\");\r\n    }, [])\r\n\r\n    const VotingResultForm = () => {\r\n\r\n        const [openResult, setOpenResult] = useState(false);\r\n        const [data, setData] = useState([]);\r\n\r\n        const getRate = (all, quan) => {\r\n            return `${+(quan / all * 100).toFixed(2)}%`;\r\n        }\r\n\r\n        const columns = resultState.LoaiBieuQuyet == \"Biểu quyết có số dư\"\r\n            ? [\r\n                { title: \"Mã số Đảng viên\", field: \"MaSoDangVien\", },\r\n                { title: \"Họ tên\", field: \"HoTen\", },\r\n                { title: \"Số phiếu\", field: \"SoPhieu\", },\r\n                { title: \"Tỉ lệ phiếu\", field: \"TiLe\", },\r\n            ]\r\n            : [\r\n                { title: \"Mã số Đảng viên\", field: \"MaSoDangVien\", },\r\n                { title: \"Họ tên\", field: \"HoTen\", },\r\n                { title: \"Số phiếu tín nhiệm\", field: \"SoPhieuTinNhiem\", },\r\n                { title: \"Số phiếu không tín nhiệm\", field: \"SoPhieuKhongTinNhiem\", },\r\n                { title: \"Tỉ lệ phiếu tín nhiệm\", field: \"TiLeTinNhiem\", },\r\n                { title: \"Tỉ lệ phiếu không tín nhiệm\", field: \"TiLeKhongTinNhiem\", },\r\n            ]\r\n\r\n        const [rows, setRows] = useState(\r\n            resultState.LoaiBieuQuyet == \"Biểu quyết có số dư\" ?\r\n                resultVoting.map((el, index) => ({\r\n                    id: index,\r\n                    HoTen: el.HoTen,\r\n                    MaSoDangVien: el.MaSoDangVien,\r\n                    SoPhieu: el.SoPhieu,\r\n                    TiLe: getRate(resultVoting.reduce((a, b) => a + b.SoPhieu, 0), el.SoPhieu)\r\n                }))\r\n                :\r\n                resultVoting.map((el, index) => ({\r\n                    id: index,\r\n                    HoTen: el.HoTen,\r\n                    MaSoDangVien: el.MaSoDangVien,\r\n                    SoPhieuTinNhiem: el.SoPhieu,\r\n                    SoPhieuKhongTinNhiem: quantityCurrent - el.SoPhieu,\r\n                    TiLeTinNhiem: getRate(quantityCurrent, el.SoPhieu),\r\n                    TiLeKhongTinNhiem: getRate(quantityCurrent, quantityCurrent - el.SoPhieu)\r\n                }))\r\n        );\r\n\r\n        const [columnsVote, setColumnsVote] = useState([])\r\n\r\n        const [rowsVote, setRowsVote] = useState([])\r\n\r\n        const [columnsNoVote, setColumnsNoVote] = useState([\r\n            { title: \"STT\", field: \"id\", width: 50 },\r\n            { title: \"Mã số Đảng viên\", field: \"MaSoDangVien\" },\r\n            { title: \"Họ tên\", field: \"HoTen\" },\r\n            { title: \"Email\", field: \"Email\" },\r\n            { title: \"Số điện thoại\", field: \"SoDienThoai\" },\r\n        ])\r\n\r\n        const [rowsNoVote, setRowsNoVote] = useState([])\r\n\r\n        const dataResult = useMemo(() => getExportData(rows, columns))\r\n\r\n        const handleExportPDF = () => {\r\n            let dd = resultState.LoaiBieuQuyet == \"Biểu quyết có số dư\"\r\n                ? votingResultPDF(rows, resultState, rowsNoVote.length)\r\n                : votingResultConfidencePDF(rows, resultState, rowsNoVote.length)\r\n            pdfmakedownload(dd);\r\n        }\r\n\r\n        useEffect(() => {\r\n            let column = [{ title: \"Số phiếu\", field: \"id\", width: 50 }];\r\n            resultVoting.map((el, index) => {\r\n                column.push({\r\n                    title: el.MaSoDangVien + \" - \" + el.HoTen,\r\n                    field: el.MaSoDangVien,\r\n                    align: 'center',\r\n                    render: (params) => params[el.MaSoDangVien]\r\n                        ? <HowToVoteIcon sx={{ width: '100%' }} color=\"success\" />\r\n                        : \"\"\r\n                })\r\n            })\r\n            setColumnsVote(column)\r\n            setRowsVote(votesList.map((el, index) => {\r\n                let item = { id: index + 1 };\r\n                Object.keys(el).map((i, index) => { item[i] = el[i] });\r\n                return item\r\n            }))\r\n        }, [votesList])\r\n\r\n        useEffect(() => {\r\n            setRowsNoVote(noVotingList.map((el, index) => ({\r\n                id: index + 1,\r\n                MaSoDangVien: el.MaNguoiThamGia,\r\n                HoTen: el.HoTen,\r\n                Email: el.Email,\r\n                SoDienThoai: el.SoDienThoai\r\n            })));\r\n        }, [noVotingList])\r\n\r\n        return (\r\n            <Paper className={classes.paper} variant=\"outlined\">\r\n                <Typography textAlign=\"center\" style={{ marginBottom: '40px' }} variant=\"h5\">\r\n                    {resultState.TenBieuQuyet}\r\n                </Typography>\r\n                <Typography marginBottom=\"8px\">Thời gian: <b>{getLocaleDateTime(resultState.ThoiGianBatDau)} - {getLocaleDateTime(resultState.ThoiGianKetThuc)}</b></Typography>\r\n                <Typography marginBottom=\"8px\">Hình thức biểu quyết: <b>{resultState.LoaiBieuQuyet}</b></Typography>\r\n                {resultState.LoaiBieuQuyet == \"Biểu quyết có số dư\" &&\r\n                    <Typography marginBottom=\"8px\">Số phiếu tối đa: <b>{resultState.SoPhieuToiDa}</b></Typography>\r\n                }\r\n                <Typography marginBottom=\"8px\">Số người biểu quyết: <b>{quantityPer}</b></Typography>\r\n                {\r\n                    resultState.LoaiBieuQuyet == \"Biểu quyết có số dư\"\r\n                        ?\r\n                        <Bar\r\n                            width=\"500px\"\r\n                            data={{\r\n                                labels: label\r\n                                ,\r\n                                datasets: [\r\n                                    {\r\n                                        label: \"Số phiếu\",\r\n                                        backgroundColor: [\r\n                                            \"#EF5350\",\r\n                                            \"#42A5F5\",\r\n                                            \"#FFEE58\",\r\n                                            \"#EC407A\",\r\n                                            \"#7E57C2\",\r\n                                            \"#66BB6A\",\r\n                                            \"#26A69A\",\r\n                                            \"#78909C\",\r\n                                            \"#AB47BC\",\r\n                                            \"#9CCC65\",\r\n                                            \"#FFA726\",\r\n                                            \"#5C6BC0\",\r\n                                            \"#8D6E63\",\r\n                                        ],\r\n                                        data: quantity\r\n                                    }\r\n                                ]\r\n                            }}\r\n                            options={{\r\n                                legend: { display: true },\r\n                                title: {\r\n                                    display: true,\r\n                                    text: \"Predicted world population (millions) in 2050\"\r\n                                },\r\n                            }}\r\n                        />\r\n                        :\r\n                        <Grid container spacing={2}>\r\n                            {resultVoting.map(el =>\r\n                                <Grid item xs={3} key={el.MaSoDangVien}>\r\n                                    <DoughnutChart\r\n                                        label={el.HoTen + \" - \" + el.MaSoDangVien}\r\n                                        data={[\r\n                                            { label: \"Tín nhiệm\", quantity: el.SoPhieu },\r\n                                            { label: \"Không tín nhiệm\", quantity: quantityCurrent - el.SoPhieu },\r\n                                        ]}\r\n                                        twoColor\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                }\r\n\r\n                <TableContainer sx={{ width: '1000px', margin: '0 auto', mt: 5, mb: 5 }} variant=\"outlined\">\r\n                    {dataResult.data.length > 0 &&\r\n                        <>\r\n                            <CSVLink data={dataResult.data} headers={dataResult.headers} filename={`${resultState.TenBieuQuyet}.csv`}>\r\n                                <MyButton style={{ marginLeft: 8 }} success>\r\n                                    <FileDownloadIcon style={{ marginRight: 4 }} />Excel\r\n                                </MyButton>\r\n                            </CSVLink>\r\n                            <MyButton onClick={handleExportPDF} sx={{ ml: 1, backgroundColor: \"#e95340\", '&:hover': { backgroundColor: '#e95340' } }}>\r\n                                <FileDownloadIcon sx={{ mr: 0.5 }} />pdf\r\n                            </MyButton>\r\n                        </>\r\n                    }\r\n                    <MaterialTable\r\n                        components={{\r\n                            Container: (props) =>\r\n                                <Paper\r\n                                    {...props}\r\n                                    className={classes.table}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                        }}\r\n                        title={\r\n                            <Grid container alignItems=\"center\">\r\n                                <Typography variant=\"button\">Bảng kết quả</Typography>\r\n                                {\r\n                                    resultState.LuuKetQua == 1 &&\r\n                                    <Chip\r\n                                        sx={{ marginLeft: 3 }}\r\n                                        size=\"small\"\r\n                                        varian=\"outlined\"\r\n                                        color=\"success\"\r\n                                        label={\"Đã lưu\"}\r\n                                        icon={<DoneIcon />}\r\n                                    />\r\n                                }\r\n                            </Grid>\r\n                        }\r\n                        columns={columns}\r\n                        data={rows}\r\n\r\n                        actions={[\r\n                            (resultState.LuuKetQua == 0 && resultState.MucDich != \"Khác\") &&\r\n                            {\r\n                                // isFreeAction: true,\r\n                                icon: 'save',\r\n                                tooltip: 'Lưu',\r\n                                onClick: (event, rowData) => {\r\n                                    setData(rowData);\r\n                                    setOpenResult(true)\r\n                                },\r\n                            },\r\n                        ]}\r\n\r\n                        options={{\r\n                            sorting: false,\r\n                            search: false,\r\n                            paging: false,\r\n                            padding: 'dense',\r\n                            selection: resultState.LuuKetQua == 0 && resultState.MucDich != \"Khác\"\r\n                        }}\r\n                    />\r\n                </TableContainer>\r\n                <SaveResult\r\n                    open={openResult}\r\n                    setOpen={setOpenResult}\r\n                    data={data}\r\n                    resultState={resultState}\r\n                    setResultState={setResultState}\r\n                />\r\n                {resultState.LoaiBieuQuyet == \"Biểu quyết có số dư\" &&\r\n                    <TableContainer sx={{ width: '1000px', margin: '0 auto', mb: 5 }} variant=\"outlined\">\r\n                        <MaterialTable\r\n                            components={{\r\n                                Container: (props) =>\r\n                                    <Paper\r\n                                        {...props}\r\n                                        className={classes.table}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                            }}\r\n                            title={<Typography variant=\"button\">Bảng thống kê phiếu</Typography>}\r\n                            columns={columnsVote}\r\n                            data={rowsVote}\r\n\r\n                            options={{\r\n                                sorting: false,\r\n                                search: false,\r\n                                paging: false,\r\n                                padding: 'dense',\r\n                            }}\r\n                        />\r\n                    </TableContainer>\r\n                }\r\n\r\n                <TableContainer sx={{ width: '1000px', margin: '0 auto', mb: 5 }} variant=\"outlined\">\r\n                    <MaterialTable\r\n                        components={{\r\n                            Container: (props) =>\r\n                                <Paper\r\n                                    {...props}\r\n                                    className={classes.table}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                        }}\r\n                        title={\"Bảng liệt kê Đảng viên không biểu quyết\"}\r\n                        columns={columnsNoVote}\r\n                        data={rowsNoVote}\r\n\r\n                        options={{\r\n                            sorting: false,\r\n                            search: false,\r\n                            paging: false,\r\n                            padding: 'dense',\r\n                        }}\r\n                    />\r\n                </TableContainer>\r\n            </Paper >\r\n        )\r\n    }\r\n\r\n    const checkEditOpen = (index) => {\r\n        return (editOpen.length > 0 && index == indexForm) ? !editOpen.every(el => el == false) : false\r\n    }\r\n    const checkOpen = (index) => {\r\n        return (open.length > 0 && index == indexForm) ? !open.every(el => el == false) : false\r\n    }\r\n    return (\r\n        <>\r\n            <Layout sidebar>\r\n                <div className={classes.header} >\r\n                    <Typography className={classes.headerContent} variant=\"h5\">\r\n                        Quản lý Biểu quyết\r\n                    </Typography>\r\n                </div>\r\n                <Grid style={{ width: '100%' }} container spacing={2}>\r\n                    {pollArr.length > 0 ?\r\n                        pollArr.map((el, index) =>\r\n                            <React.Fragment key={el.MaBieuQuyet}>\r\n                                <Grid item xs={6}>\r\n                                    <Paper className={classes.paper} variant=\"outlined\">\r\n                                        <Grid container justifyContent=\"space-between\" marginBottom=\"40px\">\r\n                                            <Typography variant=\"button\">\r\n                                                {getLocaleDateTime(el.ThoiGianBatDau)} - {getLocaleDateTime(el.ThoiGianKetThuc)}\r\n                                            </Typography>\r\n                                            <Typography color=\"gray\" variant=\"button\">{getDateStatus(el.ThoiGianBatDau, el.ThoiGianKetThuc)}</Typography>\r\n                                        </Grid>\r\n                                        <Typography textAlign=\"center\" className={classes.title} variant=\"h5\">\r\n                                            {el.TenBieuQuyet}\r\n                                        </Typography>\r\n                                        <Typography textAlign=\"center\" className={classes.title}>\r\n                                            Phạm vi: <b>{el.PhamVi}</b>\r\n                                        </Typography>\r\n                                        {\r\n                                            el.LoaiBieuQuyet == \"Biểu quyết có số dư\" ?\r\n                                                <Typography textAlign=\"center\" className={classes.title}>\r\n                                                    Số phiếu tối đa: <b>{el.SoPhieuToiDa}</b>\r\n                                                </Typography>\r\n                                                :\r\n                                                <Typography textAlign=\"center\" className={classes.title}>\r\n                                                    {el.LoaiBieuQuyet}\r\n                                                </Typography>\r\n                                        }\r\n                                        <Grid container justifyContent=\"center\">\r\n                                            {getStatus(el.ThoiGianBatDau, el.ThoiGianKetThuc) == 2 &&\r\n                                                <MyButton onClick={() => handleToggle(el, index)} primary style={{ marginBottom: '20px', marginLeft: \"8px\" }}>\r\n                                                    {open[index] ? 'Ẩn' : 'Xem kết quả'}\r\n                                                </MyButton>\r\n                                            }\r\n                                            {/* {getStatus(el.ThoiGianBatDau, el.ThoiGianKetThuc) == 1 &&\r\n                                                <>\r\n                                                    {editOpen[index] ?\r\n                                                        <Button onClick={() => handleEditToggle(el, index)} variant='outlined' style={{ marginBottom: '20px', marginLeft: \"8px\" }}>\r\n                                                            Hủy\r\n                                                        </Button>\r\n                                                        :\r\n                                                        <MyButton onClick={() => handleEditToggle(el, index)} primary style={{ marginBottom: '20px', marginLeft: \"8px\" }}>\r\n                                                            Chỉnh sửa\r\n                                                        </MyButton>\r\n                                                    }\r\n                                                </>\r\n                                            } */}\r\n                                            {getStatus(el.ThoiGianBatDau, el.ThoiGianKetThuc) != 2 &&\r\n                                                <>\r\n                                                    {\r\n                                                        getStatus(el.ThoiGianBatDau, el.ThoiGianKetThuc) == 0 &&\r\n                                                        (\r\n                                                            editOpen[index] ?\r\n                                                                <Button onClick={() => handleEditToggle(el, index)} variant='outlined' style={{ marginBottom: '20px', marginLeft: \"8px\" }}>\r\n                                                                    Hủy\r\n                                                                </Button>\r\n                                                                :\r\n                                                                <MyButton onClick={() => handleEditToggle(el, index)} primary style={{ marginBottom: '20px', marginLeft: \"8px\" }}>\r\n                                                                    Chỉnh sửa\r\n                                                                </MyButton>\r\n                                                        )\r\n                                                    }\r\n                                                    <MyButton onClick={() => handleSendEmail(el.MaBieuQuyet)} primary style={{ marginBottom: '20px', marginLeft: \"8px\" }}>\r\n                                                        Gửi mail\r\n                                                    </MyButton>\r\n                                                </>\r\n                                            }\r\n                                            <DeleteVotingForm data={el} fetchAllPoll={fetchAllPoll} />\r\n                                        </Grid>\r\n\r\n                                    </Paper>\r\n                                </Grid>\r\n                                {checkOpen(index) &&\r\n                                    <Grid item xs={12}>\r\n                                        <VotingResultForm />\r\n                                    </Grid>\r\n                                }\r\n                                {checkEditOpen(index) &&\r\n                                    <Grid item xs={12}>\r\n                                        <Paper className={classes.paperForm} variant=\"outlined\">\r\n                                            <Typography style={{ textTransform: 'uppercase', marginBottom: 30 }}>Chỉnh sửa biểu quyết</Typography>\r\n                                            <Grid container className={classes.inputItem} alignItems=\"center\">\r\n                                                <Grid item xs={4}>\r\n                                                    <Typography>Tên biểu quyết</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={8}>\r\n                                                    <InputGrid\r\n                                                        noTitle\r\n                                                        name=\"TenBieuQuyet\"\r\n                                                        control={control}\r\n                                                        errors={errors}\r\n                                                        rules={{\r\n                                                            required: \"Vui lòng nhập trường này!\",\r\n                                                        }}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Grid container className={classes.inputItem} alignItems=\"center\">\r\n                                                <Grid item xs={4}>\r\n                                                    <Typography>Mục đích</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={8}>\r\n                                                    <InputGrid\r\n                                                        select\r\n                                                        noTitle\r\n                                                        onChange={handleChangeSelect}\r\n                                                        name=\"MucDich\"\r\n                                                        defaultValue=\"0\"\r\n                                                        control={control}\r\n                                                        errors={errors}\r\n                                                        rules={{\r\n                                                            validate: value =>\r\n                                                                value != 0 || \"Vui lòng nhập trường này!\"\r\n                                                        }}\r\n                                                    >\r\n                                                        <MenuItem value=\"0\">Chọn</MenuItem>\r\n                                                        <MenuItem value=\"Khen thưởng\">Khen thưởng</MenuItem>\r\n                                                        <MenuItem value=\"Kỷ luật\">Kỷ luật</MenuItem>\r\n                                                        <MenuItem value=\"Khác\">Khác</MenuItem>\r\n                                                    </InputGrid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Grid container className={classes.inputItem} alignItems=\"center\">\r\n                                                <Grid item xs={4}>\r\n                                                    <Typography>Loại biểu quyết</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={8}>\r\n                                                    <InputGrid\r\n                                                        select\r\n                                                        noTitle\r\n                                                        onChange={handleChangeType}\r\n                                                        name=\"LoaiBieuQuyet\"\r\n                                                        defaultValue=\"Biểu quyết có số dư\"\r\n                                                        control={control}\r\n                                                        errors={errors}\r\n                                                    >\r\n                                                        <MenuItem value=\"Biểu quyết có số dư\">Biểu quyết có số dư</MenuItem>\r\n                                                        <MenuItem value=\"Biểu quyết tín nhiệm\">Biểu quyết tín nhiệm</MenuItem>\r\n                                                    </InputGrid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            {\r\n                                                type == \"Biểu quyết có số dư\" &&\r\n                                                <Grid container className={classes.inputItem} alignItems=\"center\" >\r\n                                                    <Grid item xs={4}>\r\n                                                        <Typography>Số phiếu tối đa</Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={8}>\r\n                                                        <InputGrid\r\n                                                            noTitle\r\n                                                            type=\"number\"\r\n                                                            defaultValue=\"1\"\r\n                                                            name=\"SoPhieuToiDa\"\r\n                                                            control={control}\r\n                                                            errors={errors}\r\n                                                            InputProps={{ inputProps: { min: 1 } }}\r\n                                                        />\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            }\r\n                                            <Grid container className={classes.inputItem} alignItems=\"center\">\r\n                                                <Grid item xs={4}>\r\n                                                    <Typography>Thời gian bắt đầu</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={8}>\r\n                                                    <InputGrid\r\n                                                        noTitle\r\n                                                        type=\"datetime-local\"\r\n                                                        name=\"ThoiGianBatDau\"\r\n                                                        control={control}\r\n                                                        errors={errors}\r\n                                                        rules={{\r\n                                                            required: \"Vui lòng nhập trường này!\",\r\n                                                        }}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Grid container className={classes.inputItem} alignItems=\"center\">\r\n                                                <Grid item xs={4}>\r\n                                                    <Typography>Thời gian kết thúc</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={8}>\r\n                                                    <InputGrid\r\n                                                        noTitle\r\n                                                        type=\"datetime-local\"\r\n                                                        name=\"ThoiGianKetThuc\"\r\n                                                        control={control}\r\n                                                        errors={errors}\r\n                                                        rules={{\r\n                                                            required: \"Vui lòng nhập trường này!\",\r\n                                                            validate: value => {\r\n                                                                if (new Date(value) < new Date(ThoiGianBatDau.current))\r\n                                                                    return \"Thời gian kết thúc phải lớn hơn thời gian bắt đầu\"\r\n                                                                if (new Date(value) < new Date())\r\n                                                                    return \"Thời gian kết thúc phải hơn thời gian hiện tại\"\r\n                                                                let date = new Date(value);\r\n                                                                date.setMinutes(date.getMinutes() - SoPhut.current);\r\n                                                                if (date < new Date()) {\r\n                                                                    return \"Đã quá thời gian nhắc nhở\"\r\n                                                                }\r\n                                                                return true\r\n                                                            }\r\n                                                        }}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Grid container className={classes.inputItem} alignItems=\"center\" >\r\n                                                <Grid item xs={4}>\r\n                                                    <Typography>Phạm vi</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={8}>\r\n                                                    <InputGrid\r\n                                                        noTitle\r\n                                                        name=\"PhamVi\"\r\n                                                        control={control}\r\n                                                        errors={errors}\r\n                                                        rules={{\r\n                                                            required: \"Vui lòng nhập trường này!\",\r\n                                                        }}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Grid container className={classes.inputItem} alignItems=\"center\" >\r\n                                                <Grid item xs={4}>\r\n                                                    <Typography>Thời gian nhắc nhở (phút)</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={8}>\r\n                                                    <InputGrid\r\n                                                        noTitle\r\n                                                        type=\"number\"\r\n                                                        InputProps={{ inputProps: { min: 10 } }}\r\n                                                        defaultValue=\"10\"\r\n                                                        name=\"ThoiGianNhacNho\"\r\n                                                        control={control}\r\n                                                        errors={errors}\r\n                                                        rules={{\r\n                                                            required: \"Vui lòng nhập trường này!\",\r\n                                                        }}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Grid container style={{ marginTop: '16px' }} >\r\n                                                <Grid item xs={4}>\r\n                                                    <Typography>Ứng cử viên</Typography>\r\n                                                </Grid>\r\n                                                <Grid item container xs={8}>\r\n                                                    {\r\n                                                        candidate.length > 0 &&\r\n                                                        candidate.map(el =>\r\n                                                            <Grid key={el.MaUngCuVien} item xs={12}>\r\n                                                                <Chip style={{ marginBottom: '12px' }}\r\n                                                                    size=\"medium\"\r\n                                                                    varian=\"outlined\"\r\n                                                                    label={el.HoTen + \" - \" + el.MaUngCuVien}\r\n                                                                />\r\n                                                            </Grid>\r\n                                                        )\r\n                                                    }\r\n                                                    <Grid item xs={12}>\r\n                                                        <AddCandidateForm setCandidate={setCandidate} />\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Grid container style={{ marginTop: '16px' }} >\r\n                                                <Grid item xs={4}>\r\n                                                    <Typography>Đơn vị tham gia</Typography>\r\n                                                </Grid>\r\n                                                <Grid item container xs={8}>\r\n                                                    <Grid item xs={12}>\r\n                                                        {\r\n                                                            voter.length > 0 &&\r\n                                                            voter.map(el =>\r\n                                                                <Chip key={el.MaNguoiThamGia} style={{ marginBottom: '12px', marginRight: '4px' }}\r\n                                                                    size=\"small\"\r\n                                                                    varian=\"outlined\"\r\n                                                                    label={el.HoTen + \" - \" + el.MaNguoiThamGia}\r\n                                                                />\r\n                                                            )\r\n                                                        }\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12}>\r\n                                                        <AddVoterForm setVoter={setVoter} />\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Grid container style={{ marginTop: '16px' }} >\r\n                                                <Grid item xs={4}>\r\n                                                </Grid>\r\n                                                <Grid item xs={8}>\r\n                                                    <MyButton onClick={handleSubmit(onSubmit)} info>Lưu</MyButton>\r\n                                                    <Button onClick={() => handleEditToggle(el, index)} variant='outlined' style={{ marginLeft: \"8px\" }}>\r\n                                                        Hủy\r\n                                                    </Button>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Paper>\r\n                                    </Grid>\r\n                                }\r\n                            </React.Fragment>\r\n                        )\r\n                        :\r\n                        <Typography>Không có cuộc biểu quyết nào đang diễn ra</Typography>\r\n                    }\r\n                </Grid>\r\n            </Layout>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Voting;"],"sourceRoot":""}