{"version":3,"sources":["utils/pdf.js","action/votingAction.js","component/DoughnutChart.js","component/SaveResult.js","../node_modules/@mui/icons-material/LabelImportantRounded.js","../node_modules/@mui/icons-material/HowToVote.js","../node_modules/@mui/icons-material/Done.js","public/image/not_found.webp","page/Voting.js"],"names":["exportDD","body","title","pageOrientation","content","columns","text","alignment","Date","getDate","getMonth","getFullYear","style","bold","margin","color","table","headerRows","widths","styles","header","fontSize","tableExample","tableHeader","partyMemberPDF","data","rowSpan","colSpan","map","el","index","push","HoTen","MaSoDangVien","TenGioiTinh","getLocaleDate","NgaySinh","NoiSinh","NgayVaoDang","NgayChinhThuc","NoiVaoDangLanDau","NoiVaoDangChinhThuc","SoThe","TenChucVu","TenDanToc","TenTonGiao","gradePDF","TenChiBo","TenLoai","Nam","moveOutPDF","TenHinhThuc","ChuyenTuDangBo","TenChiBoTu","ChuyenDenDangBo","TenChiBoDen","NgayChuyenDi","NgayChuyenDen","GhiChu","moveInPDF","moveInternalPDF","movePDF","LoaiHinhThuc","rewardPDF","TenKhenThuong","NgayKhenThuong","HinhThuc","disciplinePDF","TenKyLuat","NgayKyLuat","partycellPDF","MaChiBo","BiThu","PhoBiThu","SoDangVien","votingResultConfidencePDF","result","noVoting","console","log","TenBieuQuyet","ThoiGianBatDau","ThoiGianKetThuc","UngCuVien","NguoiThamGia","SoPhieuTinNhiem","SoPhieuKhongTinNhiem","TiLeTinNhiem","TiLeKhongTinNhiem","italics","getLocaleDateTime","length","toFixed","header1","defaultStyle","lineHeight","votingResultPDF","SoPhieu","TiLe","createPoll","payload","a","axios","post","res","status","response","updatePoll","put","MaBieuQuyet","error","getAllPoll","get","checkIsVoted","vote","getResult","id","deletePoll","delete","getPollByTime","getVotes","getNoVoting","mailing","DoughnutChart","label","twoColor","shuffled","sort","Math","random","component","textAlign","variant","labels","datasets","backgroundColor","quantity","option","display","useStyles","makeStyles","theme","icon","spacing","iconWrapper","alignItems","width","height","divider","marginTop","SaveResult","props","open","setOpen","resultState","setResultState","name","voteFor","MucDich","useContext","SnackbarContext","openSnackbarDispatch","openSnackbar","useForm","handleSubmit","register","control","setValue","clearErrors","watch","errors","formState","handleClose","handleChangeSelect","e","target","value","onSubmit","d","DanhSach","type","createRewardDisciplines","msg","LuuKetQua","PaperProps","minWidth","onClose","fullWidth","container","item","xs","flex","sx","marginRight","nameTitle","defaultValue","multiline","minRows","center","select","onChange","rules","validate","onClick","info","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","marginBottom","headerContent","textTransform","fontWeight","paper","padding","justifyContent","votedBtn","cursor","palette","success","main","VotingForm","classes","useState","checkedValues","setCheckedValues","InfoContext","isVoted","setIsVoted","check","setCheck","handleOpen","getValues","handleRadioSelect","split","includes","newNames","filter","n","SoPhieuToiDa","LoaiBieuQuyet","candidateArr","MaUngCuVien","votes","MaNguoiThamGia","fetchCheck","keys","Phieu","useEffect","Button","disableRipple","disableElevation","className","marginLeft","MyButton","disabled","getStatus","primary","Dialog","DialogTitle","DialogContent","dialogContent","Typography","FormGroup","FormControlLabel","render","Checkbox","pointerEvents","checked","checkedName","handleSelect","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","border","RadioGroup","Radio","m","DialogActions","Voting","loadingDispatch","LoadingContext","pollArr","setPollArr","DePer","Quyen","setEditOpen","setLabel","setQuantity","quantityCurrent","setQuantityCurrent","quantityPer","setQuantityPer","resultVoting","setResultVoting","votesList","setVotesList","indexForm","setIndexForm","fetchAllPoll","checkOpen","every","getResultAPI","Data","SoLuongBieuQuyet","SoLuong","getVotesAPI","VotingResultForm","openResult","setOpenResult","getRate","all","quan","field","reduce","b","rows","setRowsVote","setColumnsVote","column","params","i","options","legend","Grid","mt","mb","components","Container","Chip","size","varian","sorting","search","paging","Layout","sidebar","Fragment","getDateStatus","PhamVi","newOpen","handleToggle","position","top","left","transform","p","src","image","alt"],"mappings":"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","file":"static/js/16.ca9d660b.chunk.js","sourcesContent":["import { getLocaleDate, getLocaleDateTime } from \"./utils\"\r\n\r\nconst exportDD = (body, title, pageOrientation = \"portrait\") => {\r\n    return {\r\n        pageOrientation: pageOrientation,\r\n        content: [\r\n            {\r\n                columns: [\r\n                    {\r\n                        text: [\r\n                            'ĐẢNG BỘ ĐẠI HỌC CẦN THƠ \\n',\r\n                            'CHI BỘ KHOA CNTT&TT'\r\n                        ],\r\n                        alignment: 'center'\r\n                    },\r\n                    {\r\n                        text: [\r\n                        ],\r\n                    },\r\n                    [\r\n                        {\r\n                            text: 'ĐẢNG CỘNG SẢN VIỆT NAM \\n',\r\n                            alignment: 'center'\r\n                        },\r\n                        {\r\n                            text: `Ninh Kiều, ngày ${(new Date()).getDate()} tháng ${(new Date()).getMonth() + 1} năm ${(new Date()).getFullYear()} \\n`,\r\n                            alignment: 'center'\r\n                        }\r\n                    ]\r\n                ],\r\n            },\r\n            {\r\n                text: `${title} \\n`,\r\n                alignment: 'center',\r\n                style: 'header',\r\n                bold: true,\r\n                margin: [0, 24, 0, 24]\r\n            },\r\n            {\r\n                style: 'tableExample',\r\n                color: '#222',\r\n                table: {\r\n                    // widths: ['auto', 'auto', 'auto'],\r\n                    headerRows: 2,\r\n                    // keepWithHeaderRows: 1,\r\n                    widths: body.widths,\r\n                    body: body.body\r\n                }\r\n            },\r\n        ],\r\n        styles: {\r\n            header: {\r\n                fontSize: 14,\r\n                alignment: 'justify'\r\n            },\r\n            tableExample: {\r\n                margin: [0, 5, 0, 15]\r\n            },\r\n            content: {\r\n                margin: [0, 30, 0, 0],\r\n            },\r\n            tableHeader: {\r\n                bold: true,\r\n                fontSize: 13,\r\n                color: 'black'\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const partyMemberPDF = (data, title = \"DANH SÁCH ĐẢNG VIÊN\") => {\r\n    let body = {\r\n        widths: ['auto', '*', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto'],\r\n        body: [\r\n            [\r\n                { text: 'STT', style: 'tableHeader', alignment: 'center', rowSpan: 2 },\r\n                { text: 'Họ tên', style: 'tableHeader', alignment: 'center', rowSpan: 2 },\r\n                { text: 'Mã số Đảng viên', style: 'tableHeader', alignment: 'center', rowSpan: 2 },\r\n                { text: 'Giới tính', style: 'tableHeader', alignment: 'center', rowSpan: 2 },\r\n                { text: 'Ngày sinh', style: 'tableHeader', alignment: 'center', rowSpan: 2 },\r\n                { text: 'Nơi sinh', style: 'tableHeader', alignment: 'center', rowSpan: 2 },\r\n                { text: 'Ngày vào Đảng', style: 'tableHeader', alignment: 'center', colSpan: 2 },\r\n                { text: \"\" },\r\n                { text: 'Nơi vào Đảng', style: 'tableHeader', alignment: 'center', colSpan: 2 },\r\n                { text: \"\" },\r\n                { text: 'Số thẻ', style: 'tableHeader', alignment: 'center', rowSpan: 2 },\r\n                { text: 'Chức vụ', style: 'tableHeader', alignment: 'center', rowSpan: 2 },\r\n                { text: 'Dân tộc', style: 'tableHeader', alignment: 'center', rowSpan: 2 },\r\n                { text: 'Tôn giáo', style: 'tableHeader', alignment: 'center', rowSpan: 2 },\r\n            ],\r\n            ['', '', '', \"\", \"\", \"\", { text: \"Lần đầu\", style: 'tableHeader' }, { text: \"Chính thức\", style: 'tableHeader' }, { text: \"Lần đầu\", style: 'tableHeader' }, { text: \"Chính thức\", style: 'tableHeader' }, \"\", \"\", \"\", \"\"],\r\n        ]\r\n    }\r\n\r\n    data.map((el, index) => {\r\n        body.body.push([\r\n            index + 1, el.HoTen, el.MaSoDangVien, el.TenGioiTinh,\r\n            getLocaleDate(el.NgaySinh), el.NoiSinh, getLocaleDate(el.NgayVaoDang), getLocaleDate(el.NgayChinhThuc), el.NoiVaoDangLanDau, el.NoiVaoDangChinhThuc, el.SoThe, el.TenChucVu, el.TenDanToc, el.TenTonGiao])\r\n    })\r\n\r\n    return exportDD(body, title, \"landscape\")\r\n}\r\n\r\nexport const gradePDF = (data, title) => {\r\n    let body = {\r\n        widths: ['auto', '*', 'auto', 'auto', 'auto', 'auto'],\r\n        body: [\r\n            [\r\n                { text: 'STT', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Họ tên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Mã số Đảng viên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Chi bộ', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Loại', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Năm', style: 'tableHeader', alignment: 'center', },\r\n            ],\r\n        ]\r\n    }\r\n\r\n    data.map((el, index) => {\r\n        body.body.push([\r\n            index + 1, el.HoTen, el.MaSoDangVien, el.TenChiBo, el.TenLoai, el.Nam\r\n        ])\r\n    })\r\n\r\n    return exportDD(body, title)\r\n}\r\n\r\nexport const moveOutPDF = (data, title) => {\r\n    let body = {\r\n        widths: ['auto', '*', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto'],\r\n        body: [\r\n            [\r\n                { text: 'STT', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Họ tên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Mã số Đảng viên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Hình thức', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Chuyển từ', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Chuyển đến', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Ngày chuyển đi', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Ngày chuyển về', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Ghi chú', style: 'tableHeader', alignment: 'center', },\r\n            ],\r\n        ]\r\n    }\r\n\r\n    data.map((el, index) => {\r\n        body.body.push([\r\n            index + 1, el.HoTen, el.MaSoDangVien, el.TenHinhThuc,\r\n            \"Đảng bộ \" + el.ChuyenTuDangBo + \", chi bộ \" + el.TenChiBoTu,\r\n            \"Đảng bộ \" + el.ChuyenDenDangBo + \", chi bộ \" + el.TenChiBoDen,\r\n            getLocaleDate(el.NgayChuyenDi), el.NgayChuyenDen ? getLocaleDate(el.NgayChuyenDen) : \"\", el.GhiChu\r\n        ])\r\n    })\r\n\r\n    return exportDD(body, title)\r\n}\r\n\r\nexport const moveInPDF = (data, title) => {\r\n    let body = {\r\n        widths: ['auto', '*', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',],\r\n        body: [\r\n            [\r\n                { text: 'STT', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Họ tên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Mã số Đảng viên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Hình thức', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Chuyển từ', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Chuyển đến', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Ngày chuyển đến', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Ghi chú', style: 'tableHeader', alignment: 'center', },\r\n            ],\r\n        ]\r\n    }\r\n\r\n    data.map((el, index) => {\r\n        body.body.push([\r\n            index + 1, el.HoTen, el.MaSoDangVien, el.TenHinhThuc,\r\n            \"Đảng bộ \" + el.ChuyenTuDangBo + \", chi bộ \" + el.TenChiBoTu,\r\n            \"Đảng bộ \" + el.ChuyenDenDangBo + \", chi bộ \" + el.TenChiBoDen,\r\n            getLocaleDate(el.NgayChuyenDen), el.GhiChu\r\n        ])\r\n    })\r\n\r\n    return exportDD(body, title)\r\n}\r\n\r\nexport const moveInternalPDF = (data, title) => {\r\n    let body = {\r\n        widths: ['auto', '*', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',],\r\n        body: [\r\n            [\r\n                { text: 'STT', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Họ tên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Mã số Đảng viên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Hình thức', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Chuyển từ', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Chuyển đến', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Ngày chuyển', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Ghi chú', style: 'tableHeader', alignment: 'center', },\r\n            ],\r\n        ]\r\n    }\r\n\r\n    data.map((el, index) => {\r\n        body.body.push([\r\n            index + 1, el.HoTen, el.MaSoDangVien, el.TenHinhThuc,\r\n            \"Đảng bộ \" + el.ChuyenTuDangBo + \", chi bộ \" + el.TenChiBoTu,\r\n            \"Đảng bộ \" + el.ChuyenDenDangBo + \", chi bộ \" + el.TenChiBoDen,\r\n            getLocaleDate(el.NgayChuyenDi), el.GhiChu\r\n        ])\r\n    })\r\n\r\n    return exportDD(body, title)\r\n}\r\n\r\nexport const movePDF = (data, title) => {\r\n    let body = {\r\n        widths: ['auto', '*', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto'],\r\n        body: [\r\n            [\r\n                { text: 'STT', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Họ tên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Mã số Đảng viên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Loại', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Hình thức', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Chuyển từ', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Chuyển đến', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Ngày chuyển đi', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Ngày chuyển đến/về', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Ghi chú', style: 'tableHeader', alignment: 'center', },\r\n            ],\r\n        ]\r\n    }\r\n\r\n    data.map((el, index) => {\r\n        body.body.push([\r\n            index + 1, el.HoTen, el.MaSoDangVien, el.LoaiHinhThuc, el.TenHinhThuc,\r\n            \"Đảng bộ \" + el.ChuyenTuDangBo + \", chi bộ \" + el.TenChiBoTu,\r\n            \"Đảng bộ \" + el.ChuyenDenDangBo + \", chi bộ \" + el.TenChiBoDen,\r\n            el.NgayChuyenDi ? getLocaleDate(el.NgayChuyenDi) : \"\", el.NgayChuyenDen ? getLocaleDate(el.NgayChuyenDen) : \"\", el.GhiChu\r\n        ])\r\n    })\r\n\r\n    return exportDD(body, title)\r\n}\r\n\r\nexport const rewardPDF = (data, title) => {\r\n    let body = {\r\n        widths: ['auto', '*', 'auto', 'auto', 'auto', 'auto',],\r\n        body: [\r\n            [\r\n                { text: 'STT', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Họ tên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Mã số Đảng viên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Tên khen thưởng', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Ngày khen thưởng', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Hình thức', style: 'tableHeader', alignment: 'center', },\r\n            ],\r\n        ]\r\n    }\r\n\r\n    data.map((el, index) => {\r\n        body.body.push([\r\n            index + 1, el.HoTen, el.MaSoDangVien, el.TenKhenThuong, getLocaleDate(el.NgayKhenThuong), el.HinhThuc\r\n        ])\r\n    })\r\n\r\n    return exportDD(body, title)\r\n}\r\n\r\nexport const disciplinePDF = (data, title) => {\r\n    let body = {\r\n        widths: ['auto', '*', 'auto', 'auto', 'auto', 'auto',],\r\n        body: [\r\n            [\r\n                { text: 'STT', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Họ tên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Mã số Đảng viên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Tên kỷ luật', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Ngày kỷ luật', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Hình thức', style: 'tableHeader', alignment: 'center', },\r\n            ],\r\n        ]\r\n    }\r\n\r\n    data.map((el, index) => {\r\n        body.body.push([\r\n            index + 1, el.HoTen, el.MaSoDangVien, el.TenKyLuat, getLocaleDate(el.NgayKyLuat), el.HinhThuc\r\n        ])\r\n    })\r\n\r\n    return exportDD(body, title)\r\n}\r\n\r\nexport const partycellPDF = (data, title) => {\r\n    let body = {\r\n        widths: ['auto', 'auto', '*', '*', 'auto', 'auto',],\r\n        body: [\r\n            [\r\n                { text: 'STT', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Mã chi bộ', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Tên chi bộ', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Bí thư', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Phó bí thư', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Số Đảng viên', style: 'tableHeader', alignment: 'center', },\r\n            ],\r\n        ]\r\n    }\r\n\r\n    data.map((el, index) => {\r\n        body.body.push([\r\n            index + 1, el.MaChiBo, el.TenChiBo, el.BiThu, el.PhoBiThu, el.SoDangVien\r\n        ])\r\n    })\r\n\r\n    return exportDD(body, title)\r\n}\r\n\r\nexport const votingResultConfidencePDF = (data, result, noVoting) => {\r\n    console.log(data)\r\n    console.log(result)\r\n\r\n    const { TenBieuQuyet, ThoiGianBatDau, ThoiGianKetThuc, UngCuVien, NguoiThamGia } = result\r\n    let body = {\r\n        widths: ['auto', '*', 'auto', 'auto', 'auto', 'auto', 'auto'],\r\n        // keepWithHeaderRows: 1,\r\n        body: [\r\n            [\r\n                { text: 'STT', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Họ tên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Mã số Đảng viên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Số phiếu tín nhiệm', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Số phiếu không tín nhiệm', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Tỉ lệ phiếu tín nhiệm', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Tỉ lệ phiếu không tín nhiệm', style: 'tableHeader', alignment: 'center', },\r\n\r\n            ],\r\n        ],\r\n    }\r\n\r\n    data.map((el, index) => {\r\n        body.body.push([\r\n            index + 1, el.HoTen, el.MaSoDangVien, el.SoPhieuTinNhiem, el.SoPhieuKhongTinNhiem, el.TiLeTinNhiem, el.TiLeKhongTinNhiem\r\n        ])\r\n    })\r\n\r\n    return {\r\n        content: [\r\n            {\r\n                columns: [\r\n                    {\r\n                        text: [\r\n                            'ĐẢNG BỘ ĐẠI HỌC CẦN THƠ \\n',\r\n                            'CHI BỘ KHOA CNTT&TT'\r\n                        ],\r\n                        alignment: 'center',\r\n                        margin: [0, 0, 30, 20]\r\n                    },\r\n                    [\r\n                        {\r\n                            text: 'ĐẢNG CỘNG SẢN VIỆT NAM \\n',\r\n                            alignment: 'center',\r\n                            margin: [30, 0, 0, 0]\r\n                        },\r\n                        {\r\n                            text: `Ninh Kiều, ngày ${(new Date()).getDate()} tháng ${(new Date()).getMonth() + 1} năm ${(new Date()).getFullYear()} \\n`,\r\n                            alignment: 'center',\r\n                            italics: true,\r\n                            margin: [30, 0, 0, 0],\r\n                        },\r\n                    ]\r\n                ],\r\n            },\r\n            {\r\n                text: 'KẾT QUẢ BIỂU QUYẾT \\n',\r\n                alignment: 'center',\r\n                style: 'header',\r\n                bold: true,\r\n            },\r\n            {\r\n                text: `${TenBieuQuyet} \\n`,\r\n                alignment: 'center',\r\n                bold: true,\r\n                fontSize: 15,\r\n                margin: [0, 10, 0, 20]\r\n            },\r\n            {\r\n                text: `Cuộc biểu quyết bắt đầu vào ${getLocaleDateTime(ThoiGianBatDau)} và kết thúc vào ${getLocaleDateTime(ThoiGianKetThuc)}`\r\n            },\r\n            {\r\n                text: \"1. Thống kê\",\r\n                style: 'header1'\r\n            },\r\n            {\r\n                text: [\r\n                    `Số ứng cử viên: ${UngCuVien.length} \\n`,\r\n                    `Số người tham gia biểu quyết: ${NguoiThamGia.length} \\n`,\r\n                    `Số người không biểu quyết: ${noVoting} \\n `,\r\n                    `Tỉ lệ người tham gia biểu quyết: ${+((NguoiThamGia.length - noVoting) / NguoiThamGia.length * 100).toFixed(2)}%`\r\n                ]\r\n            },\r\n            {\r\n                text: \"2. Kết quả\",\r\n                style: 'header1'\r\n            },\r\n            {\r\n                text: \"(Kết quả được săp xếp theo số lượng phiếu bầu).\"\r\n            },\r\n            {\r\n                style: 'tableExample',\r\n                color: '#222',\r\n                table: {\r\n                    headerRows: 2,\r\n                    widths: body.widths,\r\n                    // keepWithHeaderRows: 1,\r\n                    body: body.body\r\n                }\r\n            },\r\n        ],\r\n        styles: {\r\n            header: {\r\n                fontSize: 16,\r\n                alignment: 'justify'\r\n            },\r\n            tableExample: {\r\n                margin: [0, 5, 0, 15],\r\n            },\r\n            content: {\r\n                margin: [0, 30, 0, 0],\r\n            },\r\n            tableHeader: {\r\n                bold: true,\r\n                fontSize: 13,\r\n                color: 'black'\r\n            },\r\n            header1: {\r\n                margin: [0, 10, 0, 0],\r\n                bold: true\r\n            }\r\n        },\r\n        defaultStyle: {\r\n            fontSize: 13,\r\n            lineHeight: 1.3\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const votingResultPDF = (data, result, noVoting) => {\r\n    console.log(data)\r\n    console.log(result)\r\n\r\n    const { TenBieuQuyet, ThoiGianBatDau, ThoiGianKetThuc, UngCuVien, NguoiThamGia } = result\r\n    let body = {\r\n        widths: ['auto', '*', 'auto', 'auto', 'auto'],\r\n        // keepWithHeaderRows: 1,\r\n        body: [\r\n            [\r\n                { text: 'STT', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Họ tên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Mã số Đảng viên', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Số phiếu', style: 'tableHeader', alignment: 'center', },\r\n                { text: 'Tỉ lệ phiếu', style: 'tableHeader', alignment: 'center', },\r\n\r\n            ],\r\n        ],\r\n    }\r\n\r\n    data.map((el, index) => {\r\n        body.body.push([\r\n            index + 1, el.HoTen, el.MaSoDangVien, el.SoPhieu, el.TiLe\r\n        ])\r\n    })\r\n\r\n    return {\r\n        content: [\r\n            {\r\n                columns: [\r\n                    {\r\n                        text: [\r\n                            'ĐẢNG BỘ ĐẠI HỌC CẦN THƠ \\n',\r\n                            'CHI BỘ KHOA CNTT&TT'\r\n                        ],\r\n                        alignment: 'center',\r\n                        margin: [0, 0, 30, 20]\r\n                    },\r\n                    [\r\n                        {\r\n                            text: 'ĐẢNG CỘNG SẢN VIỆT NAM \\n',\r\n                            alignment: 'center',\r\n                            margin: [30, 0, 0, 0]\r\n                        },\r\n                        {\r\n                            text: `Ninh Kiều, ngày ${(new Date()).getDate()} tháng ${(new Date()).getMonth() + 1} năm ${(new Date()).getFullYear()} \\n`,\r\n                            alignment: 'center',\r\n                            italics: true,\r\n                            margin: [30, 0, 0, 0],\r\n                        },\r\n                    ]\r\n                ],\r\n            },\r\n            {\r\n                text: 'KẾT QUẢ BIỂU QUYẾT \\n',\r\n                alignment: 'center',\r\n                style: 'header',\r\n                bold: true,\r\n            },\r\n            {\r\n                text: `${TenBieuQuyet} \\n`,\r\n                alignment: 'center',\r\n                bold: true,\r\n                fontSize: 15,\r\n                margin: [0, 10, 0, 20]\r\n            },\r\n            {\r\n                text: `Cuộc biểu quyết bắt đầu vào ${getLocaleDateTime(ThoiGianBatDau)} và kết thúc vào ${getLocaleDateTime(ThoiGianKetThuc)}`\r\n            },\r\n            {\r\n                text: \"1. Thống kê\",\r\n                style: 'header1'\r\n            },\r\n            {\r\n                text: [\r\n                    `Số ứng cử viên: ${UngCuVien.length} \\n`,\r\n                    `Số người tham gia biểu quyết: ${NguoiThamGia.length} \\n`,\r\n                    `Số người không biểu quyết: ${noVoting} \\n `,\r\n                    `Tỉ lệ người tham gia biểu quyết: ${(NguoiThamGia.length - noVoting) / NguoiThamGia.length * 100}%`\r\n                ]\r\n            },\r\n            {\r\n                text: \"2. Kết quả\",\r\n                style: 'header1'\r\n            },\r\n            {\r\n                text: \"(Kết quả được săp xếp theo số lượng phiếu bầu).\"\r\n            },\r\n            {\r\n                style: 'tableExample',\r\n                color: '#222',\r\n                table: {\r\n                    headerRows: 2,\r\n                    widths: body.widths,\r\n                    // keepWithHeaderRows: 1,\r\n                    body: body.body\r\n                }\r\n            },\r\n        ],\r\n        styles: {\r\n            header: {\r\n                fontSize: 16,\r\n                alignment: 'justify'\r\n            },\r\n            tableExample: {\r\n                margin: [0, 5, 0, 15],\r\n            },\r\n            content: {\r\n                margin: [0, 30, 0, 0],\r\n            },\r\n            tableHeader: {\r\n                bold: true,\r\n                fontSize: 13,\r\n                color: 'black'\r\n            },\r\n            header1: {\r\n                margin: [0, 10, 0, 0],\r\n                bold: true\r\n            }\r\n        },\r\n        defaultStyle: {\r\n            fontSize: 13,\r\n            lineHeight: 1.3\r\n        }\r\n\r\n    }\r\n\r\n}","import axios from \"../helper/axios\";\r\n\r\nexport const createPoll = async (payload) => {\r\n    console.log(payload);\r\n    try {\r\n        const res = await axios.post('/api/voting/create', payload);\r\n        if (res.status == 201) {\r\n            return res.data\r\n        }\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\nexport const updatePoll = async (payload) => {\r\n    console.log(payload);\r\n    try {\r\n        const res = await axios.put(`/api/voting/${payload.MaBieuQuyet}`, payload);\r\n        if (res.status == 200) {\r\n            return res.data\r\n        }\r\n    } catch (error) {\r\n        return { error: error.response.data }\r\n    }\r\n}\r\n\r\nexport const getAllPoll = async (payload) => {\r\n    try {\r\n        const res = payload\r\n            ? await axios.get('/api/voting?MaSoDangVien=' + payload.MaSoDangVien)\r\n            : await axios.get('/api/voting/')\r\n        console.log(res);\r\n        if (res.status == 200) {\r\n            return res.data\r\n        }\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\nexport const checkIsVoted = async (payload) => {\r\n    try {\r\n        const res = await axios.post('/api/voting/check', payload);\r\n        if (res.status == 200) {\r\n            return res.data\r\n        }\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\nexport const vote = async (payload) => {\r\n    try {\r\n        const res = await axios.post('/api/voting/createvoting', payload);\r\n        if (res.status == 201) {\r\n            return res.data\r\n        }\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\nexport const getResult = async (payload) => {\r\n    try {\r\n        const res = await axios.get('/api/voting/getresult/' + payload.id);\r\n        if (res.status == 200) {\r\n            return res.data\r\n        }\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\nexport const deletePoll = async (payload) => {\r\n    try {\r\n        const res = await axios.delete('/api/voting/' + payload.id);\r\n        if (res.status == 200) {\r\n            return res.data\r\n        }\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\nexport const getPollByTime = async (payload) => {\r\n    try {\r\n        const res = await axios.post('/api/voting/getbytime', payload);\r\n        if (res.status == 200) {\r\n            return res.data\r\n        }\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\nexport const getVotes = async (payload) => {\r\n    try {\r\n        const res = await axios.get('/api/voting/getvotes/' + payload.id);\r\n        if (res.status == 200) {\r\n            return res.data\r\n        }\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\nexport const getNoVoting = async (payload) => {\r\n    try {\r\n        const res = await axios.get('/api/voting/getnovoting/' + payload.id);\r\n        if (res.status == 200) {\r\n            return res.data\r\n        }\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\nexport const mailing = async (payload) => {\r\n    try {\r\n        const res = await axios.post('/api/voting/mailing/?MaBieuQuyet=' + payload.id);\r\n        if (res.status == 200) {\r\n            return res.data\r\n        }\r\n    } catch (error) {\r\n        return { error: error.response.data }\r\n    }\r\n}","import React from 'react';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport Chart from 'chart.js/auto'\r\nimport { ArcElement } from 'chart.js'\r\nimport { Typography } from '@mui/material';\r\n\r\nconst DoughnutChart = ({ label, data, twoColor }) => {\r\n    const shuffled = [\r\n        \"#EF5350\",\r\n        \"#EC407A\",\r\n        \"#AB47BC\",\r\n        \"#7E57C2\",\r\n        \"#5C6BC0\",\r\n        \"#42A5F5\",\r\n        \"#26A69A\",\r\n        \"#66BB6A\",\r\n        \"#9CCC65\",\r\n        \"#FFEE58\",\r\n        \"#FFA726\",\r\n        \"#8D6E63\",\r\n        \"#78909C\",\r\n    ].sort(() => Math.random() - 0.5)\r\n    return (\r\n        <>\r\n            <Typography component={\"body\"} textAlign={\"center\"} variant='button'>{label}</Typography>\r\n            <Doughnut\r\n                data={{\r\n                    labels: data.map(el => el.label),\r\n                    datasets: [\r\n                        {\r\n                            backgroundColor: twoColor ? [\"#66BB6A\", \"#FFEE58\"] : shuffled,\r\n                            data: data.map(el => el.quantity)\r\n                        }\r\n                    ]\r\n                }}\r\n                option={{\r\n                    title: {\r\n                        display: true,\r\n                        text: \"Predicted world population (millions) in 2050\"\r\n                    }\r\n                }}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DoughnutChart;","import LabelImportantRoundedIcon from '@mui/icons-material/LabelImportantRounded';\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle, FormControl,\r\n    Grid, MenuItem, Typography\r\n} from '@mui/material';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\nimport React, { useContext } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { createRewardDisciplines } from '../action/rewardDisciplineAction';\r\nimport { SnackbarContext } from '../contextAPI/SnackbarContext';\r\nimport { getDate } from '../utils/utils';\r\nimport InputGrid from './InputGrid';\r\nimport MyButton from './UI/MyButton';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    icon: {\r\n        margin: theme.spacing(0.5, 1, 0.5, 0),\r\n        fontSize: '1.2rem'\r\n    },\r\n    iconWrapper: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    divider: {\r\n        marginTop: '20px'\r\n    },\r\n}))\r\n\r\nconst SaveResult = (props) => {\r\n    const classes = useStyles();\r\n    const { open, setOpen, data, resultState, setResultState } = props\r\n    const id = resultState.MaBieuQuyet;\r\n    const name = resultState.TenBieuQuyet;\r\n    const voteFor = resultState.MucDich;\r\n    const { openSnackbar, openSnackbarDispatch } = useContext(SnackbarContext)\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        control,\r\n        setValue,\r\n        watch,\r\n        clearErrors,\r\n        formState: { errors }\r\n    } = useForm();\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n    const handleOpen = () => {\r\n        setOpen(true)\r\n    }\r\n    const handleChangeSelect = (e) => {\r\n        if (e.target.value != 0)\r\n            clearErrors(e.target.name)\r\n        setValue(e.target.name, e.target.value)\r\n    }\r\n    const onSubmit = async (d) => {\r\n        d.DanhSach = data\r\n        d.type = voteFor == \"Khen thưởng\" ? \"reward\" : \"discipline\"\r\n        console.log(d);\r\n        const res = await createRewardDisciplines(d, id)\r\n        if (res) {\r\n            openSnackbarDispatch({\r\n                type: 'SET_OPEN',\r\n                payload: {\r\n                    msg: \"Đã lưu!\",\r\n                    type: \"success\"\r\n                }\r\n            })\r\n            setResultState({ ...resultState, LuuKetQua: 1 })\r\n        }\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog PaperProps={{ style: { minWidth: '1000px' } }} open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">{voteFor}</DialogTitle>\r\n                <DialogContent>\r\n                    <FormControl margin=\"dense\" fullWidth>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12}><Typography>Danh sách Đảng viên</Typography></Grid>\r\n                            <Grid container item xs={12} alignItems=\"center\">\r\n                                <Grid item flex={1} />\r\n                                <Grid item>\r\n                                    {data.map(el =>\r\n                                        <Grid key={el.MaSoDangVien} item container alignItems=\"center\">\r\n                                            <LabelImportantRoundedIcon sx={{ marginRight: 2 }} />\r\n                                            <Typography variant=\"h6\">{el.HoTen} - {el.MaSoDangVien}</Typography>\r\n                                        </Grid>\r\n                                    )}\r\n                                </Grid>\r\n                                <Grid item flex={1} />\r\n                            </Grid>\r\n                            {\r\n                                voteFor == \"Khen thưởng\" ?\r\n                                    <>\r\n                                        <Grid item xs={12}>\r\n                                            <InputGrid\r\n                                                nameTitle={\"Tên khen thưởng\"}\r\n                                                name={\"TenKhenThuong\"}\r\n                                                defaultValue={name}\r\n                                                multiline\r\n                                                minRows={3}\r\n                                                control={control}\r\n                                                errors={errors}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <InputGrid\r\n                                                center\r\n                                                select\r\n                                                onChange={handleChangeSelect}\r\n                                                nameTitle={\"Hình thức\"}\r\n                                                name={\"HinhThuc\"}\r\n                                                defaultValue={\"0\"}\r\n                                                rules={{\r\n                                                    validate: value =>\r\n                                                        value != \"0\" || \"Vui lòng nhập trường này!\"\r\n                                                }}\r\n                                                control={control}\r\n                                                errors={errors}\r\n                                            >\r\n                                                <MenuItem value=\"0\">Chọn hình thức</MenuItem>\r\n                                                <MenuItem value=\"Biểu dương\">Biểu dương</MenuItem>\r\n                                                <MenuItem value=\"Tặng giấy khen\">Tặng giấy khen</MenuItem>\r\n                                            </InputGrid>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <InputGrid\r\n                                                center\r\n                                                type=\"date\"\r\n                                                nameTitle={\"Ngày khen thưởng\"}\r\n                                                defaultValue={getDate(new Date)}\r\n                                                name={\"NgayKhenThuong\"}\r\n                                                control={control}\r\n                                                errors={errors}\r\n                                            />\r\n                                        </Grid>\r\n                                    </>\r\n                                    :\r\n                                    <>\r\n                                        <Grid item xs={12}>\r\n                                            <InputGrid\r\n                                                nameTitle={\"Tên kỷ luật\"}\r\n                                                name={\"TenKyLuat\"}\r\n                                                defaultValue={name}\r\n                                                multiline\r\n                                                minRows={3}\r\n                                                control={control}\r\n                                                errors={errors}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <InputGrid\r\n                                                center\r\n                                                select\r\n                                                onChange={handleChangeSelect}\r\n                                                nameTitle={\"Hình thức\"}\r\n                                                name={\"HinhThuc\"}\r\n                                                defaultValue={\"0\"}\r\n                                                rules={{\r\n                                                    validate: value =>\r\n                                                        value != \"0\" || \"Vui lòng nhập trường này!\"\r\n                                                }}\r\n                                                control={control}\r\n                                                errors={errors}\r\n                                            >\r\n                                                <MenuItem value=\"0\">Chọn hình thức</MenuItem>\r\n                                                <MenuItem value=\"Khiển trách\">Khiển trách</MenuItem>\r\n                                                <MenuItem value=\"Cảnh cáo\">Cảnh cáo</MenuItem>\r\n                                                <MenuItem value=\"Cách chức\">Cách chức</MenuItem>\r\n                                                <MenuItem value=\"Khai trừ\">Khai trừ</MenuItem>\r\n                                            </InputGrid>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <InputGrid\r\n                                                center\r\n                                                type=\"date\"\r\n                                                nameTitle={\"Ngày kỷ luật\"}\r\n                                                defaultValue={getDate(new Date)}\r\n                                                name={\"NgayKyLuat\"}\r\n                                                control={control}\r\n                                                errors={errors}\r\n                                            />\r\n                                        </Grid>\r\n                                    </>\r\n                            }\r\n\r\n                        </Grid>\r\n                    </FormControl>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} >\r\n                        Hủy\r\n                    </Button>\r\n                    <MyButton onClick={handleSubmit(onSubmit)} info>\r\n                        Lưu\r\n                    </MyButton>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SaveResult;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M5.94 18.99H15c.65 0 1.26-.31 1.63-.84l3.95-5.57c.25-.35.25-.81 0-1.16l-3.96-5.58C16.26 5.31 15.65 5 15 5H5.94c-.81 0-1.28.93-.81 1.59L9 12l-3.87 5.41c-.47.66 0 1.58.81 1.58z\"\n}), 'LabelImportantRounded');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18 13h-.68l-2 2h1.91L19 17H5l1.78-2h2.05l-2-2H6l-3 3v4c0 1.1.89 2 1.99 2H19c1.1 0 2-.89 2-2v-4l-3-3zm-1-5.05-4.95 4.95-3.54-3.54 4.95-4.95L17 7.95zm-4.24-5.66L6.39 8.66c-.39.39-.39 1.02 0 1.41l4.95 4.95c.39.39 1.02.39 1.41 0l6.36-6.36c.39-.39.39-1.02 0-1.41L14.16 2.3c-.38-.4-1.01-.4-1.4-.01z\"\n}), 'HowToVote');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.2 4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n}), 'Done');\n\nexports.default = _default;","export default __webpack_public_path__ + \"static/media/not_found.900e7173.webp\";","import {\r\n    Button,\r\n    Checkbox,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    FormControlLabel,\r\n    FormGroup,\r\n    Grid,\r\n    Chip,\r\n    Paper, Radio, RadioGroup, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography\r\n} from '@mui/material';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { checkIsVoted, getAllPoll, getResult, getVotes, vote } from '../action/votingAction';\r\nimport Layout from '../component/Layout';\r\nimport MyButton from '../component/UI/MyButton';\r\nimport { InfoContext } from '../contextAPI/InfoContext';\r\nimport { LoadingContext } from '../contextAPI/LoadingContext';\r\nimport { SnackbarContext } from '../contextAPI/SnackbarContext';\r\nimport { getDateStatus, getLocaleDateTime, getStatus } from '../utils/utils';\r\nimport image from '../public/image/not_found.webp'\r\nimport MaterialTable from '@material-table/core';\r\nimport SaveResult from '../component/SaveResult';\r\nimport HowToVoteIcon from '@mui/icons-material/HowToVote';\r\nimport DoneIcon from '@mui/icons-material/Done';\r\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\r\nimport { CSVLink } from 'react-csv';\r\nimport { votingResultConfidencePDF, votingResultPDF } from '../utils/pdf';\r\nimport DoughnutChart from '../component/DoughnutChart';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    header: {\r\n        marginBottom: '40px'\r\n    },\r\n    headerContent: {\r\n        textTransform: 'uppercase',\r\n        fontWeight: '600',\r\n    },\r\n    paper: {\r\n        padding: '16px',\r\n        marginBottom: '16px',\r\n        marginTop: '20px',\r\n        // width: 'fit-content'\r\n    },\r\n    title: {\r\n        marginBottom: '14px'\r\n    },\r\n    flex: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        marginBottom: '40px'\r\n    },\r\n    votedBtn: {\r\n        cursor: \"default\",\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.success.main,\r\n        }\r\n    },\r\n    // checkbox: {\r\n    //     color: 'green !important',\r\n    // }\r\n}))\r\n\r\nconst Voting = () => {\r\n    const classes = useStyles();\r\n    const { loadingDispatch } = useContext(LoadingContext)\r\n    const { info } = useContext(InfoContext);\r\n    const [pollArr, setPollArr] = useState([]);\r\n    const DePer = info.info.Quyen[\"12\"];\r\n    const { openSnackbarDispatch } = useContext(SnackbarContext);\r\n    const [open, setOpen] = useState([]);\r\n    const [editOpen, setEditOpen] = useState([]);\r\n    const [editState, setEditState] = useState(null);\r\n    const [resultState, setResultState] = useState(null);\r\n    const [label, setLabel] = useState([])\r\n    const [quantity, setQuantity] = useState([]);\r\n    const [quantityCurrent, setQuantityCurrent] = useState([]);\r\n    const [quantityPer, setQuantityPer] = useState(\"\")\r\n    const [resultVoting, setResultVoting] = useState([])\r\n    const [votesList, setVotesList] = useState([]);\r\n    const [noVotingList, setNoVotingList] = useState([]);\r\n    const [indexForm, setIndexForm] = useState(\"\")\r\n    const [type, setType] = useState(\"Biểu quyết có số dư\");\r\n\r\n    const fetchAllPoll = async () => {\r\n        const res = DePer\r\n            ? await getAllPoll()\r\n            : await getAllPoll({ MaSoDangVien: info.info.MaSoDangVien });\r\n        if (res) {\r\n            setPollArr(res);\r\n            loadingDispatch({ type: 'CLOSE_LOADING' })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadingDispatch({ type: 'OPEN_LOADING' })\r\n        fetchAllPoll();\r\n    }, [])\r\n\r\n    const handleToggle = (data, index) => {\r\n        setEditOpen([]);\r\n        setResultState(data);\r\n        setIndexForm(index)\r\n        let newOpen = [];\r\n        newOpen[index] = !open[index]\r\n        setOpen(newOpen);\r\n    }\r\n    const checkOpen = (index) => {\r\n        return (open.length > 0 && index == indexForm) ? !open.every(el => el == false) : false\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getResultAPI = async () => {\r\n            const res = await getResult({ id: resultState.MaBieuQuyet })\r\n            console.log(res);\r\n            setResultVoting(res.Data)\r\n            setLabel(res.Data.map(el => `${el.MaSoDangVien} - ${el.HoTen}`));\r\n            setQuantity(res.Data.map(el => el.SoPhieu));\r\n            setQuantityPer(res.SoLuongBieuQuyet + \"/\" + res.SoLuong)\r\n            setQuantityCurrent(res.SoLuongBieuQuyet)\r\n        }\r\n        const getVotesAPI = async () => {\r\n            const res = await getVotes({ id: resultState.MaBieuQuyet })\r\n            console.log(res);\r\n            setVotesList(res);\r\n            loadingDispatch({ type: 'CLOSE_LOADING' })\r\n        }\r\n        if (resultState) {\r\n            loadingDispatch({ type: 'OPEN_LOADING' })\r\n            getResultAPI()\r\n            getVotesAPI()\r\n        }\r\n    }, [resultState])\r\n\r\n\r\n    const VotingResultForm = () => {\r\n\r\n        const [openResult, setOpenResult] = useState(false);\r\n        const [data, setData] = useState([]);\r\n\r\n        const getRate = (all, quan) => {\r\n            return `${+(quan / all * 100).toFixed(2)}%`;\r\n        }\r\n\r\n        const columns = resultState.LoaiBieuQuyet == \"Biểu quyết có số dư\"\r\n            ? [\r\n                { title: \"Mã số Đảng viên\", field: \"MaSoDangVien\", },\r\n                { title: \"Họ tên\", field: \"HoTen\", },\r\n                { title: \"Số phiếu\", field: \"SoPhieu\", },\r\n                { title: \"Tỉ lệ phiếu\", field: \"TiLe\", },\r\n            ]\r\n            : [\r\n                { title: \"Mã số Đảng viên\", field: \"MaSoDangVien\", },\r\n                { title: \"Họ tên\", field: \"HoTen\", },\r\n                { title: \"Số phiếu tín nhiệm\", field: \"SoPhieuTinNhiem\", },\r\n                { title: \"Số phiếu không tín nhiệm\", field: \"SoPhieuKhongTinNhiem\", },\r\n                { title: \"Tỉ lệ phiếu tín nhiệm\", field: \"TiLeTinNhiem\", },\r\n                { title: \"Tỉ lệ phiếu không tín nhiệm\", field: \"TiLeKhongTinNhiem\", },\r\n            ]\r\n\r\n        const [rows, setRows] = useState(\r\n            resultState.LoaiBieuQuyet == \"Biểu quyết có số dư\" ?\r\n                resultVoting.map((el, index) => ({\r\n                    id: index,\r\n                    HoTen: el.HoTen,\r\n                    MaSoDangVien: el.MaSoDangVien,\r\n                    SoPhieu: el.SoPhieu,\r\n                    TiLe: getRate(resultVoting.reduce((a, b) => a + b.SoPhieu, 0), el.SoPhieu)\r\n                }))\r\n                :\r\n                resultVoting.map((el, index) => ({\r\n                    id: index,\r\n                    HoTen: el.HoTen,\r\n                    MaSoDangVien: el.MaSoDangVien,\r\n                    SoPhieuTinNhiem: el.SoPhieu,\r\n                    SoPhieuKhongTinNhiem: quantityCurrent - el.SoPhieu,\r\n                    TiLeTinNhiem: getRate(quantityCurrent, el.SoPhieu),\r\n                    TiLeKhongTinNhiem: getRate(quantityCurrent, quantityCurrent - el.SoPhieu)\r\n                }))\r\n        );\r\n\r\n        const [rowsVote, setRowsVote] = useState([])\r\n\r\n        const [columnsVote, setColumnsVote] = useState([])\r\n\r\n        useEffect(() => {\r\n            let column = [{ title: \"Số phiếu\", field: \"id\", width: 50 }];\r\n            resultVoting.map((el, index) => {\r\n                column.push({\r\n                    title: el.MaSoDangVien + \" - \" + el.HoTen,\r\n                    field: el.MaSoDangVien,\r\n                    align: 'center',\r\n                    render: (params) => params[el.MaSoDangVien]\r\n                        ? <HowToVoteIcon sx={{ width: '100%' }} color=\"success\" />\r\n                        : \"\"\r\n                })\r\n            })\r\n            setColumnsVote(column)\r\n            setRowsVote(votesList.map((el, index) => {\r\n                let item = { id: index + 1 };\r\n                Object.keys(el).map((i, index) => { item[i] = el[i] });\r\n                return item\r\n            }))\r\n        }, [votesList])\r\n\r\n        return (\r\n            <Paper className={classes.paper} variant=\"outlined\">\r\n                <Typography textAlign=\"center\" style={{ marginBottom: '40px' }} variant=\"h5\">\r\n                    {resultState.TenBieuQuyet}\r\n                </Typography>\r\n                <Typography marginBottom=\"8px\">Thời gian: <b>{getLocaleDateTime(resultState.ThoiGianBatDau)} - {getLocaleDateTime(resultState.ThoiGianKetThuc)}</b></Typography>\r\n                <Typography marginBottom=\"8px\">Hình thức biểu quyết: <b>{resultState.LoaiBieuQuyet}</b></Typography>\r\n                {resultState.LoaiBieuQuyet == \"Biểu quyết có số dư\" &&\r\n                    <Typography marginBottom=\"8px\">Số phiếu tối đa: <b>{resultState.SoPhieuToiDa}</b></Typography>\r\n                }\r\n                <Typography marginBottom=\"8px\">Số người biểu quyết: <b>{quantityPer}</b></Typography>\r\n                {\r\n                    resultState.LoaiBieuQuyet == \"Biểu quyết có số dư\"\r\n                        ?\r\n                        <Bar\r\n                            width=\"500px\"\r\n                            data={{\r\n                                labels: label\r\n                                ,\r\n                                datasets: [\r\n                                    {\r\n                                        label: \"Số phiếu\",\r\n                                        backgroundColor: [\r\n                                            \"#EF5350\",\r\n                                            \"#42A5F5\",\r\n                                            \"#FFEE58\",\r\n                                            \"#EC407A\",\r\n                                            \"#7E57C2\",\r\n                                            \"#66BB6A\",\r\n                                            \"#26A69A\",\r\n                                            \"#78909C\",\r\n                                            \"#AB47BC\",\r\n                                            \"#9CCC65\",\r\n                                            \"#FFA726\",\r\n                                            \"#5C6BC0\",\r\n                                            \"#8D6E63\",\r\n                                        ],\r\n                                        data: quantity\r\n                                    }\r\n                                ]\r\n                            }}\r\n                            options={{\r\n                                legend: { display: true },\r\n                                title: {\r\n                                    display: true,\r\n                                    text: \"Predicted world population (millions) in 2050\"\r\n                                },\r\n                            }}\r\n                        />\r\n                        :\r\n                        <Grid container spacing={2}>\r\n                            {resultVoting.map(el =>\r\n                                <Grid item xs={3} key={el.MaSoDangVien}>\r\n                                    <DoughnutChart\r\n                                        label={el.HoTen + \" - \" + el.MaSoDangVien}\r\n                                        data={[\r\n                                            { label: \"Tín nhiệm\", quantity: el.SoPhieu },\r\n                                            { label: \"Không tín nhiệm\", quantity: quantityCurrent - el.SoPhieu },\r\n                                        ]}\r\n                                        twoColor\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                }\r\n\r\n                <TableContainer sx={{ width: '1000px', margin: '0 auto', mt: 5, mb: 5 }} variant=\"outlined\">\r\n                    <MaterialTable\r\n                        components={{\r\n                            Container: (props) =>\r\n                                <Paper\r\n                                    {...props}\r\n                                    className={classes.table}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                        }}\r\n                        title={\r\n                            <Grid container alignItems=\"center\">\r\n                                <Typography variant=\"button\">Bảng kết quả</Typography>\r\n                                {\r\n                                    resultState.LuuKetQua == 1 &&\r\n                                    <Chip\r\n                                        sx={{ marginLeft: 3 }}\r\n                                        size=\"small\"\r\n                                        varian=\"outlined\"\r\n                                        color=\"success\"\r\n                                        label={\"Đã lưu\"}\r\n                                        icon={<DoneIcon />}\r\n                                    />\r\n                                }\r\n                            </Grid>\r\n                        }\r\n                        columns={columns}\r\n                        data={rows}\r\n\r\n                        options={{\r\n                            sorting: false,\r\n                            search: false,\r\n                            paging: false,\r\n                            padding: 'dense',\r\n                        }}\r\n                    />\r\n                </TableContainer>\r\n                <SaveResult\r\n                    open={openResult}\r\n                    setOpen={setOpenResult}\r\n                    data={data}\r\n                    resultState={resultState}\r\n                    setResultState={setResultState}\r\n                />\r\n            </Paper >\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Layout sidebar>\r\n                <div className={classes.header} >\r\n                    <Typography className={classes.headerContent} variant=\"h5\">\r\n                        Biểu quyết\r\n                    </Typography>\r\n                </div>\r\n                <Grid style={{ width: '100%' }} container spacing={2}>\r\n                    {pollArr.length > 0 ?\r\n                        pollArr.map((el, index) =>\r\n                            <React.Fragment key={el.MaBieuQuyet}>\r\n                                <Grid item xs={6}>\r\n                                    <Paper className={classes.paper} variant=\"outlined\">\r\n                                        <Grid container justifyContent=\"space-between\" marginBottom=\"40px\">\r\n                                            <Typography variant=\"button\">\r\n                                                {getLocaleDateTime(el.ThoiGianBatDau)} - {getLocaleDateTime(el.ThoiGianKetThuc)}\r\n                                            </Typography>\r\n                                            <Typography color=\"gray\" variant=\"button\">{getDateStatus(el.ThoiGianBatDau, el.ThoiGianKetThuc)}</Typography>\r\n                                        </Grid>\r\n                                        <Typography textAlign=\"center\" className={classes.title} variant=\"h5\">\r\n                                            {el.TenBieuQuyet}\r\n                                        </Typography>\r\n                                        <Typography textAlign=\"center\" className={classes.title}>\r\n                                            Phạm vi: <b>{el.PhamVi}</b>\r\n                                        </Typography>\r\n                                        {\r\n                                            el.LoaiBieuQuyet == \"Biểu quyết có số dư\" ?\r\n                                                <Typography textAlign=\"center\" className={classes.title}>\r\n                                                    Số phiếu tối đa: <b>{el.SoPhieuToiDa}</b>\r\n                                                </Typography>\r\n                                                :\r\n                                                <Typography textAlign=\"center\" className={classes.title}>\r\n                                                    {el.LoaiBieuQuyet}\r\n                                                </Typography>\r\n                                        }\r\n                                        <Grid container justifyContent=\"center\">\r\n                                            <VotingForm data={el} />\r\n                                            {\r\n                                                getStatus(el.ThoiGianBatDau, el.ThoiGianKetThuc) == 2 &&\r\n                                                <MyButton onClick={() => handleToggle(el, index)} primary sx={{ marginLeft: 1 }}>\r\n                                                    {open[index] ? 'Ẩn' : 'Xem kết quả'}\r\n                                                </MyButton>\r\n\r\n                                            }\r\n                                        </Grid>\r\n                                    </Paper>\r\n                                </Grid>\r\n                                {checkOpen(index) &&\r\n                                    <Grid item xs={12}>\r\n                                        <VotingResultForm />\r\n                                    </Grid>\r\n                                }\r\n                            </React.Fragment>\r\n                        )\r\n                        :\r\n                        <div\r\n                            style={{\r\n                                position: \"absolute\",\r\n                                top: \"50%\",\r\n                                left: \"calc( 50% + 127px )\",\r\n                                transform: 'translate(-50%, -50%)',\r\n                                textAlign: 'center',\r\n                                p: '30px 80px'\r\n                            }}\r\n                        >\r\n                            <img src={image} alt=\"not-found\"></img>\r\n                            <Typography>Không có cuộc biểu quyết nào</Typography>\r\n                        </div>\r\n                    }\r\n                </Grid>\r\n            </Layout>\r\n        </>\r\n    );\r\n};\r\n\r\nconst VotingForm = ({ data }) => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const [checkedValues, setCheckedValues] = useState([]);\r\n    const { openSnackbarDispatch } = useContext(SnackbarContext)\r\n    const { info } = useContext(InfoContext);\r\n    const [isVoted, setIsVoted] = useState(false);\r\n    const [check, setCheck] = useState([]);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const { control, getValues, setValue, register } = useForm();\r\n\r\n    function handleSelect(e, checkedName) {\r\n        const newNames = checkedValues?.includes(checkedName)\r\n            ? checkedValues?.filter(name => name !== checkedName)\r\n            : [...(checkedValues ?? []), checkedName];\r\n        setCheckedValues(newNames);\r\n\r\n        return newNames;\r\n    }\r\n\r\n    function handleRadioSelect(e) {\r\n        const name = e.target.value.split(\"=\")[0]\r\n        const value = e.target.value.split(\"=\")[1]\r\n        setCheck(check.includes(name) ? check : [...check, name])\r\n        let newNames = [];\r\n        if (checkedValues?.includes(name)) {\r\n            if (value == 0)\r\n                newNames = checkedValues?.filter(n => n != name)\r\n            else\r\n                newNames = [...checkedValues]\r\n        } else\r\n            if (value == 0)\r\n                newNames = [...checkedValues]\r\n            else\r\n                newNames = [...(checkedValues ?? []), name]\r\n\r\n        // const newNames = (checkedValues?.includes(name) || value == 0)\r\n        //     ? checkedValues?.filter(n => n != name)\r\n        //     : [...(checkedValues ?? []), name];\r\n        setCheckedValues(newNames);\r\n\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        if (checkedValues.length > data.SoPhieuToiDa && data.LoaiBieuQuyet == \"Biểu quyết có số dư\") {\r\n            openSnackbarDispatch({\r\n                type: 'SET_OPEN',\r\n                payload: {\r\n                    msg: `Được chọn nhiều nhất ${data.SoPhieuToiDa} ứng cử viên`,\r\n                    type: \"error\"\r\n                }\r\n            })\r\n        }\r\n        else if (checkedValues.length == 0 && data.LoaiBieuQuyet == \"Biểu quyết có số dư\") {\r\n            openSnackbarDispatch({\r\n                type: 'SET_OPEN',\r\n                payload: {\r\n                    msg: `Phải chọn ít nhất 1 ứng cử viên`,\r\n                    type: \"error\"\r\n                }\r\n            })\r\n        } else if (check.length < data.UngCuVien.length && data.LoaiBieuQuyet == \"Biểu quyết tín nhiệm\") {\r\n            openSnackbarDispatch({\r\n                type: 'SET_OPEN',\r\n                payload: {\r\n                    msg: `Phải chọn tín nhiệm hoặc không`,\r\n                    type: \"error\"\r\n                }\r\n            })\r\n        } else {\r\n            const candidateArr = {};\r\n            data.UngCuVien.map(el => {\r\n                if (checkedValues.includes(el.MaUngCuVien))\r\n                    candidateArr[el.MaUngCuVien] = 1\r\n                else\r\n                    candidateArr[el.MaUngCuVien] = 0\r\n            })\r\n            const votes = {\r\n                MaBieuQuyet: data.MaBieuQuyet,\r\n                MaNguoiThamGia: info.info.MaSoDangVien,\r\n                UngCuVien: candidateArr,\r\n            }\r\n            const res = await vote(votes)\r\n            if (res) {\r\n                openSnackbarDispatch({\r\n                    type: 'SET_OPEN',\r\n                    payload: {\r\n                        msg: res.msg,\r\n                        type: \"success\"\r\n                    }\r\n                })\r\n                fetchCheck();\r\n            }\r\n            setOpen(false);\r\n        }\r\n    }\r\n\r\n    const fetchCheck = async () => {\r\n        const res = await checkIsVoted({\r\n            MaBieuQuyet: data.MaBieuQuyet,\r\n            MaNguoiThamGia: info.info.MaSoDangVien,\r\n        });\r\n        if (res) {\r\n            console.log(res);\r\n            setIsVoted(res.isVoted);\r\n            if (res.isVoted) {\r\n                setCheckedValues(Object.keys(res.Phieu).map(el => {\r\n                    if (res.Phieu[el] == 1)\r\n                        return el\r\n                }))\r\n                setCheck(Object.keys(res.Phieu))\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchCheck();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(\"Check: \", check);\r\n    }, [check])\r\n\r\n    useEffect(() => {\r\n        console.log(\"CheckArr: \", checkedValues);\r\n    }, [checkedValues])\r\n\r\n    return (\r\n        <>\r\n            {isVoted ?\r\n                <>\r\n                    <Button disableRipple disableElevation className={classes.votedBtn} variant=\"contained\" color=\"success\">Đã biểu quyết</Button>\r\n                    <Button onClick={handleOpen} sx={{ marginLeft: 1 }} variant=\"outlined\">Xem</Button>\r\n                </>\r\n                :\r\n                <MyButton\r\n                    disabled={getStatus(data.ThoiGianBatDau, data.ThoiGianKetThuc) != 1}\r\n                    onClick={handleOpen}\r\n                    primary>\r\n                    Biểu quyết\r\n                </MyButton>\r\n            }\r\n            {/* {\r\n                getStatus(data.ThoiGianBatDau, data.ThoiGianKetThuc) == 2 &&\r\n                <MyButton onClick={() => handleToggle(el, index)} primary style={{ marginBottom: '20px', marginLeft: \"8px\" }}>\r\n                    {open[index] ? 'Ẩn' : 'Xem kết quả'}\r\n                </MyButton>\r\n\r\n            } */}\r\n            <Dialog PaperProps={{ style: { minWidth: \"700px\" } }} fullWidth open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Biểu quyết</DialogTitle>\r\n                <DialogContent className={classes.dialogContent}>\r\n                    <Typography className={classes.title} alignItems=\"center\" variant=\"h5\">\r\n                        {data.TenBieuQuyet}\r\n                    </Typography>\r\n                    <Typography marginBottom=\"8px\">\r\n                        Thời gian: <b>{getLocaleDateTime(data.ThoiGianBatDau)} - {getLocaleDateTime(data.ThoiGianKetThuc)}</b>\r\n                    </Typography>\r\n                    {\r\n                        data.LoaiBieuQuyet == \"Biểu quyết có số dư\" ?\r\n                            <>\r\n                                <Typography marginBottom=\"8px\">\r\n                                    Loại biểu quyết: Biểu quyết có số dư\r\n                                </Typography>\r\n                                <Typography marginBottom=\"8px\">\r\n                                    Số phiếu tối đa: <b>{data.SoPhieuToiDa}</b>\r\n                                </Typography>\r\n                                <FormGroup>\r\n                                    {data.UngCuVien.map(el =>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Controller\r\n                                                    name=\"names\"\r\n                                                    render={({ props }) => {\r\n                                                        return (\r\n                                                            <Checkbox\r\n                                                                sx={{\r\n                                                                    '&.Mui-disabled': {\r\n                                                                        pointerEvents: 'auto',\r\n                                                                        cursor: 'not-allowed',\r\n                                                                        '&:hover': {\r\n                                                                            backgroundColor: 'transparent',\r\n                                                                        },\r\n                                                                        color: 'green !important',\r\n                                                                        '& .MuiSvgIcon-root': {\r\n                                                                            backgroundColor: '#eee',\r\n                                                                        },\r\n                                                                    },\r\n                                                                }}\r\n                                                                disabled={isVoted}\r\n                                                                checked={checkedValues.includes(el.MaUngCuVien)}\r\n                                                                onChange={(e) => handleSelect(e, el.MaUngCuVien)}\r\n                                                            />\r\n                                                        );\r\n                                                    }}\r\n                                                    control={control}\r\n                                                />\r\n                                            }\r\n                                            key={el.MaUngCuVien}\r\n                                            label={el.HoTen + \" - \" + el.MaUngCuVien}\r\n                                        />\r\n                                    )}\r\n                                </FormGroup>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <Typography marginBottom=\"8px\">\r\n                                    Loại biểu quyết: {data.LoaiBieuQuyet}\r\n                                </Typography>\r\n                                <TableContainer variant=\"outlined\" component={Paper}>\r\n                                    <Table aria-label=\"simple table\">\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell sx={{ width: '50%' }}>Ứng cử viên</TableCell>\r\n                                                <TableCell align='center' sx={{ width: '100%', display: 'flex', justifyContent: 'space-around' }}>\r\n                                                    <Typography>Tín nhiệm</Typography>\r\n                                                    <Typography>Không tín nhiệm</Typography>\r\n                                                </TableCell>\r\n                                                {/* <TableCell align='center' sx={{ width: '25%' }}>Không tín nhiệm</TableCell> */}\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {data.UngCuVien.map(el =>\r\n                                                <TableRow\r\n                                                    key={el.MaUngCuVien}\r\n                                                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                                >\r\n                                                    <TableCell>\r\n                                                        {el.HoTen + \" - \" + el.MaUngCuVien}\r\n                                                    </TableCell>\r\n                                                    {/* <FormControlLabel\r\n                                                            control={ */}\r\n                                                    <Controller\r\n                                                        name=\"names\"\r\n                                                        render={({ props }) => {\r\n                                                            return (\r\n                                                                <RadioGroup\r\n                                                                    value={\r\n                                                                        (check.length > 0 && check.includes(el.MaUngCuVien)) ?\r\n                                                                            checkedValues.includes(el.MaUngCuVien)\r\n                                                                                ? el.MaUngCuVien + \"=1\"\r\n                                                                                : el.MaUngCuVien + \"=0\"\r\n                                                                            :\r\n                                                                            \"\"\r\n                                                                    }\r\n                                                                    onChange={handleRadioSelect}\r\n                                                                >\r\n                                                                    <TableCell align='center'>\r\n                                                                        <FormControlLabel\r\n                                                                            value={el.MaUngCuVien + \"=1\"}\r\n                                                                            control={<Radio sx={{\r\n                                                                                m: '0 50px',\r\n                                                                                '&.Mui-disabled': {\r\n                                                                                    pointerEvents: 'auto',\r\n                                                                                    cursor: 'not-allowed',\r\n                                                                                    '&:hover': {\r\n                                                                                        backgroundColor: 'transparent',\r\n                                                                                    },\r\n                                                                                    color: 'green !important',\r\n                                                                                },\r\n                                                                            }} />}\r\n                                                                            label=\"\"\r\n                                                                            disabled={isVoted}\r\n                                                                        />\r\n                                                                        <FormControlLabel\r\n                                                                            value={el.MaUngCuVien + \"=0\"}\r\n                                                                            control={<Radio sx={{\r\n                                                                                m: '0 50px',\r\n                                                                                '&.Mui-disabled': {\r\n                                                                                    pointerEvents: 'auto',\r\n                                                                                    cursor: 'not-allowed',\r\n                                                                                    '&:hover': {\r\n                                                                                        backgroundColor: 'transparent',\r\n                                                                                    },\r\n                                                                                    color: 'green !important',\r\n                                                                                },\r\n                                                                            }} />}\r\n                                                                            label=\"\"\r\n                                                                            disabled={isVoted}\r\n                                                                        />\r\n                                                                    </TableCell>\r\n                                                                </RadioGroup>\r\n                                                            );\r\n                                                        }}\r\n                                                        control={control}\r\n                                                    //     />\r\n                                                    // }\r\n                                                    />\r\n                                                </TableRow>\r\n                                            )}\r\n\r\n\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </>\r\n                    }\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {\r\n                        isVoted ?\r\n                            <Button onClick={handleClose} >\r\n                                Thoát\r\n                            </Button>\r\n                            :\r\n                            <>\r\n                                <Button onClick={handleClose} >\r\n                                    Hủy\r\n                                </Button>\r\n                                <MyButton onClick={handleSubmit} success>\r\n                                    Đồng ý\r\n                                </MyButton>\r\n                            </>\r\n                    }\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Voting;"],"sourceRoot":""}