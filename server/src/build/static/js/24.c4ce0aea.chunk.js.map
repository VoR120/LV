{"version":3,"sources":["component/MyInfo.js","component/MyLevel.js","component/MyParty.js","page/MyFile.js"],"names":["useStyles","makeStyles","theme","inputItem","marginTop","spacing","input","backgroundColor","MyInfo","props","useContext","CategoryContext","category","disable","categoryDispatch","control","errors","setValue","loading","clearErrors","setError","qqArr","getValues","setQqArr","dcttArr","setDcttArr","nohtArr","setNohtArr","qqValue","setQqValue","dcttValue","setDcttValue","nohtValue","setNohtValue","classes","handleChangeInput","e","target","name","value","handleChangeProvince","type","provinceValue","fetchApiSetQq","a","axios","get","res","districtArr","data","districts","wardArr","fetchApiSetDctt","fetchApiSetNoht","handleChangeDistrict","districtValue","wards","handleChangeWard","wardValue","Grid","container","className","item","xs","InputGrid","select","nameTitle","defaultValue","disabled","onChange","categories","ethnic","length","map","eth","MenuItem","MaDanToc","TenDanToc","religion","rel","MaTonGiao","TenTonGiao","style","width","Typography","flex","MySelectReactHookForm","rules","validate","provinceArr","pro","code","dis","w","placeholder","noTitle","btn","divider","removeIcon","palette","error","main","color","common","white","dark","addIcon","success","MyLevel","flArray","levelArray","setFlArray","setLevelArray","openSnackbarDispatch","SnackbarContext","it","MaTinHoc","TenTinHoc","Divider","politics","pol","MaChinhTri","TenChinhTri","i","index","flanguage","fl","MaNgoaiNgu","TenNgoaiNgu","arr","MaTrinhDo","TenTrinhDo","alignItems","IconButton","onClick","id","newData","splice","forEach","payload","msg","handleRemoveInput","size","handleChangeFLSelect","handleChangeLevelSelect","MyParty","header","marginBottom","headerContent","textTransform","fontWeight","wrapper","paper","padding","paperContent","paddingBottom","imageWrapper","position","height","background","margin","fileUpload","cursor","outline","content","left","top","fontSize","textAlign","closeBtn","right","primary","loadingWrapper","MyFile","InfoContext","info","infoDispatch","openSnackbar","LoadingContext","loadingDispatch","useState","step","setStep","setDisable","imageUpload","setImageUpload","firstImage","setFirstImage","dateArr","useForm","handleSubmit","formState","reset","TabPanel","children","other","role","hidden","Box","p","a11yProps","handleChangeSelect","useEffect","Object","keys","key","includes","getDate","preview","el","push","console","log","getProvinceArr","resQQP","QueQuan","resQQD","resQQW","resDCTTP","DiaChiThuongTru","resDCTTD","resDCTTW","resNOHTP","NoiOHienTai","resNOHTD","resNOHTW","detail","obj","setA","Promise","all","getFlanguageLevel","getAllCategoryPM","Layout","sidebar","variant","MyButton","newValue","JSON","stringify","NgoaiNgu","HinhAnh","DiaChi","QQAddress","DCTTAddress","NOHTAddress","updateInfo","Button","image","ExportFile","button","open","Paper","src","alt","multiple","file","files","URL","createObjectURL","partycell","MaChiBo","TenChiBo","MaChucVu","TenChucVu","sx","borderBottom","borderColor","Tabs","event","indicatorColor","textColor","Tab","label","F"],"mappings":"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","file":"static/js/24.c4ce0aea.chunk.js","sourcesContent":["import { Grid, MenuItem, Typography } from '@mui/material';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\nimport React, { useContext } from 'react';\r\nimport { CategoryContext } from '../contextAPI/CategoryContext';\r\nimport axios from '../helper/axios';\r\nimport InputGrid from './InputGrid';\r\nimport MySelectReactHookForm from './UI/MySelectReactHookForm';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    inputItem: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    input: {\r\n        '& .Mui-disabled': {\r\n            backgroundColor: '#f7f8f8',\r\n            '-webkit-text-fill-color': 'rgba(0, 0, 0, 0.9)'\r\n        }\r\n    }\r\n}))\r\n\r\nconst MyInfo = (props) => {\r\n    const { category, categoryDispatch } = useContext(CategoryContext);\r\n\r\n    const { disable, control, errors, setValue, loading, setError, clearErrors, getValues,\r\n        qqArr, setQqArr,\r\n        dcttArr, setDcttArr,\r\n        nohtArr, setNohtArr,\r\n        qqValue, setQqValue,\r\n        dcttValue, setDcttValue,\r\n        nohtValue, setNohtValue, } = props\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleChangeInput = (e) => {\r\n        setValue(e.target.name, e.target.value)\r\n    }\r\n\r\n    const handleChangeProvince = (e, type) => {\r\n        const { name, value } = e.target;\r\n        setValue(name, value);\r\n        if (value != \"0\") {\r\n            clearErrors(e.target.name)\r\n        }\r\n        switch (type) {\r\n            case \"qq\":\r\n                setQqValue({ ...qqValue, provinceValue: value });\r\n                const fetchApiSetQq = async () => {\r\n                    const res = await axios.get(`https://provinces.open-api.vn/api/p/${value}/?depth=2`)\r\n                    setQqArr({ ...qqArr, districtArr: res.data.districts })\r\n                }\r\n                if (value != '0') {\r\n                    fetchApiSetQq();\r\n                } else\r\n                    setQqArr({ ...qqArr, districtArr: [], wardArr: [] });\r\n                setValue(\"QQHuyen\", \"0\");\r\n                setValue(\"QQXa\", \"0\");\r\n                break;\r\n            case \"dctt\":\r\n                setDcttValue({ ...dcttValue, provinceValue: value });\r\n                const fetchApiSetDctt = async () => {\r\n                    const res = await axios.get(`https://provinces.open-api.vn/api/p/${value}/?depth=2`)\r\n                    setDcttArr({ ...dcttArr, districtArr: res.data.districts })\r\n                }\r\n                if (value != '0') {\r\n                    fetchApiSetDctt();\r\n                } else\r\n                    setDcttArr({ ...dcttArr, districtArr: [], wardArr: [] });\r\n                setValue(\"DCTTHuyen\", \"0\");\r\n                setValue(\"DCTTXa\", \"0\");\r\n                break;\r\n            case \"noht\":\r\n                setNohtValue({ ...nohtValue, provinceValue: value });\r\n                const fetchApiSetNoht = async () => {\r\n                    const res = await axios.get(`https://provinces.open-api.vn/api/p/${value}/?depth=2`)\r\n                    setNohtArr({ ...nohtArr, districtArr: res.data.districts })\r\n                }\r\n                if (value != '0') {\r\n                    fetchApiSetNoht();\r\n                } else\r\n                    setNohtArr({ ...nohtArr, districtArr: [], wardArr: [] });\r\n                setValue(\"NOHTHuyen\", \"0\");\r\n                setValue(\"NOHTXa\", \"0\");\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleChangeDistrict = (e, type) => {\r\n        const { name, value } = e.target;\r\n        setValue(name, value);\r\n        if (value != \"0\") {\r\n            clearErrors(e.target.name)\r\n        }\r\n        switch (type) {\r\n            case \"qq\":\r\n                setQqValue({ ...qqValue, districtValue: value });\r\n                const fetchApiSetQq = async () => {\r\n                    const res = await axios.get(`https://provinces.open-api.vn/api/d/${value}/?depth=2`)\r\n                    setQqArr({ ...qqArr, wardArr: res.data.wards })\r\n                }\r\n                if (value != '0') {\r\n                    fetchApiSetQq();\r\n                } else\r\n                    setQqArr({ ...qqArr, wardArr: [] })\r\n                setValue(\"QQXa\", \"0\")\r\n                break;\r\n            case \"dctt\":\r\n                setDcttValue({ ...dcttValue, districtValue: value });\r\n                const fetchApiSetDctt = async () => {\r\n                    const res = await axios.get(`https://provinces.open-api.vn/api/d/${value}/?depth=2`)\r\n                    setDcttArr({ ...dcttArr, wardArr: res.data.wards })\r\n                }\r\n                if (value != '0') {\r\n                    fetchApiSetDctt();\r\n                } else\r\n                    setDcttArr({ ...dcttArr, wardArr: [] })\r\n                setValue(\"DCTTXa\", \"0\")\r\n                break;\r\n            case \"noht\":\r\n                setNohtValue({ ...nohtValue, districtValue: value });\r\n                const fetchApiSetNoht = async () => {\r\n                    const res = await axios.get(`https://provinces.open-api.vn/api/d/${value}/?depth=2`)\r\n                    setNohtArr({ ...nohtArr, wardArr: res.data.wards })\r\n                }\r\n                if (value != '0') {\r\n                    fetchApiSetNoht();\r\n                } else\r\n                    setNohtArr({ ...nohtArr, wardArr: [] })\r\n                setValue(\"NOHTXa\", \"0\")\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleChangeWard = (e, type) => {\r\n        const { name, value } = e.target;\r\n        setValue(name, value);\r\n        if (value != \"0\") {\r\n            clearErrors(e.target.name)\r\n        }\r\n        switch (type) {\r\n            case \"qq\":\r\n                if (value != 0)\r\n                    setQqValue({ ...qqValue, wardValue: value });\r\n                break;\r\n            case \"dctt\":\r\n                if (value != 0)\r\n                    setDcttValue({ ...dcttValue, wardValue: value });\r\n                break;\r\n            case \"noht\":\r\n                if (value != 0)\r\n                    setNohtValue({ ...nohtValue, wardValue: value });\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {loading ||\r\n                <Grid container className={classes.input} spacing={1}>\r\n                    <Grid item xs={6}>\r\n                        <InputGrid\r\n                            select\r\n                            nameTitle={\"Dân tộc\"}\r\n                            name={\"MaDanToc\"}\r\n                            defaultValue=\"\"\r\n                            control={control}\r\n                            errors={errors}\r\n                            disabled={disable}\r\n                            onChange={handleChangeInput}\r\n                        >\r\n                            {category.categories.ethnic.length > 0 &&\r\n                                category.categories.ethnic.map(eth =>\r\n                                    <MenuItem key={eth.MaDanToc} value={eth.MaDanToc}>{eth.TenDanToc}</MenuItem>\r\n                                )\r\n                            }\r\n                        </InputGrid>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <InputGrid\r\n                            select\r\n                            nameTitle={\"Tôn giáo\"}\r\n                            name={\"MaTonGiao\"}\r\n                            defaultValue=\"\"\r\n                            control={control}\r\n                            errors={errors}\r\n                            disabled={disable}\r\n                            onChange={handleChangeInput}\r\n                        >\r\n                            {category.categories.religion.length > 0 &&\r\n                                category.categories.religion.map(rel =>\r\n                                    <MenuItem key={rel.MaTonGiao} value={rel.MaTonGiao}>{rel.TenTonGiao}</MenuItem>\r\n                                )\r\n                            }\r\n                        </InputGrid>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <InputGrid\r\n                            type=\"date\"\r\n                            nameTitle={`Ngày sinh`}\r\n                            name={\"NgaySinh\"}\r\n                            control={control}\r\n                            errors={errors}\r\n                            disabled={disable}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <InputGrid\r\n                            nameTitle={`Quốc tịch`}\r\n                            name={\"QuocTich\"}\r\n                            control={control}\r\n                            errors={errors}\r\n                            disabled={disable}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <InputGrid\r\n                            nameTitle={`Số điện thoại`}\r\n                            name={\"SoDienThoai\"}\r\n                            control={control}\r\n                            errors={errors}\r\n                            disabled={disable}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <InputGrid\r\n                            nameTitle={`Email`}\r\n                            name={\"Email\"}\r\n                            control={control}\r\n                            errors={errors}\r\n                            disabled={disable}\r\n                        />\r\n                    </Grid>\r\n                    <Grid container item xs={12} className={classes.inputItem}>\r\n                        <Grid item style={{ width: '150px' }}>\r\n                            <Typography>Quê quán</Typography>\r\n                        </Grid>\r\n                        <Grid item container flex={1} spacing={1}>\r\n                            <Grid item xs={4}>\r\n                                <MySelectReactHookForm\r\n                                    nameTitle={\"Tỉnh\"}\r\n                                    name={\"QQTinh\"}\r\n                                    defaultValue={\"0\"}\r\n                                    control={control}\r\n                                    errors={errors}\r\n                                    disabled={disable}\r\n                                    rules={{\r\n                                        validate: value =>\r\n                                            value != \"0\" || \"Vui lòng nhập trường này!\"\r\n                                    }}\r\n                                    onChange={e => handleChangeProvince(e, \"qq\")}\r\n                                >\r\n                                    <MenuItem value=\"0\">Tỉnh</MenuItem>\r\n                                    {qqArr.provinceArr.map(pro =>\r\n                                        <MenuItem value={pro.code} key={pro.code}>{pro.name}</MenuItem>\r\n                                    )}\r\n                                </MySelectReactHookForm>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <MySelectReactHookForm\r\n                                    nameTitle={\"Huyện\"}\r\n                                    name={\"QQHuyen\"}\r\n                                    defaultValue={\"0\"}\r\n                                    control={control}\r\n                                    errors={errors}\r\n                                    disabled={disable}\r\n                                    rules={{\r\n                                        validate: value =>\r\n                                            value != \"0\" || \"Vui lòng nhập trường này!\"\r\n                                    }}\r\n                                    onChange={e => handleChangeDistrict(e, \"qq\")}\r\n\r\n                                >\r\n                                    <MenuItem value=\"0\">Huyện</MenuItem>\r\n                                    {qqArr.districtArr.map(dis =>\r\n                                        <MenuItem value={dis.code} key={dis.code}>{dis.name}</MenuItem>\r\n                                    )}\r\n                                </MySelectReactHookForm>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <MySelectReactHookForm\r\n                                    nameTitle={\"Xã\"}\r\n                                    name={\"QQXa\"}\r\n                                    defaultValue={\"0\"}\r\n                                    control={control}\r\n                                    errors={errors}\r\n                                    disabled={disable}\r\n                                    rules={{\r\n                                        validate: value =>\r\n                                            value != \"0\" || \"Vui lòng nhập trường này!\"\r\n                                    }}\r\n                                    onChange={e => handleChangeWard(e, \"qq\")}\r\n                                >\r\n                                    <MenuItem value=\"0\">Xã</MenuItem>\r\n                                    {qqArr.wardArr.map(w =>\r\n                                        <MenuItem value={w.code} key={w.code}>{w.name}</MenuItem>\r\n                                    )}\r\n                                </MySelectReactHookForm>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <InputGrid\r\n                                    onChange={handleChangeInput}\r\n                                    placeholder={\"Số nhà, Đường...\"}\r\n                                    noTitle\r\n                                    name={\"QQChiTiet\"}\r\n                                    defaultValue={\"\"}\r\n                                    control={control}\r\n                                    errors={errors}\r\n                                    disabled={disable}\r\n                                // rules={{ required: \"Vui lòng nhập trường này!\" }}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container item xs={12} className={classes.inputItem}>\r\n                        <Grid item style={{ width: '150px' }}>\r\n                            <Typography>Địa chỉ thường trú</Typography>\r\n                        </Grid>\r\n                        <Grid item container flex={1} spacing={1}>\r\n                            <Grid item xs={4}>\r\n                                <MySelectReactHookForm\r\n                                    nameTitle={\"Tỉnh\"}\r\n                                    name={\"DCTTTinh\"}\r\n                                    defaultValue={\"0\"}\r\n                                    control={control}\r\n                                    errors={errors}\r\n                                    disabled={disable}\r\n                                    rules={{\r\n                                        validate: value =>\r\n                                            value != \"0\" || \"Vui lòng nhập trường này!\"\r\n                                    }}\r\n                                    onChange={e => handleChangeProvince(e, \"dctt\")}\r\n                                >\r\n                                    <MenuItem value=\"0\">Tỉnh</MenuItem>\r\n                                    {dcttArr.provinceArr.map(pro =>\r\n                                        <MenuItem value={pro.code} key={pro.code}>{pro.name}</MenuItem>\r\n                                    )}\r\n                                </MySelectReactHookForm>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <MySelectReactHookForm\r\n                                    nameTitle={\"Huyện\"}\r\n                                    name={\"DCTTHuyen\"}\r\n                                    defaultValue={\"0\"}\r\n                                    control={control}\r\n                                    disabled={disable}\r\n                                    errors={errors}\r\n                                    rules={{\r\n                                        validate: value =>\r\n                                            value != \"0\" || \"Vui lòng nhập trường này!\"\r\n                                    }}\r\n                                    onChange={e => handleChangeDistrict(e, \"dctt\")}\r\n\r\n                                >\r\n                                    <MenuItem value=\"0\">Huyện</MenuItem>\r\n                                    {dcttArr.districtArr.map(dis =>\r\n                                        <MenuItem value={dis.code} key={dis.code}>{dis.name}</MenuItem>\r\n                                    )}\r\n                                </MySelectReactHookForm>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <MySelectReactHookForm\r\n                                    nameTitle={\"Xã\"}\r\n                                    name={\"DCTTXa\"}\r\n                                    defaultValue={\"0\"}\r\n                                    control={control}\r\n                                    errors={errors}\r\n                                    disabled={disable}\r\n                                    rules={{\r\n                                        validate: value =>\r\n                                            value != \"0\" || \"Vui lòng nhập trường này!\"\r\n                                    }}\r\n                                    onChange={e => handleChangeWard(e, \"dctt\")}\r\n                                >\r\n                                    <MenuItem value=\"0\">Xã</MenuItem>\r\n                                    {dcttArr.wardArr.map(w =>\r\n                                        <MenuItem value={w.code} key={w.code}>{w.name}</MenuItem>\r\n                                    )}\r\n                                </MySelectReactHookForm>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <InputGrid\r\n                                    onChange={handleChangeInput}\r\n                                    placeholder={\"Số nhà, Đường...\"}\r\n                                    noTitle\r\n                                    name={\"DCTTChiTiet\"}\r\n                                    defaultValue={\"\"}\r\n                                    control={control}\r\n                                    errors={errors}\r\n                                    disabled={disable}\r\n                                // rules={{ required: \"Vui lòng nhập trường này!\" }}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container item xs={12} className={classes.inputItem}>\r\n                        <Grid item style={{ width: '150px' }}>\r\n                            <Typography>Nơi ở hiện tại</Typography>\r\n                        </Grid>\r\n                        <Grid item container flex={1} spacing={1}>\r\n                            <Grid item xs={4}>\r\n                                <MySelectReactHookForm\r\n                                    nameTitle={\"Tỉnh\"}\r\n                                    name={\"NOHTTinh\"}\r\n                                    defaultValue={\"0\"}\r\n                                    control={control}\r\n                                    errors={errors}\r\n                                    disabled={disable}\r\n                                    rules={{\r\n                                        validate: value =>\r\n                                            value != \"0\" || \"Vui lòng nhập trường này!\"\r\n                                    }}\r\n                                    onChange={e => handleChangeProvince(e, \"noht\")}\r\n                                >\r\n                                    <MenuItem value=\"0\">Tỉnh</MenuItem>\r\n                                    {nohtArr.provinceArr.map(pro =>\r\n                                        <MenuItem value={pro.code} key={pro.code}>{pro.name}</MenuItem>\r\n                                    )}\r\n                                </MySelectReactHookForm>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <MySelectReactHookForm\r\n                                    nameTitle={\"Huyện\"}\r\n                                    name={\"NOHTHuyen\"}\r\n                                    defaultValue={\"0\"}\r\n                                    control={control}\r\n                                    disabled={disable}\r\n                                    errors={errors}\r\n                                    rules={{\r\n                                        validate: value =>\r\n                                            value != \"0\" || \"Vui lòng nhập trường này!\"\r\n                                    }}\r\n                                    onChange={e => handleChangeDistrict(e, \"noht\")}\r\n\r\n                                >\r\n                                    <MenuItem value=\"0\">Huyện</MenuItem>\r\n                                    {nohtArr.districtArr.map(dis =>\r\n                                        <MenuItem value={dis.code} key={dis.code}>{dis.name}</MenuItem>\r\n                                    )}\r\n                                </MySelectReactHookForm>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <MySelectReactHookForm\r\n                                    nameTitle={\"Xã\"}\r\n                                    name={\"NOHTXa\"}\r\n                                    defaultValue={\"0\"}\r\n                                    control={control}\r\n                                    disabled={disable}\r\n                                    errors={errors}\r\n                                    rules={{\r\n                                        validate: value =>\r\n                                            value != \"0\" || \"Vui lòng nhập trường này!\"\r\n                                    }}\r\n                                    onChange={e => handleChangeWard(e, \"noht\")}\r\n                                >\r\n                                    <MenuItem value=\"0\">Xã</MenuItem>\r\n                                    {nohtArr.wardArr.map(w =>\r\n                                        <MenuItem value={w.code} key={w.code}>{w.name}</MenuItem>\r\n                                    )}\r\n                                </MySelectReactHookForm>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <InputGrid\r\n                                    onChange={handleChangeInput}\r\n                                    placeholder={\"Số nhà, Đường...\"}\r\n                                    noTitle\r\n                                    name={\"NOHTChiTiet\"}\r\n                                    defaultValue={\"\"}\r\n                                    disabled={disable}\r\n                                    control={control}\r\n                                    errors={errors}\r\n                                // rules={{ required: \"Vui lòng nhập trường này!\" }}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MyInfo;","import AddIcon from '@mui/icons-material/Add';\r\nimport RemoveIcon from '@mui/icons-material/Remove';\r\nimport { Divider, Grid, IconButton, MenuItem } from '@mui/material';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\nimport React, { Fragment, useContext } from 'react';\r\nimport { CategoryContext } from '../contextAPI/CategoryContext';\r\nimport { SnackbarContext } from '../contextAPI/SnackbarContext';\r\nimport InputGrid from './InputGrid';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    btn: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    divider: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    removeIcon: {\r\n        marginTop: theme.spacing(2),\r\n        backgroundColor: theme.palette.error.main,\r\n        color: theme.palette.common.white,\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.error.dark,\r\n            color: theme.palette.common.white\r\n        }\r\n    },\r\n    addIcon: {\r\n        marginTop: theme.spacing(2),\r\n        backgroundColor: theme.palette.success.main,\r\n        color: theme.palette.common.white,\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.success.dark,\r\n            color: theme.palette.common.white\r\n        }\r\n    }\r\n}))\r\n\r\nconst MyLevel = (props) => {\r\n    const classes = useStyles();\r\n    const { disable, control, errors, setValue, loading, flArray, levelArray, setFlArray, setLevelArray } = props;\r\n    const { category, categoryDispatch } = useContext(CategoryContext);\r\n    const { openSnackbarDispatch } = useContext(SnackbarContext);\r\n\r\n    const handleChangeFLSelect = (e, index) => {\r\n        const { name, value } = e.target\r\n        let arr = [...flArray]\r\n        setValue(name, value);\r\n        setValue(`MaTrinhDo${index}`, \"0\");\r\n        arr[index].MaNgoaiNgu = value;\r\n        arr[index].MaTrinhDo = \"0\";\r\n        setFlArray(arr);\r\n    }\r\n\r\n    const handleChangeLevelSelect = (e, index) => {\r\n        const { name, value } = e.target\r\n        let arr = [...flArray]\r\n        setValue(name, value);\r\n        arr[index].MaTrinhDo = value;\r\n        setFlArray(arr);\r\n    }\r\n\r\n    const handleRemoveInput = (id, index) => {\r\n        if (flArray.length == 1) {\r\n            openSnackbarDispatch({\r\n                type: 'SET_OPEN',\r\n                payload: {\r\n                    type: \"error\",\r\n                    msg: \"Bạn phải chọn ít nhất một ngoại ngữ\"\r\n                }\r\n            })\r\n            return;\r\n        }\r\n        let newData = [...flArray];\r\n        newData.splice(index, 1);\r\n        flArray.forEach((i, index) => {\r\n            setValue(`MaNgoaiNgu${index}`, \"0\")\r\n            setValue(`MaTrinhDo${index}`, \"0\")\r\n        })\r\n        setFlArray(newData);\r\n    }\r\n\r\n    const handleAddInput = () => {\r\n        setFlArray([...flArray, { MaNgoaiNgu: \"0\", MaTrinhDo: \"0\" }])\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {loading ||\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={6}>\r\n                        <InputGrid\r\n                            nameTitle={`Nghề nghiệp`}\r\n                            name={\"NgheNghiep\"}\r\n                            control={control}\r\n                            errors={errors}\r\n                            disabled={disable}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <InputGrid\r\n                            nameTitle={`Trình độ học vấn`}\r\n                            name={\"TrinhDoHocVan\"}\r\n                            control={control}\r\n                            errors={errors}\r\n                            disabled={disable}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <InputGrid\r\n                            select\r\n                            nameTitle={\"Trình độ tin học\"}\r\n                            name={\"MaTinHoc\"}\r\n                            defaultValue={\"0001\"}\r\n                            control={control}\r\n                            errors={errors}\r\n                            disabled={disable}\r\n                        >\r\n                            {category.categories.it.length > 0 &&\r\n                                category.categories.it.map(it =>\r\n                                    <MenuItem key={it.MaTinHoc} value={it.MaTinHoc}>{it.TenTinHoc}</MenuItem>\r\n                                )}\r\n                        </InputGrid>\r\n                        <Divider className={classes.divider} />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <InputGrid\r\n                            select\r\n                            nameTitle={\"Trình độ chính trị\"}\r\n                            name={\"MaChinhTri\"}\r\n                            defaultValue={\"0001\"}\r\n                            control={control}\r\n                            errors={errors}\r\n                            disabled={disable}\r\n                        >\r\n                            {category.categories.politics.length > 0 &&\r\n                                category.categories.politics.map(pol =>\r\n                                    <MenuItem key={pol.MaChinhTri} value={pol.MaChinhTri}>{pol.TenChinhTri}</MenuItem>\r\n                                )}\r\n                        </InputGrid>\r\n                        <Divider className={classes.divider} />\r\n                    </Grid>\r\n                    <>\r\n                        {disable &&\r\n                            flArray.map((i, index) =>\r\n                                <Fragment key={index}>\r\n                                    <Grid item xs={6}>\r\n                                        <InputGrid\r\n                                            select\r\n                                            nameTitle={\"Ngoại ngữ\"}\r\n                                            name={`MaNgoaiNgu${index}`}\r\n                                            defaultValue={\"0001\"}\r\n                                            control={control}\r\n                                            errors={errors}\r\n                                            disabled={disable}\r\n                                        >\r\n                                            {category.categories.flanguage.length > 0 &&\r\n                                                category.categories.flanguage.map(fl =>\r\n                                                    <MenuItem key={fl.MaNgoaiNgu} value={fl.MaNgoaiNgu}>{fl.TenNgoaiNgu}</MenuItem>\r\n                                                )}\r\n                                        </InputGrid>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <InputGrid\r\n                                            select\r\n                                            nameTitle={\"Trình độ ngoại ngữ\"}\r\n                                            name={`MaTrinhDo${index}`}\r\n                                            defaultValue={\"\"}\r\n                                            control={control}\r\n                                            errors={errors}\r\n                                            disabled={disable}\r\n                                        >\r\n                                            {\r\n                                                levelArray.length > 0 &&\r\n                                                levelArray.map((arr, i) => {\r\n                                                    if (i == index)\r\n                                                        return arr.map(fl =>\r\n                                                            <MenuItem key={fl.MaTrinhDo} value={fl.MaTrinhDo}>{fl.TenTrinhDo}</MenuItem>\r\n                                                        )\r\n                                                })\r\n                                            }\r\n                                        </InputGrid>\r\n                                    </Grid>\r\n                                </Fragment>\r\n                            )}\r\n                        {\r\n                            !disable &&\r\n                            flArray.length > 0 &&\r\n                            flArray.map((i, index) =>\r\n                                <Grid key={i.MaNgoaiNgu} container alignItems=\"center\">\r\n                                    <Grid item xs={1}>\r\n                                        <IconButton onClick={(e) => handleRemoveInput(i.MaNgoaiNgu, index)} size=\"small\" className={classes.removeIcon}><RemoveIcon /></IconButton>\r\n                                    </Grid>\r\n                                    <Grid container item xs={11}>\r\n                                        <Grid item xs={6}>\r\n                                            <InputGrid\r\n                                                select\r\n                                                onChange={(e) => { handleChangeFLSelect(e, index) }}\r\n                                                nameTitle={\"Ngoại ngữ\"}\r\n                                                name={`MaNgoaiNgu${index}`}\r\n                                                defaultValue={\"0\"}\r\n                                                rules={{\r\n                                                    validate: value =>\r\n                                                        value != \"0\" || \"Vui lòng nhập trường này!\"\r\n                                                }}\r\n                                                control={control}\r\n                                                errors={errors}\r\n                                                disabled={disable}\r\n                                            >\r\n                                                <MenuItem value=\"0\">Chọn ngoại ngữ</MenuItem>\r\n                                                {category.categories.flanguage.length > 0 &&\r\n                                                    category.categories.flanguage.map(fl =>\r\n                                                        <MenuItem key={fl.MaNgoaiNgu} value={fl.MaNgoaiNgu}>{fl.TenNgoaiNgu}</MenuItem>\r\n                                                    )}\r\n                                            </InputGrid>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <InputGrid\r\n                                                select\r\n                                                onChange={(e) => { handleChangeLevelSelect(e, index) }}\r\n                                                nameTitle={\"Trình độ ngoại ngữ\"}\r\n                                                name={`MaTrinhDo${index}`}\r\n                                                defaultValue={\"0\"}\r\n                                                rules={{\r\n                                                    validate: value =>\r\n                                                        value != \"0\" || \"Vui lòng nhập trường này!\"\r\n                                                }}\r\n                                                control={control}\r\n                                                errors={errors}\r\n                                                disabled={disable}\r\n                                            >\r\n                                                <MenuItem value=\"0\">Chọn trình độ</MenuItem>\r\n                                                {\r\n                                                    levelArray.length > 0 &&\r\n                                                    levelArray.map((arr, i) => {\r\n                                                        if (i == index)\r\n                                                            return arr.map(fl =>\r\n                                                                <MenuItem key={fl.MaTrinhDo} value={fl.MaTrinhDo}>{fl.TenTrinhDo}</MenuItem>\r\n                                                            )\r\n                                                    })\r\n                                                }\r\n                                            </InputGrid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                        {disable ||\r\n                            <IconButton size=\"small\" onClick={handleAddInput} className={classes.addIcon} > <AddIcon /></IconButton>\r\n                        }\r\n                    </>\r\n                </Grid>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MyLevel;","import { Grid } from '@mui/material';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\nimport React from 'react';\r\nimport InputGrid from './InputGrid';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n}))\r\n\r\nconst MyParty = (props) => {\r\n    const classes = useStyles()\r\n    const { disable, control, errors, setValue } = props\r\n\r\n    return (\r\n        <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n                <InputGrid\r\n                    type=\"date\"\r\n                    nameTitle={`Ngày vào Đoàn`}\r\n                    name={\"NgayVaoDoan\"}\r\n                    control={control}\r\n                    errors={errors}\r\n                    disabled={disable}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <InputGrid\r\n                    nameTitle={`Nơi vào Đoàn`}\r\n                    name={\"NoiVaoDoan\"}\r\n                    control={control}\r\n                    errors={errors}\r\n                    disabled={disable}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <InputGrid\r\n                    type=\"date\"\r\n                    nameTitle={`Ngày vào Đảng lần đầu`}\r\n                    name={\"NgayVaoDang\"}\r\n                    control={control}\r\n                    errors={errors}\r\n                    disabled={disable}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <InputGrid\r\n                    nameTitle={`Nơi vào Đảng lần đầu`}\r\n                    name={\"NoiVaoDangLanDau\"}\r\n                    control={control}\r\n                    errors={errors}\r\n                    disabled={disable}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <InputGrid\r\n                    type=\"date\"\r\n                    nameTitle={`Ngày vào Đảng chính thức`}\r\n                    name={\"NgayChinhThuc\"}\r\n                    control={control}\r\n                    errors={errors}\r\n                    disabled={disable}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <InputGrid\r\n                    nameTitle={`Nơi vào Đảng chính thức`}\r\n                    name={\"NoiVaoDangChinhThuc\"}\r\n                    control={control}\r\n                    errors={errors}\r\n                    disabled={disable}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <InputGrid\r\n                    nameTitle={`Người giới thiệu`}\r\n                    name={\"NguoiGioiThieu\"}\r\n                    control={control}\r\n                    errors={errors}\r\n                    disabled={disable}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default MyParty;","import DeleteIcon from '@mui/icons-material/Delete';\r\nimport { Box, Button, Grid, IconButton, MenuItem, Paper, Tab, Tabs, Typography } from '@mui/material';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { getAllCategoryPM, getFlanguageLevel } from '../action/categoryAction';\r\nimport { updateInfo } from '../action/infoAction';\r\nimport ExportFile from '../component/ExportFile';\r\nimport InputGrid from '../component/InputGrid';\r\nimport Layout from '../component/Layout';\r\nimport MyInfo from '../component/MyInfo';\r\nimport MyLevel from '../component/MyLevel';\r\nimport MyParty from '../component/MyParty';\r\nimport MyButton from '../component/UI/MyButton';\r\nimport { CategoryContext } from '../contextAPI/CategoryContext';\r\nimport { InfoContext } from '../contextAPI/InfoContext';\r\nimport { LoadingContext } from '../contextAPI/LoadingContext';\r\nimport { SnackbarContext } from '../contextAPI/SnackbarContext';\r\nimport axios from '../helper/axios';\r\nimport { getDate } from '../utils/utils';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    header: {\r\n        marginBottom: '40px'\r\n    },\r\n    headerContent: {\r\n        textTransform: 'uppercase',\r\n        fontWeight: '600',\r\n    },\r\n    wrapper: {\r\n        marginTop: '8px'\r\n    },\r\n    paper: {\r\n        padding: '16px',\r\n        marginBottom: '16px',\r\n    },\r\n    paperContent: {\r\n        paddingBottom: '60px'\r\n    },\r\n    imageWrapper: {\r\n        position: 'relative',\r\n        height: '200px',\r\n        width: '150px',\r\n        background: 'white',\r\n\r\n        margin: '0 auto',\r\n    },\r\n    fileUpload: {\r\n        cursor: 'pointer',\r\n        position: 'absolute',\r\n        width: '100%',\r\n        height: '100%',\r\n        outline: '1px solid #ddd',\r\n        '&::before': {\r\n            content: '\"+\"',\r\n            position: 'absolute',\r\n            left: 0,\r\n            top: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            fontSize: '11rem',\r\n            margin: 'auto',\r\n            textAlign: 'center',\r\n            backgroundColor: theme.palette.common.white\r\n        },\r\n    },\r\n    closeBtn: {\r\n        position: 'absolute',\r\n        top: '2px',\r\n        right: '2px',\r\n        backgroundColor: theme.palette.common.white,\r\n        color: theme.palette.primary.main,\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.common.white,\r\n            color: theme.palette.primary.main\r\n        }\r\n    },\r\n    loadingWrapper: {\r\n        position: 'relative',\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    loading: {\r\n        position: 'absolute',\r\n        left: 'calc( 50% - 20px )',\r\n        top: 'calc( 50% - 20px )'\r\n    },\r\n\r\n}))\r\n\r\nconst MyFile = () => {\r\n    const classes = useStyles();\r\n    const { info, infoDispatch } = useContext(InfoContext);\r\n    const { category, categoryDispatch } = useContext(CategoryContext);\r\n    const { openSnackbar, openSnackbarDispatch } = useContext(SnackbarContext)\r\n    const { loading, loadingDispatch } = useContext(LoadingContext)\r\n    const [step, setStep] = useState(0);\r\n    const [disable, setDisable] = useState(true);\r\n    const [flArray, setFlArray] = useState([]);\r\n    const [levelArray, setLevelArray] = useState([]);\r\n    const [imageUpload, setImageUpload] = useState([]);\r\n    const [firstImage, setFirstImage] = useState(\"\")\r\n\r\n    const [qqArr, setQqArr] = useState({ provinceArr: [], districtArr: [], wardArr: [] })\r\n    const [dcttArr, setDcttArr] = useState({ provinceArr: [], districtArr: [], wardArr: [] })\r\n    const [nohtArr, setNohtArr] = useState({ provinceArr: [], districtArr: [], wardArr: [] })\r\n    const [qqValue, setQqValue] = useState({ provinceValue: '', districtValue: '', wardValue: '' })\r\n    const [dcttValue, setDcttValue] = useState({ provinceValue: '', districtValue: '', wardValue: '' })\r\n    const [nohtValue, setNohtValue] = useState({ provinceValue: '', districtValue: '', wardValue: '' })\r\n\r\n    const dateArr = [\"NgaySinh\", \"NgayChinhThuc\", \"NgayVaoDang\", \"NgayVaoDoan\"]\r\n\r\n    const {\r\n        handleSubmit,\r\n        control,\r\n        setValue,\r\n        formState: { errors },\r\n        getValues,\r\n        reset,\r\n        clearErrors\r\n    } = useForm();\r\n\r\n    const TabPanel = (props) => {\r\n        const { children, value, index, ...other } = props;\r\n\r\n        return (\r\n            <div\r\n                role=\"tabpanel\"\r\n                hidden={value !== index}\r\n                id={`simple-tabpanel-${index}`}\r\n                aria-labelledby={`simple-tab-${index}`}\r\n                {...other}\r\n            >\r\n                {value === index && (\r\n                    <Box p={3}>\r\n                        {children}\r\n                    </Box>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const a11yProps = (index) => {\r\n        return {\r\n            id: `simple-tab-${index}`,\r\n            'aria-controls': `simple-tabpanel-${index}`,\r\n        };\r\n    }\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setStep(newValue);\r\n    };\r\n\r\n    const handleChangeSelect = (e) => {\r\n        setValue(e.target.name, e.target.value)\r\n    }\r\n\r\n    const handleRemove = () => {\r\n        setImageUpload('');\r\n        setValue(\"HinhAnh\", \"\");\r\n    }\r\n    const handleUpload = (e) => {\r\n        const file = e.target.files[0];\r\n        file.preview = URL.createObjectURL(file)\r\n        setValue(\"HinhAnh\", file);\r\n        setImageUpload(file);\r\n    }\r\n\r\n    const handleCancer = () => {\r\n        Object.keys(info.info).forEach(key => setValue(key, info.info[key]))\r\n        Object.keys(info.info).forEach(key => {\r\n            let image = {};\r\n            image.preview = info.info[\"HinhAnh\"]\r\n            setImageUpload(image)\r\n            if (key == \"NgoaiNgu\") {\r\n                info.info[key].map((el, index) => {\r\n                    setValue(`MaNgoaiNgu${index}`, el.MaNgoaiNgu)\r\n                    setValue(`MaTrinhDo${index}`, el.MaTrinhDo)\r\n                })\r\n            } else\r\n                setValue(key, info.info[key])\r\n        })\r\n        setDisable(true);\r\n    }\r\n\r\n    const onSubmit = (newValue) => {\r\n        loadingDispatch({ type: \"OPEN_LOADING\" })\r\n\r\n        JSON.stringify(getValues(\"NgoaiNgu\")) === JSON.stringify(info.info.NgoaiNgu) && delete newValue.NgoaiNgu;\r\n        JSON.stringify(imageUpload.preview) === JSON.stringify(firstImage) && delete newValue.HinhAnh\r\n        if (JSON.stringify({ ...qqValue, detail: getValues(\"QQChiTiet\") }) !==\r\n            JSON.stringify(info.info.DiaChi.QueQuan))\r\n            newValue.QQAddress = { ...qqValue, detail: getValues(\"QQChiTiet\") };\r\n        if (JSON.stringify({ ...dcttValue, detail: getValues(\"DCTTChiTiet\") }) !==\r\n            JSON.stringify(info.info.DiaChi.DiaChiThuongTru))\r\n            newValue.DCTTAddress = { ...dcttValue, detail: getValues(\"DCTTChiTiet\") };\r\n        if (JSON.stringify({ ...nohtValue, detail: getValues(\"NOHTChiTiet\") }) !==\r\n            JSON.stringify(info.info.DiaChi.NoiOHienTai))\r\n            newValue.NOHTAddress = { ...nohtValue, detail: getValues(\"NOHTChiTiet\") };\r\n\r\n        updateInfo(infoDispatch, newValue, openSnackbarDispatch)\r\n        setDisable(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (info.info && !info.loading) {\r\n            Object.keys(info.info).forEach(key => {\r\n                function isEmpty(obj) {\r\n                    return Object.keys(obj).length === 0;\r\n                }\r\n                if (dateArr.includes(key)) {\r\n                    setValue(key, getDate(info.info[key]))\r\n                } else if (key == \"HinhAnh\") {\r\n                    setValue(key, { preview: info.info[key] })\r\n                    setImageUpload({ preview: info.info[key] });\r\n                    setFirstImage(info.info[key]);\r\n                } else if (key == \"NgoaiNgu\") {\r\n                    let arr = [];\r\n                    info.info[key].map((el, index) => {\r\n                        setValue(`MaNgoaiNgu${index}`, el.MaNgoaiNgu)\r\n                        setValue(`MaTrinhDo${index}`, el.MaTrinhDo)\r\n                        arr.push({ MaNgoaiNgu: el.MaNgoaiNgu, MaTrinhDo: el.MaTrinhDo });\r\n                    })\r\n                    setFlArray(arr);\r\n                } else if (key == \"DiaChi\") {\r\n                    console.log(\"SetDiaChi\")\r\n                    const getProvinceArr = async () => {\r\n                        const resQQP = await axios.get('https://provinces.open-api.vn/api/')\r\n                        const resQQD = await axios.get(`https://provinces.open-api.vn/api/p/${info.info[\"DiaChi\"].QueQuan.provinceValue}/?depth=2`)\r\n                        const resQQW = await axios.get(`https://provinces.open-api.vn/api/d/${info.info[\"DiaChi\"].QueQuan.districtValue}/?depth=2`)\r\n                        const resDCTTP = await axios.get('https://provinces.open-api.vn/api/')\r\n                        const resDCTTD = await axios.get(`https://provinces.open-api.vn/api/p/${info.info[\"DiaChi\"].DiaChiThuongTru.provinceValue}/?depth=2`)\r\n                        const resDCTTW = await axios.get(`https://provinces.open-api.vn/api/d/${info.info[\"DiaChi\"].DiaChiThuongTru.districtValue}/?depth=2`)\r\n                        const resNOHTP = await axios.get('https://provinces.open-api.vn/api/')\r\n                        const resNOHTD = await axios.get(`https://provinces.open-api.vn/api/p/${info.info[\"DiaChi\"].NoiOHienTai.provinceValue}/?depth=2`)\r\n                        const resNOHTW = await axios.get(`https://provinces.open-api.vn/api/d/${info.info[\"DiaChi\"].NoiOHienTai.districtValue}/?depth=2`)\r\n                        setQqArr({ ...qqArr, provinceArr: resQQP.data, districtArr: resQQD.data.districts, wardArr: resQQW.data.wards })\r\n                        setDcttArr({ ...dcttArr, provinceArr: resDCTTP.data, districtArr: resDCTTD.data.districts, wardArr: resDCTTW.data.wards })\r\n                        setNohtArr({ ...nohtArr, provinceArr: resNOHTP.data, districtArr: resNOHTD.data.districts, wardArr: resNOHTW.data.wards })\r\n                        setQqValue({\r\n                            ...qqValue,\r\n                            provinceValue: info.info[\"DiaChi\"].QueQuan.provinceValue,\r\n                            districtValue: info.info[\"DiaChi\"].QueQuan.districtValue,\r\n                            wardValue: info.info[\"DiaChi\"].QueQuan.wardValue,\r\n                        })\r\n                        setDcttValue({\r\n                            ...dcttValue,\r\n                            provinceValue: info.info[\"DiaChi\"].DiaChiThuongTru.provinceValue,\r\n                            districtValue: info.info[\"DiaChi\"].DiaChiThuongTru.districtValue,\r\n                            wardValue: info.info[\"DiaChi\"].DiaChiThuongTru.wardValue,\r\n                        })\r\n                        setNohtValue({\r\n                            ...nohtValue,\r\n                            provinceValue: info.info[\"DiaChi\"].NoiOHienTai.provinceValue,\r\n                            districtValue: info.info[\"DiaChi\"].NoiOHienTai.districtValue,\r\n                            wardValue: info.info[\"DiaChi\"].NoiOHienTai.wardValue,\r\n                        })\r\n                        setValue('QQTinh', info.info[\"DiaChi\"].QueQuan.provinceValue)\r\n                        setValue('QQHuyen', info.info[\"DiaChi\"].QueQuan.districtValue)\r\n                        setValue('QQXa', info.info[\"DiaChi\"].QueQuan.wardValue)\r\n                        setValue('QQChiTiet', info.info[\"DiaChi\"].QueQuan.detail)\r\n                        setValue('DCTTTinh', info.info[\"DiaChi\"].DiaChiThuongTru.provinceValue)\r\n                        setValue('DCTTHuyen', info.info[\"DiaChi\"].DiaChiThuongTru.districtValue)\r\n                        setValue('DCTTXa', info.info[\"DiaChi\"].DiaChiThuongTru.wardValue)\r\n                        setValue('DCTTChiTiet', info.info[\"DiaChi\"].DiaChiThuongTru.detail)\r\n                        setValue('NOHTTinh', info.info[\"DiaChi\"].NoiOHienTai.provinceValue)\r\n                        setValue('NOHTHuyen', info.info[\"DiaChi\"].NoiOHienTai.districtValue)\r\n                        setValue('NOHTXa', info.info[\"DiaChi\"].NoiOHienTai.wardValue)\r\n                        setValue('NOHTChiTiet', info.info[\"DiaChi\"].NoiOHienTai.detail)\r\n                        loadingDispatch({ type: \"CLOSE_LOADING\" })\r\n                    }\r\n                    if (!isEmpty(info.info[\"DiaChi\"]))\r\n                        getProvinceArr();\r\n                } else {\r\n                    setValue(key, info.info[key])\r\n                }\r\n            })\r\n        }\r\n    }, [info])\r\n\r\n    useEffect(() => {\r\n        const setA = async () => {\r\n            let arr = [];\r\n            await Promise.all(flArray.map(async (el, index) => {\r\n                if (el.MaNgoaiNgu != \"0\") {\r\n                    const res = await getFlanguageLevel(el.MaNgoaiNgu);\r\n                    setValue(`MaNgoaiNgu${index}`, el.MaNgoaiNgu);\r\n                    setValue(`MaTrinhDo${index}`, el.MaTrinhDo);\r\n                    arr[index] = res\r\n                }\r\n            }))\r\n            setLevelArray(arr);\r\n            setValue(\"NgoaiNgu\", flArray)\r\n        }\r\n        if (flArray.length > 0) {\r\n            setA();\r\n        }\r\n    }, [flArray])\r\n\r\n    useEffect(() => {\r\n        loadingDispatch({ type: \"OPEN_LOADING\" })\r\n        getAllCategoryPM(categoryDispatch);\r\n    }, [])\r\n\r\n    return (\r\n        <Layout sidebar>\r\n            <div className={classes.header} >\r\n                <Typography className={classes.headerContent} variant=\"h5\">\r\n                    Thông tin Đảng viên\r\n                </Typography>\r\n            </div>\r\n            {disable ?\r\n                (\r\n                    <MyButton onClick={() => setDisable(false)} primary>Chỉnh sửa thông tin</MyButton>\r\n                ) :\r\n                (\r\n                    <>\r\n                        <MyButton onClick={handleSubmit(onSubmit)} info>Lưu</MyButton>\r\n                        <Button onClick={handleCancer} >Hủy</Button>\r\n                    </>\r\n                )\r\n            }\r\n            <ExportFile data={info.info} button />\r\n            {loading.open ||\r\n                <Grid container spacing={2} className={classes.wrapper}>\r\n                    <Grid item xs={4}>\r\n                        <Paper variant=\"outlined\" className={classes.paper}>\r\n                            <div className={classes.imageWrapper} >\r\n                                <>\r\n                                    {imageUpload?.preview ?\r\n                                        <>\r\n                                            <img className={classes.fileUpload} style={{ height: '100%' }}\r\n                                                src={imageUpload.preview}\r\n                                                alt=\"\"\r\n                                            />\r\n                                            {disable ||\r\n                                                <IconButton className={classes.closeBtn} size=\"small\" onClick={handleRemove}>\r\n                                                    <DeleteIcon />\r\n                                                </IconButton>\r\n                                            }\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            <input type=\"file\" multiple className={classes.fileUpload} onChange={handleUpload} />\r\n                                            {/* <FormHelperText error style={{ position: \"absolute\" }}>Vui lòng chọn ảnh!</FormHelperText> */}\r\n                                        </>\r\n                                    }\r\n                                </>\r\n                            </div>\r\n                            <InputGrid\r\n                                nameTitle={`Mã Đảng viên`}\r\n                                name={\"MaSoDangVien\"}\r\n                                control={control}\r\n                                errors={errors}\r\n                                disabled={true}\r\n                            />\r\n                            <InputGrid\r\n                                nameTitle={`Họ tên`}\r\n                                name={\"HoTen\"}\r\n                                control={control}\r\n                                errors={errors}\r\n                                disabled={disable}\r\n                            />\r\n                            <InputGrid\r\n                                select\r\n                                nameTitle={\"Chi bộ\"}\r\n                                name={\"MaChiBo\"}\r\n                                defaultValue=\"\"\r\n                                control={control}\r\n                                errors={errors}\r\n                                disabled={true}\r\n                                onChange={handleChangeSelect}\r\n                            >\r\n                                {\r\n                                    category.categories.partycell.map(el =>\r\n                                        <MenuItem key={el.MaChiBo} value={el.MaChiBo}>{el.TenChiBo}</MenuItem>\r\n                                    )\r\n                                }\r\n                            </InputGrid>\r\n                            <InputGrid\r\n                                select\r\n                                onChange={handleChangeSelect}\r\n                                nameTitle={\"Giới tính\"}\r\n                                name={`GioiTinh`}\r\n                                defaultValue={\"0\"}\r\n                                rules={{\r\n                                    validate: value =>\r\n                                        value != \"0\" || \"Vui lòng nhập trường này!\"\r\n                                }}\r\n                                control={control}\r\n                                errors={errors}\r\n                                disabled={disable}\r\n                            >\r\n                                <MenuItem value=\"0\">Chọn giới tính</MenuItem>\r\n                                <MenuItem value=\"m\">Nam</MenuItem>\r\n                                <MenuItem value=\"f\">Nữ</MenuItem>\r\n                                <MenuItem value=\"u\">Khác</MenuItem>\r\n                            </InputGrid>\r\n                            <InputGrid\r\n                                nameTitle={`CMND`}\r\n                                name={\"CMND\"}\r\n                                control={control}\r\n                                errors={errors}\r\n                                disabled={disable}\r\n                            />\r\n                            <InputGrid\r\n                                select\r\n                                nameTitle={\"Chức vụ\"}\r\n                                name={\"MaChucVu\"}\r\n                                defaultValue=\"\"\r\n                                control={control}\r\n                                errors={errors}\r\n                                disabled={true}\r\n                                onChange={handleChangeSelect}\r\n                            >\r\n                                {\r\n                                    category.categories.position.map(el =>\r\n                                        <MenuItem key={el.MaChucVu} value={el.MaChucVu}>{el.TenChucVu}</MenuItem>\r\n                                    )\r\n                                }\r\n                            </InputGrid>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                        <Paper className={classes.paperContent} variant=\"outlined\">\r\n                            <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                                <Tabs\r\n                                    value={step}\r\n                                    onChange={handleChange}\r\n                                    aria-label=\"simple tabs example\"\r\n                                    indicatorColor=\"primary\"\r\n                                    textColor=\"primary\"\r\n                                >\r\n                                    <Tab label=\"Cơ bản\" {...a11yProps(0)} />\r\n                                    <Tab label=\"Trình độ\" {...a11yProps(1)} />\r\n                                    <Tab label=\"Về Đoàn / Đảng\" {...a11yProps(2)} />\r\n                                </Tabs>\r\n                            </Box>\r\n                            {loading.open ||\r\n                                <form className=\"add-form\">\r\n                                    <TabPanel value={step} index={0}>\r\n                                        <MyInfo\r\n                                            loading={loading.open}\r\n                                            disable={disable}\r\n                                            control={control}\r\n                                            errors={errors}\r\n                                            setValue={setValue}\r\n                                            clearErrors={clearErrors}\r\n                                            getValues={getValues}\r\n                                            qqArr={qqArr}\r\n                                            setQqArr={setQqArr}\r\n                                            dcttArr={dcttArr}\r\n                                            setDcttArr={setDcttArr}\r\n                                            nohtArr={nohtArr}\r\n                                            setNohtArr={setNohtArr}\r\n                                            qqValue={qqValue}\r\n                                            setQqValue={setQqValue}\r\n                                            dcttValue={dcttValue}\r\n                                            setDcttValue={setDcttValue}\r\n                                            nohtValue={nohtValue}\r\n                                            setNohtValue={setNohtValue} F\r\n                                        />\r\n                                    </TabPanel>\r\n                                    <TabPanel value={step} index={1}>\r\n                                        <MyLevel\r\n                                            disable={disable}\r\n                                            control={control}\r\n                                            errors={errors}\r\n                                            setValue={setValue}\r\n                                            loading={loading.open}\r\n                                            flArray={flArray}\r\n                                            setFlArray={setFlArray}\r\n                                            levelArray={levelArray}\r\n                                            setLevelArray={setLevelArray}\r\n                                        />\r\n                                    </TabPanel>\r\n                                    <TabPanel value={step} index={2}>\r\n                                        <MyParty\r\n                                            disable={disable}\r\n                                            control={control}\r\n                                            errors={errors}\r\n                                            setValue={setValue}\r\n                                            loading={loading.open}\r\n                                        />\r\n                                    </TabPanel>\r\n                                </form>\r\n                            }\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            }\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default MyFile;"],"sourceRoot":""}