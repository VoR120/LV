{"version":3,"sources":["action/votingAction.js","../node_modules/@mui/material/ListItem/listItemClasses.js","../node_modules/@mui/material/ListItemSecondaryAction/listItemSecondaryActionClasses.js","../node_modules/@mui/material/ListItem/ListItem.js","../node_modules/@mui/material/ListItemSecondaryAction/ListItemSecondaryAction.js","component/AddCandidateForm.js","component/AddVoterForm.js","page/CreateVoting.js"],"names":["createPoll","payload","a","console","log","axios","post","res","status","data","response","updatePoll","put","MaBieuQuyet","error","getAllPoll","get","MaSoDangVien","checkIsVoted","vote","getResult","id","deletePoll","delete","getPollByTime","getVotes","getNoVoting","mailing","getListItemUtilityClass","slot","generateUtilityClass","listItemClasses","generateUtilityClasses","getListItemSecondaryActionClassesUtilityClass","listItemSecondaryActionClasses","_excluded","_excluded2","ListItemRoot","styled","name","overridesResolver","props","styles","ownerState","root","dense","alignItems","alignItemsFlexStart","divider","disableGutters","gutters","disablePadding","padding","button","hasSecondaryAction","secondaryAction","theme","_extends","display","justifyContent","position","textDecoration","width","boxSizing","textAlign","paddingTop","paddingBottom","paddingLeft","paddingRight","listItemButtonClasses","focusVisible","backgroundColor","palette","action","focus","selected","alpha","primary","main","selectedOpacity","focusOpacity","disabled","opacity","disabledOpacity","borderBottom","backgroundClip","transition","transitions","create","duration","shortest","hover","hoverOpacity","ListItemContainer","container","ListItem","React","inProps","ref","useThemeProps","autoFocus","childrenProp","children","className","componentProp","component","components","componentsProps","ContainerComponent","ContainerProps","ContainerClassName","focusVisibleClassName","_objectWithoutPropertiesLoose","other","context","ListContext","childContext","listItemRef","useEnhancedEffect","current","toArray","length","isMuiElement","classes","slots","composeClasses","useUtilityClasses","handleRef","useForkRef","Root","rootProps","componentProps","clsx","Component","ButtonBase","_jsx","Provider","value","_jsxs","as","isHostComponent","pop","ListItemSecondaryAction","ListItemSecondaryActionRoot","right","top","transform","muiName","useStyles","makeStyles","inputItem","marginBottom","spacing","inputWrapper","closeIcon","common","white","cursor","AddCandidateForm","setCandidate","useState","open","setOpen","useContext","CategoryContext","category","info","categoryDispatch","InfoContext","openSnackbarDispatch","SnackbarContext","loadingDispatch","LoadingContext","DePer","Quyen","checked","setChecked","left","setLeft","setRight","fieldArr","setFieldArr","fieldValue","setFieldValue","yearGradeArr","setYearGradeArr","yearGrade","setYearGrade","pollArr","setPollArr","useForm","handleSubmit","register","control","setValue","getValues","watch","setError","clearErrors","reset","errors","formState","handleClose","handleAdd","type","msg","map","el","HoTen","MaUngCuVien","onSubmit","grade","partycell","MaChiBo","filterPartyMember","onSubmitByPoll","poll","Data","handleChangeSelect","e","target","not","b","filter","indexOf","intersection","leftChecked","rightChecked","handleToggle","currentIndex","newChecked","push","splice","handleAllRight","result","concat","reduce","unique","o","some","obj","handleCheckedRight","handleCheckedLeft","handleAllLeft","handleResetAll","handleChangeFieldValue","handleChangeYear","forEach","Nam","handleSubmitDate","TuNgay","DenNgay","message","getDate","Date","handleReset","useRef","useEffect","categories","customList","items","variant","sx","height","overflow","role","index","labelId","onClick","tabIndex","disableRipple","inputProps","hasOwnProperty","SoPhieu","success","PaperProps","style","minWidth","onClose","item","xs","select","onChange","nameTitle","defaultValue","TenChiBo","marginTop","flex","margin","marginRight","noTitle","rules","validate","mt","textOverflow","whiteSpace","TenBieuQuyet","PhamVi","direction","my","size","AddVoterForm","setVoter","isDeP","includeReserve","setIncludeReserve","setGradeArr","notreserve","getFullYear","MaChucVu","TenChucVu","label","MaNguoiThamGia","header","headerContent","textTransform","fontWeight","paper","title","CreateVoting","candidate","voter","setType","ThoiGianBatDau","SoPhut","LoaiBieuQuyet","UngCuVien","NguoiThamGia","ThoiGianKetThuc","SoPhieuToiDa","getAllCategory","sidebar","required","InputProps","min","date","setMinutes","getMinutes","varian"],"mappings":"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","file":"static/js/15.ff9a3e91.chunk.js","sourcesContent":["import axios from \"../helper/axios\";\r\n\r\nexport const createPoll = async (payload) => {\r\n    console.log(payload);\r\n    try {\r\n        const res = await axios.post('/api/voting/create', payload);\r\n        if (res.status == 201) {\r\n            return res.data\r\n        }\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\nexport const updatePoll = async (payload) => {\r\n    console.log(payload);\r\n    try {\r\n        const res = await axios.put(`/api/voting/${payload.MaBieuQuyet}`, payload);\r\n        if (res.status == 200) {\r\n            return res.data\r\n        }\r\n    } catch (error) {\r\n        return { error: error.response.data }\r\n    }\r\n}\r\n\r\nexport const getAllPoll = async (payload) => {\r\n    try {\r\n        const res = payload\r\n            ? await axios.get('/api/voting?MaSoDangVien=' + payload.MaSoDangVien)\r\n            : await axios.get('/api/voting/')\r\n        console.log(res);\r\n        if (res.status == 200) {\r\n            return res.data\r\n        }\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\nexport const checkIsVoted = async (payload) => {\r\n    try {\r\n        const res = await axios.post('/api/voting/check', payload);\r\n        if (res.status == 200) {\r\n            return res.data\r\n        }\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\nexport const vote = async (payload) => {\r\n    try {\r\n        const res = await axios.post('/api/voting/createvoting', payload);\r\n        if (res.status == 201) {\r\n            return res.data\r\n        }\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\nexport const getResult = async (payload) => {\r\n    try {\r\n        const res = await axios.get('/api/voting/getresult/' + payload.id);\r\n        if (res.status == 200) {\r\n            return res.data\r\n        }\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\nexport const deletePoll = async (payload) => {\r\n    try {\r\n        const res = await axios.delete('/api/voting/' + payload.id);\r\n        if (res.status == 200) {\r\n            return res.data\r\n        }\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\nexport const getPollByTime = async (payload) => {\r\n    try {\r\n        const res = await axios.post('/api/voting/getbytime', payload);\r\n        if (res.status == 200) {\r\n            return res.data\r\n        }\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\nexport const getVotes = async (payload) => {\r\n    try {\r\n        const res = await axios.get('/api/voting/getvotes/' + payload.id);\r\n        if (res.status == 200) {\r\n            return res.data\r\n        }\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\nexport const getNoVoting = async (payload) => {\r\n    try {\r\n        const res = await axios.get('/api/voting/getnovoting/' + payload.id);\r\n        if (res.status == 200) {\r\n            return res.data\r\n        }\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\nexport const mailing = async (payload) => {\r\n    try {\r\n        const res = await axios.post('/api/voting/mailing/?MaBieuQuyet=' + payload.id);\r\n        if (res.status == 200) {\r\n            return res.data\r\n        }\r\n    } catch (error) {\r\n        return { error: error.response.data }\r\n    }\r\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getListItemUtilityClass(slot) {\n  return generateUtilityClass('MuiListItem', slot);\n}\nconst listItemClasses = generateUtilityClasses('MuiListItem', ['root', 'container', 'focusVisible', 'dense', 'alignItemsFlexStart', 'disabled', 'divider', 'gutters', 'padding', 'button', 'secondaryAction', 'selected']);\nexport default listItemClasses;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getListItemSecondaryActionClassesUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemSecondaryAction', slot);\n}\nconst listItemSecondaryActionClasses = generateUtilityClasses('MuiListItemSecondaryAction', ['root', 'disableGutters']);\nexport default listItemSecondaryActionClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"],\n      _excluded2 = [\"alignItems\", \"autoFocus\", \"button\", \"children\", \"className\", \"component\", \"components\", \"componentsProps\", \"ContainerComponent\", \"ContainerProps\", \"dense\", \"disabled\", \"disableGutters\", \"disablePadding\", \"divider\", \"focusVisibleClassName\", \"secondaryAction\", \"selected\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, isHostComponent } from '@mui/core';\nimport { chainPropTypes, elementTypeAcceptingRef } from '@mui/utils';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport isMuiElement from '../utils/isMuiElement';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nimport listItemClasses, { getListItemUtilityClass } from './listItemClasses';\nimport { listItemButtonClasses } from '../ListItemButton';\nimport ListItemSecondaryAction from '../ListItemSecondaryAction';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters, !ownerState.disablePadding && styles.padding, ownerState.button && styles.button, ownerState.hasSecondaryAction && styles.secondaryAction];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    button,\n    classes,\n    dense,\n    disabled,\n    disableGutters,\n    disablePadding,\n    divider,\n    hasSecondaryAction,\n    selected\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', !disableGutters && 'gutters', !disablePadding && 'padding', divider && 'divider', disabled && 'disabled', button && 'button', alignItems === 'flex-start' && 'alignItemsFlexStart', hasSecondaryAction && 'secondaryAction', selected && 'selected'],\n    container: ['container']\n  };\n  return composeClasses(slots, getListItemUtilityClass, classes);\n};\n\nexport const ListItemRoot = styled('div', {\n  name: 'MuiListItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  width: '100%',\n  boxSizing: 'border-box',\n  textAlign: 'left'\n}, !ownerState.disablePadding && _extends({\n  paddingTop: 8,\n  paddingBottom: 8\n}, ownerState.dense && {\n  paddingTop: 4,\n  paddingBottom: 4\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, !!ownerState.secondaryAction && {\n  // Add some space to avoid collision as `ListItemSecondaryAction`\n  // is absolutely positioned.\n  paddingRight: 48\n}), !!ownerState.secondaryAction && {\n  [`& > .${listItemButtonClasses.root}`]: {\n    paddingRight: 48\n  }\n}, {\n  [`&.${listItemClasses.focusVisible}`]: {\n    backgroundColor: theme.palette.action.focus\n  },\n  [`&.${listItemClasses.selected}`]: {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${listItemClasses.focusVisible}`]: {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${listItemClasses.disabled}`]: {\n    opacity: theme.palette.action.disabledOpacity\n  }\n}, ownerState.alignItems === 'flex-start' && {\n  alignItems: 'flex-start'\n}, ownerState.divider && {\n  borderBottom: `1px solid ${theme.palette.divider}`,\n  backgroundClip: 'padding-box'\n}, ownerState.button && {\n  transition: theme.transitions.create('background-color', {\n    duration: theme.transitions.duration.shortest\n  }),\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: theme.palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${listItemClasses.selected}:hover`]: {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  }\n}, ownerState.hasSecondaryAction && {\n  // Add some space to avoid collision as `ListItemSecondaryAction`\n  // is absolutely positioned.\n  paddingRight: 48\n}));\nconst ListItemContainer = styled('li', {\n  name: 'MuiListItem',\n  slot: 'Container',\n  overridesResolver: (props, styles) => styles.container\n})({\n  position: 'relative'\n});\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\n\nconst ListItem = /*#__PURE__*/React.forwardRef(function ListItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItem'\n  });\n\n  const {\n    alignItems = 'center',\n    autoFocus = false,\n    button = false,\n    children: childrenProp,\n    className,\n    component: componentProp,\n    components = {},\n    componentsProps = {},\n    ContainerComponent = 'li',\n    ContainerProps: {\n      className: ContainerClassName\n    } = {},\n    dense = false,\n    disabled = false,\n    disableGutters = false,\n    disablePadding = false,\n    divider = false,\n    focusVisibleClassName,\n    secondaryAction,\n    selected = false\n  } = props,\n        ContainerProps = _objectWithoutPropertiesLoose(props.ContainerProps, _excluded),\n        other = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  const context = React.useContext(ListContext);\n  const childContext = {\n    dense: dense || context.dense || false,\n    alignItems,\n    disableGutters\n  };\n  const listItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a ListItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const children = React.Children.toArray(childrenProp); // v4 implementation, deprecated in v5, will be removed in v6\n\n  const hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n\n  const ownerState = _extends({}, props, {\n    alignItems,\n    autoFocus,\n    button,\n    dense: childContext.dense,\n    disabled,\n    disableGutters,\n    disablePadding,\n    divider,\n    hasSecondaryAction,\n    selected\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const handleRef = useForkRef(listItemRef, ref);\n  const Root = components.Root || ListItemRoot;\n  const rootProps = componentsProps.root || {};\n\n  const componentProps = _extends({\n    className: clsx(classes.root, rootProps.className, className),\n    disabled\n  }, other);\n\n  let Component = componentProp || 'li';\n\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(listItemClasses.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  } // v4 implementation, deprecated in v5, will be removed in v6\n\n\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component; // Avoid nesting of li > li.\n\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n\n    return /*#__PURE__*/_jsx(ListContext.Provider, {\n      value: childContext,\n      children: /*#__PURE__*/_jsxs(ListItemContainer, _extends({\n        as: ContainerComponent,\n        className: clsx(classes.container, ContainerClassName),\n        ref: handleRef,\n        ownerState: ownerState\n      }, ContainerProps, {\n        children: [/*#__PURE__*/_jsx(Root, _extends({}, rootProps, !isHostComponent(Root) && {\n          as: Component,\n          ownerState: _extends({}, ownerState, rootProps.ownerState)\n        }, componentProps, {\n          children: children\n        })), children.pop()]\n      }))\n    });\n  }\n\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n      as: Component,\n      ref: handleRef,\n      ownerState: ownerState\n    }, !isHostComponent(Root) && {\n      ownerState: _extends({}, ownerState, rootProps.ownerState)\n    }, componentProps, {\n      children: [children, secondaryAction && /*#__PURE__*/_jsx(ListItemSecondaryAction, {\n        children: secondaryAction\n      })]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItem.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Defines the `align-items` style property.\n   * @default 'center'\n   */\n  alignItems: PropTypes.oneOf(['center', 'flex-start']),\n\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   * @deprecated checkout [ListItemButton](/api/list-item-button/) instead\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the list item is a button (using `ButtonBase`). Props intended\n   * for `ButtonBase` can then be applied to `ListItem`.\n   * @default false\n   * @deprecated checkout [ListItemButton](/api/list-item-button/) instead\n   */\n  button: PropTypes.bool,\n\n  /**\n   * The content of the component if a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    const children = React.Children.toArray(props.children); // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)\n\n    let secondaryActionIndex = -1;\n\n    for (let i = children.length - 1; i >= 0; i -= 1) {\n      const child = children[i];\n\n      if (isMuiElement(child, ['ListItemSecondaryAction'])) {\n        secondaryActionIndex = i;\n        break;\n      }\n    } //  is ListItemSecondaryAction the last child of ListItem\n\n\n    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {\n      return new Error('MUI: You used an element after ListItemSecondaryAction. ' + 'For ListItem to detect that it has a secondary action ' + 'you must pass it as the last child to ListItem.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the InputBase.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Input.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * The container component used when a `ListItemSecondaryAction` is the last child.\n   * @default 'li'\n   * @deprecated\n   */\n  ContainerComponent: elementTypeAcceptingRef,\n\n  /**\n   * Props applied to the container component if used.\n   * @default {}\n   * @deprecated\n   */\n  ContainerProps: PropTypes.object,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent List component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   * @deprecated checkout [ListItemButton](/api/list-item-button/) instead\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, all padding is removed.\n   * @default false\n   */\n  disablePadding: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * The element to display at the end of ListItem.\n   */\n  secondaryAction: PropTypes.node,\n\n  /**\n   * Use to apply selected styling.\n   * @default false\n   * @deprecated checkout [ListItemButton](/api/list-item-button/) instead\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default ListItem;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ListContext from '../List/ListContext';\nimport { getListItemSecondaryActionClassesUtilityClass } from './listItemSecondaryActionClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    disableGutters,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getListItemSecondaryActionClassesUtilityClass, classes);\n};\n\nconst ListItemSecondaryActionRoot = styled('div', {\n  name: 'MuiListItemSecondaryAction',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.disableGutters && styles.disableGutters];\n  }\n})(({\n  ownerState\n}) => _extends({\n  position: 'absolute',\n  right: 16,\n  top: '50%',\n  transform: 'translateY(-50%)'\n}, ownerState.disableGutters && {\n  right: 0\n}));\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nconst ListItemSecondaryAction = /*#__PURE__*/React.forwardRef(function ListItemSecondaryAction(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemSecondaryAction'\n  });\n\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const context = React.useContext(ListContext);\n\n  const ownerState = _extends({}, props, {\n    disableGutters: context.disableGutters\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemSecondaryActionRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemSecondaryAction.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or selection control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default ListItemSecondaryAction;","import AddIcon from '@mui/icons-material/Add';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Grid, List,\r\n    ListItem, ListItemIcon, ListItemText, MenuItem, Paper, Typography\r\n} from '@mui/material';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\nimport React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { filterPartyMember } from '../action/partyMemberAction';\r\nimport { getPollByTime, getResult } from '../action/votingAction';\r\nimport { CategoryContext } from '../contextAPI/CategoryContext';\r\nimport { InfoContext } from '../contextAPI/InfoContext';\r\nimport { LoadingContext } from '../contextAPI/LoadingContext';\r\nimport { SnackbarContext } from '../contextAPI/SnackbarContext';\r\nimport { getDate } from '../utils/utils';\r\nimport InputGrid from './InputGrid';\r\nimport MyButton from './UI/MyButton';\r\nimport MySelect from './UI/MySelect';\r\nimport MySelectReactHookForm from './UI/MySelectReactHookForm';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    inputItem: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    inputWrapper: {\r\n        position: 'relative',\r\n    },\r\n    closeIcon: {\r\n        position: 'absolute',\r\n        top: '8px',\r\n        right: '8px',\r\n        backgroundColor: theme.palette.common.white,\r\n        cursor: 'pointer'\r\n    },\r\n}))\r\n\r\nconst AddCandidateForm = (props) => {\r\n    const classes = useStyles();\r\n    const { setCandidate } = props;\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const { category, categoryDispatch } = useContext(CategoryContext);\r\n    const { info } = useContext(InfoContext);\r\n    const { openSnackbarDispatch } = useContext(SnackbarContext);\r\n    const { loadingDispatch } = useContext(LoadingContext);\r\n\r\n    const DePer = info.info.Quyen[\"12\"]\r\n    const [gradeArr, setGradeArr] = useState([])\r\n    const [checked, setChecked] = useState([]);\r\n    const [left, setLeft] = useState([]);\r\n    const [right, setRight] = useState([]);\r\n    const [fieldArr, setFieldArr] = useState([]);\r\n    const [fieldValue, setFieldValue] = useState(\"0\");\r\n    const [yearGradeArr, setYearGradeArr] = useState([]);\r\n    const [yearGrade, setYearGrade] = useState(\"0\");\r\n    const [pollArr, setPollArr] = useState([]);\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        control,\r\n        setValue,\r\n        getValues,\r\n        watch,\r\n        setError,\r\n        reset,\r\n        clearErrors,\r\n        formState: { errors }\r\n    } = useForm();\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const handleAdd = () => {\r\n        if (right.length == 0) {\r\n            openSnackbarDispatch({\r\n                type: 'SET_OPEN',\r\n                payload: {\r\n                    msg: \"Bạn chưa chọn ứng cử viên\",\r\n                    type: \"error\"\r\n                }\r\n            })\r\n        } else {\r\n            setOpen(false);\r\n            setCandidate(right.map(el => ({ HoTen: el.HoTen, MaUngCuVien: el.MaSoDangVien })))\r\n        }\r\n    }\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true)\r\n    }\r\n    const onSubmit = async (data) => {\r\n        data.grade = fieldValue;\r\n        if (DePer != 1)\r\n            data.partycell = info.info.MaChiBo\r\n        // setRight([]);\r\n        loadingDispatch({ type: 'OPEN_LOADING' })\r\n        const res = await filterPartyMember({ grade: data.grade, partycell: data.partycell || \"\" });\r\n        setLeft(res)\r\n        loadingDispatch({ type: 'CLOSE_LOADING' })\r\n    }\r\n\r\n    const onSubmitByPoll = async (data) => {\r\n        console.log(data);\r\n        loadingDispatch({ type: 'OPEN_LOADING' })\r\n        const res = await getResult({ id: data.poll })\r\n        if (res) {\r\n            console.log(res.Data);\r\n            setLeft(res.Data)\r\n        }\r\n        loadingDispatch({ type: 'CLOSE_LOADING' })\r\n    }\r\n\r\n    const handleChangeSelect = (e) => {\r\n        setValue(e.target.name, e.target.value)\r\n    }\r\n\r\n    function not(a, b) {\r\n        return a.filter((value) => b.indexOf(value) === -1);\r\n    }\r\n\r\n    function intersection(a, b) {\r\n        return a.filter((value) => b.indexOf(value) !== -1);\r\n    }\r\n\r\n    const leftChecked = intersection(checked, left);\r\n    const rightChecked = intersection(checked, right);\r\n\r\n    const handleToggle = (value) => () => {\r\n        const currentIndex = checked.indexOf(value);\r\n        const newChecked = [...checked];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value);\r\n        } else {\r\n            newChecked.splice(currentIndex, 1);\r\n        }\r\n\r\n        setChecked(newChecked);\r\n    };\r\n\r\n    const handleAllRight = () => {\r\n        const sum = right.concat(left)\r\n        var result = sum.reduce((unique, o) => {\r\n            if (!unique.some(obj => obj.MaSoDangVien === o.MaSoDangVien)) {\r\n                unique.push(o);\r\n            }\r\n            return unique;\r\n        }, []);\r\n        setRight(result);\r\n        setLeft([]);\r\n    };\r\n\r\n    const handleCheckedRight = () => {\r\n\r\n        const sum = right.concat(leftChecked)\r\n        var result = sum.reduce((unique, o) => {\r\n            if (!unique.some(obj => obj.MaSoDangVien == o.MaSoDangVien)) {\r\n                unique.push(o);\r\n            }\r\n            return unique;\r\n        }, []);\r\n\r\n        setRight(result);\r\n        setLeft(not(left, leftChecked));\r\n        setChecked(not(checked, leftChecked));\r\n    };\r\n\r\n    const handleCheckedLeft = () => {\r\n        setLeft(left.concat(rightChecked));\r\n        setRight(not(right, rightChecked));\r\n        setChecked(not(checked, rightChecked));\r\n    };\r\n\r\n    const handleAllLeft = () => {\r\n        setLeft(left.concat(right));\r\n        setRight([]);\r\n    };\r\n\r\n    const handleResetAll = () => {\r\n        setLeft([]);\r\n        setRight([]);\r\n    }\r\n\r\n    const handleChangeFieldValue = (e) => {\r\n        setFieldValue(e.target.value)\r\n    }\r\n\r\n    const handleChangeYear = (e) => {\r\n        setYearGrade(e.target.value)\r\n        if (e.target.value == 0) {\r\n            setFieldArr([]);\r\n            setFieldValue(0)\r\n        } else {\r\n            yearGradeArr.forEach(el => {\r\n                if (el.Nam == e.target.value) {\r\n                    setFieldArr(el.Data);\r\n                    setFieldValue(0)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleSubmitDate = async () => {\r\n        let TuNgay = getValues(\"TuNgay\");\r\n        let DenNgay = getValues(\"DenNgay\");\r\n        console.log(TuNgay, DenNgay);\r\n        if (!TuNgay && DenNgay) {\r\n            setError(\"TuNgay\", {\r\n                type: \"manual\",\r\n                message: \"Vui lòng nhập trường này!\"\r\n            })\r\n            return;\r\n        }\r\n        if (TuNgay && !DenNgay) {\r\n            setValue(\"DenNgay\", getDate(new Date()))\r\n            DenNgay = getDate(new Date());\r\n        }\r\n        console.log(TuNgay, DenNgay)\r\n        const res = await getPollByTime({ TuNgay, DenNgay });\r\n        console.log(res);\r\n        if (res.length) {\r\n            setPollArr(res);\r\n            setValue(\"poll\", res[0].MaBieuQuyet)\r\n        }\r\n    }\r\n\r\n    const handleReset = () => {\r\n        setValue(\"partycell\", \"0\")\r\n        setFieldValue(\"0\");\r\n        setFieldArr([]);\r\n        setYearGrade(\"0\");\r\n    }\r\n\r\n    const handleResetPoll = () => {\r\n        setValue(\"TuNgay\", \"\")\r\n        setValue(\"DenNgay\", \"\")\r\n        setPollArr([]);\r\n        setValue(\"poll\", \"0\");\r\n        clearErrors()\r\n    }\r\n\r\n    const TuNgay = useRef({});\r\n    TuNgay.current = watch(\"TuNgay\", \"\");\r\n\r\n    useEffect(() => {\r\n        setYearGradeArr(category.categories.grade)\r\n    }, [category])\r\n\r\n    const customList = (items) => (\r\n        <>\r\n            {DePer ?\r\n                <Typography variant=\"subtitle2\">* Họ tên - Mã Số ( - Số phiếu / Số phiếu tín nhiệm )</Typography>\r\n                :\r\n                <Typography variant=\"subtitle2\">* Họ tên - Mã Số</Typography>\r\n            }\r\n            <Paper variant=\"outlined\" sx={{ width: DePer ? 330 : 250, height: 260, overflow: 'auto' }}>\r\n                <List dense component=\"div\" role=\"list\">\r\n                    {items.map((value, index) => {\r\n                        const labelId = `transfer-list-item-${index}-label`;\r\n\r\n                        return (\r\n                            <ListItem\r\n                                key={index}\r\n                                role=\"listitem\"\r\n                                button\r\n                                onClick={handleToggle(value)}\r\n                            >\r\n                                <ListItemIcon>\r\n                                    <Checkbox\r\n                                        checked={checked.indexOf(value) !== -1}\r\n                                        tabIndex={-1}\r\n                                        disableRipple\r\n                                        inputProps={{\r\n                                            'aria-labelledby': labelId,\r\n                                        }}\r\n                                    />\r\n                                </ListItemIcon>\r\n                                {value.hasOwnProperty(\"SoPhieu\") ?\r\n                                    <ListItemText id={labelId} primary={value.HoTen + \" - \" + value.MaSoDangVien + \" - \" + value.SoPhieu} />\r\n                                    :\r\n                                    <ListItemText id={labelId} primary={value.HoTen + \" - \" + value.MaSoDangVien} />\r\n                                }\r\n                            </ListItem>\r\n                        );\r\n                    })}\r\n                    <ListItem />\r\n                </List>\r\n            </Paper>\r\n        </>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <MyButton onClick={handleOpen} success><AddIcon />Thêm</MyButton>\r\n            {\r\n                DePer ?\r\n                    <Dialog PaperProps={{ style: { minWidth: '1200px' } }} open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                        <DialogTitle id=\"form-dialog-title\">Thêm ứng cử viên</DialogTitle>\r\n                        <DialogContent>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={6}>\r\n                                    <Typography>* Tra cứu theo thông tin</Typography>\r\n                                    <InputGrid\r\n                                        select\r\n                                        onChange={handleChangeSelect}\r\n                                        nameTitle={\"Chi bộ\"}\r\n                                        name=\"partycell\"\r\n                                        defaultValue=\"0\"\r\n                                        control={control}\r\n                                        errors={errors}\r\n                                    >\r\n                                        <MenuItem value=\"0\">Tất cả</MenuItem>\r\n                                        {\r\n                                            category.categories[\"partycell\"].map(el =>\r\n                                                <MenuItem key={el.MaChiBo} value={el.MaChiBo} >{el.TenChiBo}</MenuItem>\r\n                                            )\r\n                                        }\r\n                                    </InputGrid>\r\n                                    <Grid container sx={{ marginTop: 2 }}>\r\n                                        <Grid item style={{ width: '150px' }}>\r\n                                            <Typography>Loại</Typography>\r\n                                        </Grid>\r\n                                        <Grid item container flex={1} spacing={2}>\r\n                                            <Grid container item>\r\n                                                <Grid item>\r\n                                                    <Typography sx={{ width: '50px' }}>Năm</Typography>\r\n                                                </Grid>\r\n                                                <Grid item flex={1}>\r\n                                                    <MySelect\r\n                                                        value={yearGrade}\r\n                                                        onChange={handleChangeYear}\r\n                                                    >\r\n                                                        <MenuItem value=\"0\">Không</MenuItem>\r\n                                                        {yearGradeArr.map(el =>\r\n                                                            <MenuItem key={el.Nam} value={el.Nam}>{el.Nam}</MenuItem>\r\n                                                        )}\r\n                                                    </MySelect>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Grid container item>\r\n                                                <Grid item >\r\n                                                    <Typography sx={{ width: '50px' }}>Loại</Typography>\r\n                                                </Grid>\r\n                                                <Grid item flex={1}>\r\n                                                    <MySelect\r\n                                                        value={fieldValue}\r\n                                                        onChange={handleChangeFieldValue}\r\n                                                    >\r\n                                                        <MenuItem value=\"0\">Tất cả</MenuItem>\r\n                                                        {\r\n                                                            fieldArr.map(el =>\r\n                                                                <MenuItem key={el[\"MaLoai\"]} value={el[\"MaLoai\"]}>{el[\"TenLoai\"]}</MenuItem>\r\n                                                            )\r\n                                                        }\r\n                                                    </MySelect>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid style={{ width: '100%', textAlign: 'center', marginTop: 16 }}>\r\n                                        <MyButton onClick={handleSubmit(onSubmit)} style={{ margin: '0 auto', marginRight: '8px' }} info >Liệt kê</MyButton>\r\n                                        <Button variant=\"outlined\" onClick={handleReset} style={{ margin: '0 auto', }} variant=\"outlined\" >Reset</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Typography>* Tra cứu theo kết quả biểu quyết</Typography>\r\n\r\n                                    <Grid container spacing={2}>\r\n                                        <Grid item style={{ width: '150px', marginTop: '16px' }}>\r\n                                            <Typography>Thời gian</Typography>\r\n                                        </Grid>\r\n                                        <Grid item container flex={1} alignItems=\"center\" spacing={2}>\r\n                                            <Grid item>\r\n                                                <InputGrid\r\n                                                    noTitle\r\n                                                    type=\"date\"\r\n                                                    name=\"TuNgay\"\r\n                                                    // defaultValue=\"\"\r\n                                                    control={control}\r\n                                                    errors={errors}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item>\r\n\r\n                                                <InputGrid\r\n                                                    noTitle\r\n                                                    type=\"date\"\r\n                                                    name=\"DenNgay\"\r\n                                                    // defaultValue=\"\"\r\n                                                    control={control}\r\n                                                    errors={errors}\r\n                                                    rules={{\r\n                                                        validate: value => {\r\n                                                            if (!value && !getValues(\"TuNgay\")) return true\r\n                                                            if (new Date(value) >= new Date(TuNgay.current))\r\n                                                                return true\r\n                                                            else\r\n                                                                return \"Ngày kết thúc phải lớn hơn ngày bắt đầu\"\r\n                                                        }\r\n                                                    }}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container sx={{ marginTop: 2 }} alignItems=\"center\">\r\n                                        <Grid item style={{ width: '150px' }}>\r\n                                        </Grid>\r\n                                        <MyButton onClick={handleSubmit(handleSubmitDate)} sx={{ margin: '2px 8px 2px 0px' }} info>Tra cứu</MyButton>\r\n                                        {`Tìm thấy ${pollArr.length} cuộc biểu quyết`}\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Grid container sx={{ mt: 2 }}>\r\n                                            <Grid item style={{ width: '150px' }}>\r\n                                                <Typography>Cuộc biểu quyết</Typography>\r\n                                            </Grid>\r\n                                            <Grid item flex={1}\r\n                                                sx={{\r\n                                                    textOverflow: 'ellipsis',\r\n                                                    whiteSpace: 'nowrap',\r\n                                                    overflow: 'hidden',\r\n                                                }}>\r\n                                                <MySelectReactHookForm\r\n                                                    select\r\n                                                    onChange={handleChangeSelect}\r\n                                                    name=\"poll\"\r\n                                                    defaultValue=\"0\"\r\n                                                    control={control}\r\n                                                    errors={errors}\r\n                                                >\r\n                                                    <MenuItem value=\"0\">Không</MenuItem>\r\n                                                    {pollArr.length &&\r\n                                                        pollArr.map((el, index) =>\r\n                                                            <MenuItem key={index} value={el.MaBieuQuyet}>{el.TenBieuQuyet + \" - \" + el.PhamVi}</MenuItem>\r\n                                                        )\r\n                                                    }\r\n                                                </MySelectReactHookForm>\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n                                    </Grid>\r\n                                    <Grid style={{ width: '100%', textAlign: 'center', marginTop: 16 }}>\r\n                                        <MyButton onClick={handleSubmit(onSubmitByPoll)} style={{ margin: '0 auto', marginRight: '8px' }} info >Liệt kê</MyButton>\r\n                                        <Button variant=\"outlined\" onClick={handleResetPoll} style={{ margin: '0 auto' }} >Reset</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid sx={{ marginTop: '2px' }} container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n                                <Grid item>\r\n                                    {customList(left)}\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Grid container direction=\"column\" alignItems=\"center\">\r\n                                        <Button\r\n                                            sx={{ my: 0.5 }}\r\n                                            variant=\"outlined\"\r\n                                            size=\"small\"\r\n                                            onClick={handleAllRight}\r\n                                            disabled={left.length === 0}\r\n                                            aria-label=\"move all right\"\r\n                                        >\r\n                                            ≫\r\n                                        </Button>\r\n                                        <Button\r\n                                            sx={{ my: 0.5 }}\r\n                                            variant=\"outlined\"\r\n                                            size=\"small\"\r\n                                            onClick={handleCheckedRight}\r\n                                            disabled={leftChecked.length === 0}\r\n                                            aria-label=\"move selected right\"\r\n                                        >\r\n                                            &gt;\r\n                                        </Button>\r\n                                        <Button\r\n                                            sx={{ my: 0.5 }}\r\n                                            variant=\"outlined\"\r\n                                            size=\"small\"\r\n                                            onClick={handleCheckedLeft}\r\n                                            disabled={rightChecked.length === 0}\r\n                                            aria-label=\"move selected left\"\r\n                                        >\r\n                                            &lt;\r\n                                        </Button>\r\n                                        <Button\r\n                                            sx={{ my: 0.5 }}\r\n                                            variant=\"outlined\"\r\n                                            size=\"small\"\r\n                                            onClick={handleAllLeft}\r\n                                            disabled={right.length === 0}\r\n                                            aria-label=\"move all left\"\r\n                                        >\r\n                                            ≪\r\n                                        </Button>\r\n                                        <Button\r\n                                            sx={{ my: 0.5 }}\r\n                                            variant=\"outlined\"\r\n                                            size=\"small\"\r\n                                            onClick={handleResetAll}\r\n                                            disabled={false}\r\n                                            aria-label=\"move all left\"\r\n                                        >\r\n                                            Reset\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item>{customList(right)}</Grid>\r\n                            </Grid>\r\n\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={handleClose} >\r\n                                Hủy\r\n                            </Button>\r\n                            <MyButton onClick={handleAdd} success>\r\n                                Thêm\r\n                            </MyButton>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                    :\r\n                    <Dialog PaperProps={{ style: { minWidth: '700px' } }} open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                        <DialogTitle id=\"form-dialog-title\">Thêm ứng cử viên</DialogTitle>\r\n                        <DialogContent>\r\n                            <Grid container sx={{ marginTop: 2 }}>\r\n                                <Grid item style={{ width: '150px' }}>\r\n                                    <Typography>Loại</Typography>\r\n                                </Grid>\r\n                                <Grid item container flex={1} spacing={2}>\r\n                                    <Grid container item>\r\n                                        <Grid item>\r\n                                            <Typography sx={{ width: '50px' }}>Năm</Typography>\r\n                                        </Grid>\r\n                                        <Grid item flex={1}>\r\n                                            <MySelect\r\n                                                value={yearGrade}\r\n                                                onChange={handleChangeYear}\r\n                                            >\r\n                                                <MenuItem value=\"0\">Không</MenuItem>\r\n                                                {yearGradeArr.map(el =>\r\n                                                    <MenuItem key={el.Nam} value={el.Nam}>{el.Nam}</MenuItem>\r\n                                                )}\r\n                                            </MySelect>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container item>\r\n                                        <Grid item >\r\n                                            <Typography sx={{ width: '50px' }}>Loại</Typography>\r\n                                        </Grid>\r\n                                        <Grid item flex={1}>\r\n                                            <MySelect\r\n                                                value={fieldValue}\r\n                                                onChange={handleChangeFieldValue}\r\n                                            >\r\n                                                <MenuItem value=\"0\">Tất cả</MenuItem>\r\n                                                {\r\n                                                    fieldArr.map(el =>\r\n                                                        <MenuItem key={el[\"MaLoai\"]} value={el[\"MaLoai\"]}>{el[\"TenLoai\"]}</MenuItem>\r\n                                                    )\r\n                                                }\r\n                                            </MySelect>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid style={{ width: '100%', textAlign: 'center', marginTop: 16 }}>\r\n                                <MyButton onClick={handleSubmit(onSubmit)} style={{ margin: '0 auto', marginRight: '8px' }} info >Liệt kê</MyButton>\r\n                                <Button variant=\"outlined\" onClick={handleReset} style={{ margin: '0 auto', }} info >Reset</Button>\r\n                            </Grid>\r\n                            <Grid sx={{ marginTop: '2px' }} container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n                                <Grid item>\r\n                                    {customList(left)}\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Grid container direction=\"column\" alignItems=\"center\">\r\n                                        <Button\r\n                                            sx={{ my: 0.5 }}\r\n                                            variant=\"outlined\"\r\n                                            size=\"small\"\r\n                                            onClick={handleAllRight}\r\n                                            disabled={left.length === 0}\r\n                                            aria-label=\"move all right\"\r\n                                        >\r\n                                            ≫\r\n                                        </Button>\r\n                                        <Button\r\n                                            sx={{ my: 0.5 }}\r\n                                            variant=\"outlined\"\r\n                                            size=\"small\"\r\n                                            onClick={handleCheckedRight}\r\n                                            disabled={leftChecked.length === 0}\r\n                                            aria-label=\"move selected right\"\r\n                                        >\r\n                                            &gt;\r\n                                        </Button>\r\n                                        <Button\r\n                                            sx={{ my: 0.5 }}\r\n                                            variant=\"outlined\"\r\n                                            size=\"small\"\r\n                                            onClick={handleCheckedLeft}\r\n                                            disabled={rightChecked.length === 0}\r\n                                            aria-label=\"move selected left\"\r\n                                        >\r\n                                            &lt;\r\n                                        </Button>\r\n                                        <Button\r\n                                            sx={{ my: 0.5 }}\r\n                                            variant=\"outlined\"\r\n                                            size=\"small\"\r\n                                            onClick={handleAllLeft}\r\n                                            disabled={right.length === 0}\r\n                                            aria-label=\"move all left\"\r\n                                        >\r\n                                            ≪\r\n                                        </Button>\r\n                                        <Button\r\n                                            sx={{ my: 0.5 }}\r\n                                            variant=\"outlined\"\r\n                                            size=\"small\"\r\n                                            onClick={handleResetAll}\r\n                                            disabled={false}\r\n                                            aria-label=\"move all left\"\r\n                                        >\r\n                                            Reset\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item>{customList(right)}</Grid>\r\n                            </Grid>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={handleClose} >\r\n                                Hủy\r\n                            </Button>\r\n                            <MyButton onClick={handleAdd} success>\r\n                                Thêm\r\n                            </MyButton>\r\n                        </DialogActions>\r\n                    </Dialog >\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddCandidateForm;","import AddIcon from '@mui/icons-material/Add';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    FormControlLabel,\r\n    Grid, List,\r\n    ListItem, ListItemIcon, ListItemText, MenuItem, Paper\r\n} from '@mui/material';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { filterPartyMember } from '../action/partyMemberAction';\r\nimport { CategoryContext } from '../contextAPI/CategoryContext';\r\nimport { InfoContext } from '../contextAPI/InfoContext';\r\nimport { LoadingContext } from '../contextAPI/LoadingContext';\r\nimport { SnackbarContext } from '../contextAPI/SnackbarContext';\r\nimport InputGrid from './InputGrid';\r\nimport MyButton from './UI/MyButton';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    inputItem: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    inputWrapper: {\r\n        position: 'relative',\r\n    },\r\n    closeIcon: {\r\n        position: 'absolute',\r\n        top: '8px',\r\n        right: '8px',\r\n        backgroundColor: theme.palette.common.white,\r\n        cursor: 'pointer'\r\n    }\r\n}))\r\n\r\nconst AddVoterForm = (props) => {\r\n    const classes = useStyles();\r\n    const { setVoter } = props;\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const { category, categoryDispatch } = useContext(CategoryContext);\r\n    const { info } = useContext(InfoContext);\r\n    const isDeP = info.info.Quyen[\"12\"] == 1;\r\n    const { openSnackbarDispatch } = useContext(SnackbarContext);\r\n    const { loadingDispatch } = useContext(LoadingContext);\r\n\r\n    const [includeReserve, setIncludeReserve] = useState(true)\r\n    const [gradeArr, setGradeArr] = useState([])\r\n    const [checked, setChecked] = useState([]);\r\n    const [left, setLeft] = useState([]);\r\n    const [right, setRight] = useState([]);\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        control,\r\n        setValue,\r\n        watch,\r\n        formState: { errors }\r\n    } = useForm();\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const handleAdd = () => {\r\n        if (right.length < 2) {\r\n            openSnackbarDispatch({\r\n                type: 'SET_OPEN',\r\n                payload: {\r\n                    msg: \"Phải có ít nhất 2 người tham gia\",\r\n                    type: \"error\"\r\n                }\r\n            })\r\n        } else {\r\n            setOpen(false);\r\n            setVoter(right.map(el => ({ HoTen: el.HoTen, MaNguoiThamGia: el.MaSoDangVien })))\r\n        }\r\n    }\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true)\r\n    }\r\n    const onSubmit = async (data) => {\r\n        // setRight([]);\r\n        loadingDispatch({ type: 'OPEN_LOADING' })\r\n        data.notreserve = includeReserve\r\n        const res = await filterPartyMember(data);\r\n        setLeft(res)\r\n        loadingDispatch({ type: 'CLOSE_LOADING' })\r\n    }\r\n\r\n    const handleChangeSelect = (e) => {\r\n        setValue(e.target.name, e.target.value)\r\n    }\r\n\r\n    function not(a, b) {\r\n        return a.filter((value) => b.indexOf(value) === -1);\r\n    }\r\n\r\n    function intersection(a, b) {\r\n        return a.filter((value) => b.indexOf(value) !== -1);\r\n    }\r\n\r\n    const leftChecked = intersection(checked, left);\r\n    const rightChecked = intersection(checked, right);\r\n\r\n    const handleToggle = (value) => () => {\r\n        const currentIndex = checked.indexOf(value);\r\n        const newChecked = [...checked];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value);\r\n        } else {\r\n            newChecked.splice(currentIndex, 1);\r\n        }\r\n\r\n        setChecked(newChecked);\r\n    };\r\n\r\n    const handleAllRight = () => {\r\n        const sum = right.concat(left)\r\n        var result = sum.reduce((unique, o) => {\r\n            if (!unique.some(obj => obj.MaSoDangVien == o.MaSoDangVien)) {\r\n                unique.push(o);\r\n            }\r\n            return unique;\r\n        }, []);\r\n\r\n        setRight(result);\r\n        setLeft([]);\r\n    };\r\n\r\n    const handleCheckedRight = () => {\r\n        const sum = right.concat(leftChecked)\r\n        var result = sum.reduce((unique, o) => {\r\n            if (!unique.some(obj => obj.MaSoDangVien === o.MaSoDangVien)) {\r\n                unique.push(o);\r\n            }\r\n            return unique;\r\n        }, []);\r\n\r\n        setRight(result);\r\n        setLeft(not(left, leftChecked));\r\n        setChecked(not(checked, leftChecked));\r\n    };\r\n\r\n    const handleCheckedLeft = () => {\r\n        setLeft(left.concat(rightChecked));\r\n        setRight(not(right, rightChecked));\r\n        setChecked(not(checked, rightChecked));\r\n    };\r\n\r\n    const handleAllLeft = () => {\r\n        setLeft(left.concat(right));\r\n        setRight([]);\r\n    };\r\n\r\n    const handleReset = () => {\r\n        setLeft([]);\r\n        setRight([]);\r\n    }\r\n\r\n    const customList = (items) => (\r\n        <Paper variant=\"outlined\" sx={{ width: 250, height: 300, overflow: 'auto' }}>\r\n            <List dense component=\"div\" role=\"list\">\r\n                {items.map((value, index) => {\r\n                    const labelId = `transfer-list-item-${index}-label`;\r\n\r\n                    return (\r\n                        <ListItem\r\n                            key={index}\r\n                            role=\"listitem\"\r\n                            button\r\n                            onClick={handleToggle(value)}\r\n                        >\r\n                            <ListItemIcon>\r\n                                <Checkbox\r\n                                    checked={checked.indexOf(value) !== -1}\r\n                                    tabIndex={-1}\r\n                                    disableRipple\r\n                                    inputProps={{\r\n                                        'aria-labelledby': labelId,\r\n                                    }}\r\n                                />\r\n                            </ListItemIcon>\r\n                            <ListItemText id={labelId} primary={value.HoTen + \" - \" + value.MaSoDangVien} />\r\n                        </ListItem>\r\n                    );\r\n                })}\r\n                <ListItem />\r\n            </List>\r\n        </Paper>\r\n    )\r\n\r\n    useEffect(() => {\r\n        category.categories.grade.length > 0 &&\r\n            category.categories.grade.map(el => {\r\n                if (el.Nam == (new Date()).getFullYear()) {\r\n                    setGradeArr(el.Data)\r\n                }\r\n            })\r\n    }, [category.categories.grade])\r\n\r\n    return (\r\n        <>\r\n            <MyButton onClick={handleOpen} success><AddIcon />Thêm</MyButton>\r\n            <Dialog PaperProps={{ style: { minWidth: '700px' } }} open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Thêm đơn vị biểu quyết</DialogTitle>\r\n                <DialogContent>\r\n                    <InputGrid\r\n                        select\r\n                        onChange={handleChangeSelect}\r\n                        nameTitle={\"Chi bộ\"}\r\n                        name=\"partycell\"\r\n                        defaultValue={isDeP ? \"0\" : info.info.MaChiBo}\r\n                        disabled={!isDeP}\r\n                        control={control}\r\n                        errors={errors}\r\n                    >\r\n                        <MenuItem value=\"0\">Tất cả</MenuItem>\r\n                        {\r\n                            category.categories[\"partycell\"].map(el =>\r\n                                <MenuItem key={el.MaChiBo} value={el.MaChiBo} >{el.TenChiBo}</MenuItem>\r\n                            )\r\n                        }\r\n                    </InputGrid>\r\n                    <InputGrid\r\n                        select\r\n                        onChange={handleChangeSelect}\r\n                        nameTitle={\"Chức vụ\"}\r\n                        name=\"position\"\r\n                        defaultValue=\"0\"\r\n                        control={control}\r\n                        errors={errors}\r\n                    >\r\n                        <MenuItem value=\"0\">Tất cả</MenuItem>\r\n                        {\r\n                            category.categories[\"position\"].map(el =>\r\n                                <MenuItem key={el.MaChucVu} value={el.MaChucVu} >{el.TenChucVu}</MenuItem>\r\n                            )\r\n                        }\r\n                    </InputGrid>\r\n                    <Grid container>\r\n                        <Grid item style={{ width: '150px' }}>\r\n\r\n                        </Grid>\r\n                        <Grid item flex={1}>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        checked={includeReserve}\r\n                                        onChange={() => setIncludeReserve(!includeReserve)}\r\n\r\n                                    />}\r\n                                label=\"Không hiển thị Đảng viên dự bị\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid style={{ width: '100%', textAlign: 'center', marginTop: 16 }}>\r\n                        <MyButton onClick={handleSubmit(onSubmit)} style={{ margin: '0 auto' }} info >Liệt kê</MyButton>\r\n                    </Grid>\r\n\r\n                    <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n                        <Grid item>{customList(left)}</Grid>\r\n                        <Grid item>\r\n                            <Grid container direction=\"column\" alignItems=\"center\">\r\n                                <Button\r\n                                    sx={{ my: 0.5 }}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    onClick={handleAllRight}\r\n                                    disabled={left.length === 0}\r\n                                    aria-label=\"move all right\"\r\n                                >\r\n                                    ≫\r\n                                </Button>\r\n                                <Button\r\n                                    sx={{ my: 0.5 }}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    onClick={handleCheckedRight}\r\n                                    disabled={leftChecked.length === 0}\r\n                                    aria-label=\"move selected right\"\r\n                                >\r\n                                    &gt;\r\n                                </Button>\r\n                                <Button\r\n                                    sx={{ my: 0.5 }}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    onClick={handleCheckedLeft}\r\n                                    disabled={rightChecked.length === 0}\r\n                                    aria-label=\"move selected left\"\r\n                                >\r\n                                    &lt;\r\n                                </Button>\r\n                                <Button\r\n                                    sx={{ my: 0.5 }}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    onClick={handleAllLeft}\r\n                                    disabled={right.length === 0}\r\n                                    aria-label=\"move all left\"\r\n                                >\r\n                                    ≪\r\n                                </Button>\r\n                                <Button\r\n                                    sx={{ my: 0.5 }}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    onClick={handleReset}\r\n                                    disabled={false}\r\n                                    aria-label=\"move all left\"\r\n                                >\r\n                                    Reset\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>{customList(right)}</Grid>\r\n                    </Grid>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} >\r\n                        Hủy\r\n                    </Button>\r\n                    <MyButton onClick={handleAdd} success>\r\n                        Thêm\r\n                    </MyButton>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddVoterForm;","import {\r\n    Chip, Grid,\r\n    MenuItem,\r\n    Paper, Typography\r\n} from '@mui/material';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\nimport React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { getAllCategory } from '../action/categoryAction';\r\nimport { createPoll } from '../action/votingAction';\r\nimport AddCandidateForm from '../component/AddCandidateForm';\r\nimport AddVoterForm from '../component/AddVoterForm';\r\nimport InputGrid from '../component/InputGrid';\r\nimport Layout from '../component/Layout';\r\nimport MyButton from '../component/UI/MyButton';\r\nimport { CategoryContext } from '../contextAPI/CategoryContext';\r\nimport { InfoContext } from '../contextAPI/InfoContext';\r\nimport { SnackbarContext } from '../contextAPI/SnackbarContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    header: {\r\n        marginBottom: '40px'\r\n    },\r\n    headerContent: {\r\n        textTransform: 'uppercase',\r\n        fontWeight: '600',\r\n    },\r\n    paper: {\r\n        padding: '16px',\r\n        marginBottom: '16px',\r\n        width: '900px',\r\n        margin: '0 auto'\r\n        // width: 'fit-content'\r\n    },\r\n    title: {\r\n        marginBottom: '20px'\r\n    },\r\n    flex: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        marginBottom: '40px'\r\n    },\r\n    // inputItem: {\r\n    //     marginBottom: theme.spacing(2),\r\n    // },\r\n}))\r\n\r\nconst CreateVoting = () => {\r\n    const classes = useStyles();\r\n\r\n    const { category, categoryDispatch } = useContext(CategoryContext);\r\n    const { info } = useContext(InfoContext);\r\n    const { openSnackbarDispatch } = useContext(SnackbarContext);\r\n    const [candidate, setCandidate] = useState([]);\r\n    const [voter, setVoter] = useState([]);\r\n    const [type, setType] = useState(\"Biểu quyết có số dư\");\r\n\r\n    const {\r\n        handleSubmit,\r\n        control,\r\n        setValue,\r\n        setError,\r\n        clearErrors,\r\n        getValues,\r\n        reset,\r\n        watch,\r\n        formState: { errors }\r\n    } = useForm();\r\n\r\n    const ThoiGianBatDau = useRef({});\r\n    ThoiGianBatDau.current = watch(\"ThoiGianBatDau\", \"\");\r\n    const SoPhut = useRef({});\r\n    SoPhut.current = watch(\"ThoiGianNhacNho\", 0)\r\n\r\n    const handleChangeSelect = (e) => {\r\n        if (e.target.value != 0) {\r\n            clearErrors(e.target.name)\r\n        }\r\n        setValue(e.target.name, e.target.value)\r\n    }\r\n\r\n    const handleChangeType = (e) => {\r\n        setValue(e.target.name, e.target.value)\r\n        setType(e.target.value);\r\n    }\r\n\r\n    const onSubmit = async (data) => {\r\n        console.log(data);\r\n        if (candidate.length == 0) {\r\n            openSnackbarDispatch({\r\n                type: 'SET_OPEN',\r\n                payload: {\r\n                    msg: \"Bạn chưa chọn ứng cử viên\",\r\n                    type: \"error\"\r\n                }\r\n            })\r\n            return;\r\n        }\r\n        if (voter.length == 0) {\r\n            openSnackbarDispatch({\r\n                type: 'SET_OPEN',\r\n                payload: {\r\n                    msg: \"Bạn chưa chọn đơn vị tham gia\",\r\n                    type: \"error\"\r\n                }\r\n            })\r\n            return;\r\n        }\r\n        if (candidate.length == 1 && data.LoaiBieuQuyet == \"Biểu quyết có số dư\") {\r\n            openSnackbarDispatch({\r\n                type: 'SET_OPEN',\r\n                payload: {\r\n                    msg: \"Biểu quyết có số dư phải chọn ít nhất 2 ứng cử viên!\",\r\n                    type: \"error\"\r\n                }\r\n            })\r\n            return;\r\n        }\r\n\r\n        data.UngCuVien = candidate.map(el => el.MaUngCuVien);\r\n        data.NguoiThamGia = voter.map(el => el.MaNguoiThamGia);\r\n        const res = await createPoll(data);\r\n        if (res) {\r\n            openSnackbarDispatch({\r\n                type: 'SET_OPEN',\r\n                payload: {\r\n                    msg: \"Đã tạo cuộc biểu quyết\",\r\n                    type: \"success\"\r\n                }\r\n            })\r\n            reset({\r\n                TenBieuQuyet: \"\",\r\n                ThoiGianBatDau: \"\",\r\n                ThoiGianKetThuc: \"\",\r\n                SoPhieuToiDa: 1,\r\n            });\r\n            setCandidate([]);\r\n            setVoter([]);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllCategory(categoryDispatch, \"achievement\");\r\n        getAllCategory(categoryDispatch, \"partycell\");\r\n        getAllCategory(categoryDispatch, \"position\");\r\n        getAllCategory(categoryDispatch, \"grade\");\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Layout sidebar>\r\n                <div className={classes.header} >\r\n                    <Typography className={classes.headerContent} variant=\"h5\">\r\n                        Tạo Biểu quyết\r\n                    </Typography>\r\n                </div>\r\n                <Paper className={classes.paper} variant=\"outlined\">\r\n                    <Typography style={{ textTransform: 'uppercase', marginBottom: 30 }}>Tạo biểu quyết</Typography>\r\n                    <Grid container className={classes.inputItem} alignItems=\"center\">\r\n                        <Grid item xs={4}>\r\n                            <Typography>Tên biểu quyết</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            <InputGrid\r\n                                noTitle\r\n                                name=\"TenBieuQuyet\"\r\n                                control={control}\r\n                                errors={errors}\r\n                                rules={{\r\n                                    required: \"Vui lòng nhập trường này!\",\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container className={classes.inputItem} alignItems=\"center\">\r\n                        <Grid item xs={4}>\r\n                            <Typography>Mục đích</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            <InputGrid\r\n                                select\r\n                                noTitle\r\n                                onChange={handleChangeSelect}\r\n                                name=\"MucDich\"\r\n                                defaultValue=\"0\"\r\n                                control={control}\r\n                                errors={errors}\r\n                                rules={{\r\n                                    validate: value =>\r\n                                        value != 0 || \"Vui lòng nhập trường này!\"\r\n                                }}\r\n                            >\r\n                                <MenuItem value=\"0\">Chọn</MenuItem>\r\n                                <MenuItem value=\"Khen thưởng\">Khen thưởng</MenuItem>\r\n                                <MenuItem value=\"Kỷ luật\">Kỷ luật</MenuItem>\r\n                                <MenuItem value=\"Khác\">Khác</MenuItem>\r\n                            </InputGrid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container className={classes.inputItem} alignItems=\"center\">\r\n                        <Grid item xs={4}>\r\n                            <Typography>Loại biểu quyết</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            <InputGrid\r\n                                select\r\n                                noTitle\r\n                                onChange={handleChangeType}\r\n                                name=\"LoaiBieuQuyet\"\r\n                                defaultValue=\"Biểu quyết có số dư\"\r\n                                control={control}\r\n                                errors={errors}\r\n                            >\r\n                                <MenuItem value=\"Biểu quyết có số dư\">Biểu quyết có số dư</MenuItem>\r\n                                <MenuItem value=\"Biểu quyết tín nhiệm\">Biểu quyết tín nhiệm</MenuItem>\r\n                            </InputGrid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {\r\n                        type == \"Biểu quyết có số dư\" &&\r\n                        <Grid container className={classes.inputItem} alignItems=\"center\" >\r\n                            <Grid item xs={4}>\r\n                                <Typography>Số phiếu tối đa</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={8}>\r\n                                <InputGrid\r\n                                    noTitle\r\n                                    type=\"number\"\r\n                                    defaultValue=\"1\"\r\n                                    name=\"SoPhieuToiDa\"\r\n                                    control={control}\r\n                                    errors={errors}\r\n                                    InputProps={{ inputProps: { min: 1 } }}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    }\r\n\r\n                    <Grid container className={classes.inputItem} alignItems=\"center\">\r\n                        <Grid item xs={4}>\r\n                            <Typography>Thời gian bắt đầu</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            <InputGrid\r\n                                noTitle\r\n                                type=\"datetime-local\"\r\n                                name=\"ThoiGianBatDau\"\r\n                                control={control}\r\n                                errors={errors}\r\n                                rules={{\r\n                                    required: \"Vui lòng nhập trường này!\",\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container className={classes.inputItem} alignItems=\"center\">\r\n                        <Grid item xs={4}>\r\n                            <Typography>Thời gian kết thúc</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            <InputGrid\r\n                                noTitle\r\n                                type=\"datetime-local\"\r\n                                name=\"ThoiGianKetThuc\"\r\n                                control={control}\r\n                                errors={errors}\r\n                                rules={{\r\n                                    required: \"Vui lòng nhập trường này!\",\r\n                                    validate: value => {\r\n                                        if (new Date(value) < new Date(ThoiGianBatDau.current))\r\n                                            return \"Thời gian kết thúc phải lớn hơn thời gian bắt đầu\"\r\n                                        if (new Date(value) < new Date())\r\n                                            return \"Thời gian kết thúc phải hơn thời gian hiện tại\"\r\n                                        let date = new Date(value);\r\n                                        date.setMinutes(date.getMinutes() - SoPhut.current);\r\n                                        if (date < new Date()) {\r\n                                            return \"Đã quá thời gian nhắc nhở\"\r\n                                        }\r\n                                        return true\r\n                                    }\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container className={classes.inputItem} alignItems=\"center\" >\r\n                        <Grid item xs={4}>\r\n                            <Typography>Phạm vi</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            <InputGrid\r\n                                noTitle\r\n                                name=\"PhamVi\"\r\n                                control={control}\r\n                                errors={errors}\r\n                                rules={{\r\n                                    required: \"Vui lòng nhập trường này!\",\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container className={classes.inputItem} alignItems=\"center\" >\r\n                        <Grid item xs={4}>\r\n                            <Typography>Thời gian nhắc nhở (phút)</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            <InputGrid\r\n                                noTitle\r\n                                type=\"number\"\r\n                                InputProps={{ inputProps: { min: 10 } }}\r\n                                defaultValue=\"10\"\r\n                                name=\"ThoiGianNhacNho\"\r\n                                control={control}\r\n                                errors={errors}\r\n                                rules={{\r\n                                    required: \"Vui lòng nhập trường này!\",\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container style={{ marginTop: '16px' }} >\r\n                        <Grid item xs={4}>\r\n                            <Typography>Ứng cử viên</Typography>\r\n                        </Grid>\r\n                        <Grid item container xs={8}>\r\n                            {\r\n                                candidate.length > 0 &&\r\n                                candidate.map(el =>\r\n                                    <Grid item xs={12}>\r\n                                        <Chip style={{ marginBottom: '12px' }}\r\n                                            size=\"medium\"\r\n                                            varian=\"outlined\"\r\n                                            label={el.HoTen + \" - \" + el.MaUngCuVien}\r\n                                        />\r\n                                    </Grid>\r\n                                )\r\n                            }\r\n                            <Grid item xs={12}>\r\n                                <AddCandidateForm setCandidate={setCandidate} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container style={{ marginTop: '16px' }} >\r\n                        <Grid item xs={4}>\r\n                            <Typography>Đơn vị tham gia</Typography>\r\n                        </Grid>\r\n                        <Grid item container xs={8}>\r\n                            <Grid item xs={12}>\r\n                                {\r\n                                    voter.length > 0 &&\r\n                                    voter.map(el =>\r\n                                        <Chip style={{ marginBottom: '12px', marginRight: '4px' }}\r\n                                            size=\"small\"\r\n                                            varian=\"outlined\"\r\n                                            label={el.HoTen + \" - \" + el.MaNguoiThamGia}\r\n                                        />\r\n                                    )\r\n                                }\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <AddVoterForm voter={voter} setVoter={setVoter} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container style={{ marginTop: '16px' }} >\r\n                        <Grid item xs={4}>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            <MyButton onClick={handleSubmit(onSubmit)} info>Tạo</MyButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Layout>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CreateVoting;"],"sourceRoot":""}